{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\src\\\\Components\\\\HttpRequest.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { httpHistory } from '../store/actions/httpHistoryActions';\nimport HttpRequestHeaders from \"./HttpRequestHeaders\";\nimport HttpRequestBody from \"./HttpRequestBody\";\nimport HttpResponse from \"./HttpResponse\";\nimport { Tabs, Tab, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nclass HttpRequest extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      url: \"\",\n      result: \"\",\n      method: \"GET\",\n      body: \"\",\n      headerKeys: [\"Content-Type\"],\n      headerValues: [\"application/json\"],\n      headers: {},\n      showHeader: true,\n      showBody: false\n    };\n\n    this.handleUrlChange = event => {\n      this.setState({\n        url: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const headObj = {};\n      this.state.headerKeys.map((headerKey, index) => {\n        return headObj[headerKey] = this.state.headerValues[index];\n      });\n      let bodyInput = \"\";\n\n      if (this.state.body.length !== 0) {\n        bodyInput = JSON.parse(this.state.body);\n      }\n\n      this.setState({\n        body: JSON.stringify(bodyInput),\n        headers: headObj\n      }, () => {\n        this.props.httpHistory(this.state, this.props.auth);\n        console.log(this.state);\n\n        if (this.state.method === \"GET\") {\n          fetch(this.state.url, {\n            headers: this.state.headers\n          }).then(a => a.json()).then(result => this.setState({\n            result: JSON.stringify(result)\n          })).catch(err => {//console.log(\"error\" + err);\n          }); //console.log(this.state);\n        } else {\n          fetch(this.state.url, {\n            headers: this.state.headers,\n            method: this.state.method,\n            body: JSON.stringify(this.state.body)\n          }).then(a => a.json()).then(result => this.setState({\n            result: JSON.stringify(result)\n          })).catch(err => {//console.log(\"error\" + err);\n          }); //console.log(this.state);\n        }\n      });\n    };\n\n    this.handleSelectChange = event => {\n      this.setState({\n        method: event.target.value\n      });\n    };\n\n    this.handleHeaderRemove = index => {\n      this.state.headerKeys.splice(index, 1);\n      this.state.headerValues.splice(index, 1);\n      this.setState({\n        headerKeys: this.state.headerKeys\n      });\n      this.setState({\n        headervalues: this.state.headerValues\n      });\n    };\n\n    this.handleHeaderKeyChange = (e, index) => {\n      this.state.headerKeys[index] = e.target.value; // //console.log(this.state.bodyKey);\n\n      this.setState({\n        headerKeys: this.state.headerKeys\n      });\n    };\n\n    this.handleHeaderValueChange = (e, index) => {\n      this.state.headerValues[index] = e.target.value; // //console.log(this.state.bodyKey);\n\n      this.setState({\n        headerValues: this.state.headerValues\n      });\n    };\n\n    this.addHeader = () => {\n      this.setState({\n        headerKeys: [...this.state.headerKeys, \"\"]\n      });\n      this.setState({\n        headerValues: [...this.state.headerValues, \"\"]\n      });\n    };\n\n    this.onClickHeader = () => {\n      this.setState({\n        showHeader: true,\n        showBody: false\n      });\n    };\n\n    this.onClickBody = () => {\n      this.setState({\n        showHeader: false,\n        showBody: true\n      });\n    };\n\n    this.handleBodyRawInputChange = e => {\n      this.setState({\n        body: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log('hello world');\n    console.log('thsi is waht we fet afet', this.props.historyData);\n    let history = this.props.historyData;\n\n    if (Object.keys(history).length !== 0) {\n      this.setState({\n        url: history.url,\n        method: history.method,\n        body: history.body,\n        headerKeys: history.headerKeys,\n        headerValues: history.headerValues,\n        headers: history.body\n      });\n    }\n  }\n\n  render() {\n    console.log('print history data', this.props.historyData);\n    return React.createElement(\"div\", {\n      className: \"urlArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, this.state.url === \"\" ? React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        fontFamily: 'Helvetica'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Untitled\") : React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        fontFamily: 'Helvetica'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.state.url), React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.handleSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.state.method === \"GET\" ? React.createElement(\"option\", {\n      value: \"GET\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"GET\") : React.createElement(\"option\", {\n      value: \"GET\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"GET\"), this.state.method === \"POST\" ? React.createElement(\"option\", {\n      value: \"POST\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"POST\") : React.createElement(\"option\", {\n      value: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"POST\"), this.state.method === \"PUT\" ? React.createElement(\"option\", {\n      value: \"PUT\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"PUT\") : React.createElement(\"option\", {\n      value: \"PUT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"PUT\"), this.state.method === \"DELETE\" ? React.createElement(\"option\", {\n      value: \"DELETE\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"DELETE\") : React.createElement(\"option\", {\n      value: \"DELETE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"DELETE\")), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.url,\n      onChange: this.handleUrlChange,\n      className: \"inputUrl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Send\",\n      className: \"sendButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(Tabs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Header\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Body\")), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(HttpRequestHeaders, {\n      addHeader: e => {\n        this.addHeader(e);\n      },\n      handleHeaderRemove: index => {\n        this.handleHeaderRemove(index);\n      },\n      handleHeaderValueChange: (e, index) => {\n        this.handleHeaderValueChange(e, index);\n      },\n      handleHeaderKeyChange: (e, index) => {\n        this.handleHeaderKeyChange(e, index);\n      },\n      headerValues: this.state.headerValues,\n      headerKeys: this.state.headerKeys,\n      showHeader: this.state.showHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(HttpRequestBody, {\n      body: this.state.body,\n      showBody: this.state.showBody,\n      handleBodyRawInputChange: e => {\n        this.handleBodyRawInputChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"response-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Response\"), React.createElement(HttpResponse, {\n      result: this.state.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    historyData: state.historyData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    httpHistory: (newHttpData, auth) => dispatch(httpHistory(newHttpData, auth))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HttpRequest);","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/Components/HttpRequest.jsx"],"names":["React","Component","connect","httpHistory","HttpRequestHeaders","HttpRequestBody","HttpResponse","Tabs","Tab","TabList","TabPanel","HttpRequest","state","url","result","method","body","headerKeys","headerValues","headers","showHeader","showBody","handleUrlChange","event","setState","target","value","handleFormSubmit","preventDefault","headObj","map","headerKey","index","bodyInput","length","JSON","parse","stringify","props","auth","console","log","fetch","then","a","json","catch","err","handleSelectChange","handleHeaderRemove","splice","headervalues","handleHeaderKeyChange","e","handleHeaderValueChange","addHeader","onClickHeader","onClickBody","handleBodyRawInputChange","componentDidMount","historyData","history","Object","keys","render","fontWeight","fontFamily","mapStateToProps","mapDispatchToProps","dispatch","newHttpData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport { connect } from 'react-redux';\r\nimport { httpHistory } from '../store/actions/httpHistoryActions'\r\n\r\n\r\n\r\nimport HttpRequestHeaders from \"./HttpRequestHeaders\";\r\nimport HttpRequestBody from \"./HttpRequestBody\";\r\nimport HttpResponse from \"./HttpResponse\";\r\nimport {Tabs,Tab,TabList,TabPanel} from \"react-tabs\"\r\nimport \"react-tabs/style/react-tabs.css\" \r\n\r\nclass HttpRequest extends Component {\r\n  state = {\r\n    url: \"\",\r\n    result: \"\",\r\n    method: \"GET\",\r\n    body: \"\",\r\n    headerKeys: [\"Content-Type\"],\r\n    headerValues: [\"application/json\"],\r\n    headers: {},\r\n    showHeader: true,\r\n    showBody: false\r\n  };\r\n  componentDidMount(){\r\n    console.log('hello world')\r\n    console.log('thsi is waht we fet afet',this.props.historyData)\r\n    let history=this.props.historyData;\r\n    if(Object.keys(history).length !== 0 ){\r\n      this.setState({url: history.url,\r\n        method: history.method,\r\n        body: history.body,\r\n        headerKeys: history.headerKeys,\r\n        headerValues: history.headerValues,\r\n        headers: history.body\r\n         })\r\n    }\r\n   }\r\n  handleUrlChange = event => {\r\n    this.setState({ url: event.target.value });\r\n  };\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const headObj = {};\r\n    this.state.headerKeys.map((headerKey, index) => {\r\n      return (headObj[headerKey] = this.state.headerValues[index]);\r\n    });\r\n    let bodyInput=\"\";\r\n    if(this.state.body.length!==0)\r\n    {\r\n      bodyInput = JSON.parse(this.state.body)\r\n    }\r\n\r\n    this.setState({ body: JSON.stringify(bodyInput),headers: headObj },()=>{\r\n      this.props.httpHistory(this.state,this.props.auth)\r\n      console.log(this.state);\r\n      if (this.state.method === \"GET\") {\r\n        fetch(this.state.url, {\r\n          headers: this.state.headers\r\n        })\r\n          .then(a => a.json())\r\n          .then(result => this.setState({ result: JSON.stringify(result) }))\r\n          .catch(err => {\r\n            //console.log(\"error\" + err);\r\n          });\r\n        //console.log(this.state);\r\n      } else {\r\n        fetch(this.state.url, {\r\n          headers: this.state.headers,\r\n          method: this.state.method,\r\n          body: JSON.stringify(this.state.body)\r\n        })\r\n          .then(a => a.json())\r\n          .then(result => this.setState({ result: JSON.stringify(result) }))\r\n          .catch(err => {\r\n            //console.log(\"error\" + err);\r\n          });\r\n        //console.log(this.state);\r\n      }\r\n\r\n    } )\r\n         \r\n        \r\n  };\r\n\r\n  handleSelectChange = event => {\r\n    this.setState({ method: event.target.value });\r\n  };\r\n\r\n  handleHeaderRemove = index => {\r\n    this.state.headerKeys.splice(index, 1);\r\n    this.state.headerValues.splice(index, 1);\r\n    this.setState({ headerKeys: this.state.headerKeys });\r\n    this.setState({ headervalues: this.state.headerValues });\r\n  };\r\n\r\n  handleHeaderKeyChange = (e, index) => {\r\n    this.state.headerKeys[index] = e.target.value;\r\n    // //console.log(this.state.bodyKey);\r\n    this.setState({ headerKeys: this.state.headerKeys });\r\n  };\r\n\r\n  handleHeaderValueChange = (e, index) => {\r\n    this.state.headerValues[index] = e.target.value;\r\n    // //console.log(this.state.bodyKey);\r\n    this.setState({ headerValues: this.state.headerValues });\r\n  };\r\n\r\n  \r\n\r\n  addHeader = () => {\r\n    this.setState({ headerKeys: [...this.state.headerKeys, \"\"] });\r\n    this.setState({ headerValues: [...this.state.headerValues, \"\"] });\r\n  };\r\n  onClickHeader = () => {\r\n    this.setState({ showHeader: true, showBody: false });\r\n  };\r\n  onClickBody = () => {\r\n    this.setState({ showHeader: false, showBody: true });\r\n  };\r\n  handleBodyRawInputChange = e => {\r\n    this.setState({ body: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    console.log('print history data', this.props.historyData)\r\n    \r\n    return (\r\n      <div className=\"urlArea\">\r\n        {this.state.url===\"\" ? <p style={{ fontWeight: 'bold', fontFamily: 'Helvetica' }}>Untitled</p> : <p style={{ fontWeight: 'bold', fontFamily: 'Helvetica' }}>{this.state.url}</p>}\r\n          \r\n\r\n        <form onSubmit={this.handleFormSubmit}>\r\n          <select onChange={this.handleSelectChange}>\r\n             {this.state.method===\"GET\"?<option value=\"GET\" selected>GET</option>:<option value=\"GET\">GET</option>}\r\n            {this.state.method===\"POST\"?<option value=\"POST\" selected>POST</option>:<option value=\"POST\">POST</option>}\r\n            {this.state.method===\"PUT\"?<option value=\"PUT\" selected>PUT</option>:<option value=\"PUT\">PUT</option>}\r\n            {this.state.method===\"DELETE\"?<option value=\"DELETE\" selected>DELETE</option>:<option value=\"DELETE\">DELETE</option>}\r\n\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.url}\r\n            onChange={this.handleUrlChange}\r\n            className=\"inputUrl\"\r\n          />\r\n          <input type=\"submit\" value=\"Send\" className=\"sendButton\" />\r\n        </form>\r\n        \r\n        \r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>\r\n            Header\r\n            </Tab>\r\n            <Tab>\r\n            Body\r\n            </Tab>\r\n          </TabList>\r\n          <TabPanel>\r\n          <HttpRequestHeaders addHeader={(e)=>{this.addHeader(e)}} handleHeaderRemove={(index)=>{this.handleHeaderRemove(index)}} handleHeaderValueChange={(e, index)=>{this.handleHeaderValueChange(e,index)}} handleHeaderKeyChange={(e, index)=>{this.handleHeaderKeyChange(e,index)}} headerValues={this.state.headerValues} headerKeys={this.state.headerKeys} showHeader={this.state.showHeader}/>\r\n        \r\n          </TabPanel>\r\n          <TabPanel>\r\n          <HttpRequestBody body={this.state.body} showBody={this.state.showBody} handleBodyRawInputChange={(e)=>{this.handleBodyRawInputChange(e)}}/>\r\n        \r\n          </TabPanel>\r\n        </Tabs>\r\n       <div className=\"response-label\">\r\n         Response\r\n       </div>\r\n        <HttpResponse result={this.state.result}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    historyData: state.historyData\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    httpHistory: (newHttpData, auth) => dispatch(httpHistory(newHttpData, auth))\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HttpRequest);\r\n"]},"metadata":{},"sourceType":"module"}