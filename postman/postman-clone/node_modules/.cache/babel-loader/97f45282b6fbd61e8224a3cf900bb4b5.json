{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\src\\\\Components\\\\CollectionTab.jsx\";\nimport React, { Component } from \"react\";\nimport Modal from \"react-modal\";\nimport CollectionList from \"./CollectionList\";\nimport firebase from \"../config/fbConfig\";\nimport { connect } from \"react-redux\";\nModal.setAppElement(\"#root\");\nconst modalStyle = {\n  overlay: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.75)\"\n  },\n  content: {\n    position: \"relative\",\n    width: \"400px\",\n    height: \"400px\",\n    padding: \"0\",\n    background: \"#f0eee9\"\n  }\n};\n\nclass CollectionTab extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      openModal: false,\n      collectionList: [],\n      alertMessage: false\n    };\n\n    this.handleOpenModal = () => {\n      this.setState({\n        openModal: true\n      });\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        openModal: false\n      });\n    };\n\n    this.addCollection = () => {\n      if (this.refs.collectionInput.value !== \"\") {\n        let newCollection = {\n          uid: this.props.auth.uid,\n          collectionName: this.refs.collectionInput.value,\n          RequestUrl: []\n        };\n        console.log(\"before\", newCollection);\n        this.setState({\n          alertMessage: false\n        });\n        firebase.firestore().collection(\"UserCollection\").add(newCollection).then(function (docRef) {\n          newCollection[\"collectionId\"] = newCollection[\"uid\"];\n          newCollection[\"collectionId\"] = docRef.id;\n          delete newCollection[\"uid\"];\n          console.log(\"Document written with ID: \", docRef.id);\n        }).then(() => {\n          this.setState({\n            collectionList: [newCollection, ...this.state.collectionList]\n          });\n        }).catch(function (error) {\n          console.error(\"Error adding document: \", error);\n        });\n        console.log(\"after\", newCollection);\n        this.handleCloseModal();\n      } else {\n        this.setState({\n          alertMessage: true\n        });\n      }\n    };\n\n    this.fetchingCollectionData = () => {\n      firebase.firestore().collection(\"UserCollection\").get().then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          if (doc.data().uid === this.props.auth.uid) {\n            let list = this.state.collectionList.slice();\n            let collectionData = {\n              collectionId: doc.id,\n              collectionName: doc.data().collectionName,\n              RequestUrl: doc.data().RequestUrl\n            };\n            list.push(collectionData);\n            this.setState({\n              collectionList: list\n            });\n          }\n        });\n      });\n    };\n\n    this.deletingCollection = id => {\n      firebase.firestore().collection(\"UserCollection\").doc(\"\".concat(id)).delete().then(function () {\n        console.log(\"Document successfully deleted!\");\n      }).then(() => {\n        this.setState({\n          collectionList: this.state.collectionList.filter(collection => collection.collectionId !== id)\n        });\n      }).catch(function (error) {\n        console.error(\"Error removing document: \", error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchingCollectionData();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleOpenModal,\n      className: \"newCollectionButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"+ New Collection\"), React.createElement(\"div\", {\n      className: \"collectionList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(CollectionList, {\n      list: this.state.collectionList,\n      deletingCollection: this.deletingCollection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      isOpen: this.state.openModal,\n      style: modalStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modalHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"CREATE A NEW COLLECTION\"), React.createElement(\"button\", {\n      onClick: this.handleCloseModal,\n      className: \"modalCloseButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"X\")), React.createElement(\"div\", {\n      className: \"modalBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"collectionInput\",\n      placeholder: \"Collection Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.addCollection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Submit\")), this.state.alertMessage ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Please include a valid collection name\") : null));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nexport default connect(mapStateToProps)(CollectionTab);","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/Components/CollectionTab.jsx"],"names":["React","Component","Modal","CollectionList","firebase","connect","setAppElement","modalStyle","overlay","display","justifyContent","alignItems","backgroundColor","content","position","width","height","padding","background","CollectionTab","state","openModal","collectionList","alertMessage","handleOpenModal","setState","handleCloseModal","addCollection","refs","collectionInput","value","newCollection","uid","props","auth","collectionName","RequestUrl","console","log","firestore","collection","add","then","docRef","id","catch","error","fetchingCollectionData","get","querySnapshot","forEach","doc","data","list","slice","collectionData","collectionId","push","deletingCollection","delete","filter","componentDidMount","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEAH,KAAK,CAACI,aAAN,CAAoB,OAApB;AACA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,eAAe,EAAE;AAJV,GADQ;AAOjBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,UADH;AAEPC,IAAAA,KAAK,EAAE,OAFA;AAGPC,IAAAA,MAAM,EAAE,OAHD;AAIPC,IAAAA,OAAO,EAAE,GAJF;AAKPC,IAAAA,UAAU,EAAE;AALL;AAPQ,CAAnB;;AAgBA,MAAMC,aAAN,SAA4BlB,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCmB,KADoC,GAC5B;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,cAAc,EAAE,EAFV;AAGNC,MAAAA,YAAY,EAAE;AAHR,KAD4B;;AAAA,SAMpCC,eANoC,GAMlB,MAAM;AACtB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KARmC;;AAAA,SASpCK,gBAToC,GASjB,MAAM;AACvB,WAAKD,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAXmC;;AAAA,SAYpCM,aAZoC,GAYpB,MAAM;AACpB,UAAI,KAAKC,IAAL,CAAUC,eAAV,CAA0BC,KAA1B,KAAoC,EAAxC,EAA4C;AAC1C,YAAIC,aAAa,GAAG;AAClBC,UAAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,GADH;AAElBG,UAAAA,cAAc,EAAE,KAAKP,IAAL,CAAUC,eAAV,CAA0BC,KAFxB;AAGlBM,UAAAA,UAAU,EAAE;AAHM,SAApB;AAKAC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBP,aAAtB;AACA,aAAKN,QAAL,CAAc;AAAEF,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACAnB,QAAAA,QAAQ,CACLmC,SADH,GAEGC,UAFH,CAEc,gBAFd,EAGGC,GAHH,CAGOV,aAHP,EAIGW,IAJH,CAIQ,UAASC,MAAT,EAAiB;AACrBZ,UAAAA,aAAa,CAAC,cAAD,CAAb,GAAgCA,aAAa,CAAC,KAAD,CAA7C;AACAA,UAAAA,aAAa,CAAC,cAAD,CAAb,GAAgCY,MAAM,CAACC,EAAvC;AACA,iBAAOb,aAAa,CAAC,KAAD,CAApB;AACAM,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CK,MAAM,CAACC,EAAjD;AACD,SATH,EAUGF,IAVH,CAUQ,MAAM;AACV,eAAKjB,QAAL,CAAc;AACZH,YAAAA,cAAc,EAAE,CAACS,aAAD,EAAgB,GAAG,KAAKX,KAAL,CAAWE,cAA9B;AADJ,WAAd;AAGD,SAdH,EAeGuB,KAfH,CAeS,UAASC,KAAT,EAAgB;AACrBT,UAAAA,OAAO,CAACS,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACD,SAjBH;AAkBAT,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,aAArB;AAEA,aAAKL,gBAAL;AACD,OA7BD,MA6BO;AACL,aAAKD,QAAL,CAAc;AAAEF,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACD;AACF,KA7CmC;;AAAA,SAkDpCwB,sBAlDoC,GAkDX,MAAM;AAC7B3C,MAAAA,QAAQ,CACLmC,SADH,GAEGC,UAFH,CAEc,gBAFd,EAGGQ,GAHH,GAIGN,IAJH,CAIQO,aAAa,IAAI;AACrBA,QAAAA,aAAa,CAACC,OAAd,CAAsBC,GAAG,IAAI;AAC3B,cAAIA,GAAG,CAACC,IAAJ,GAAWpB,GAAX,KAAmB,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,GAAvC,EAA4C;AAC1C,gBAAIqB,IAAI,GAAG,KAAKjC,KAAL,CAAWE,cAAX,CAA0BgC,KAA1B,EAAX;AACA,gBAAIC,cAAc,GAAG;AACnBC,cAAAA,YAAY,EAAEL,GAAG,CAACP,EADC;AAEnBT,cAAAA,cAAc,EAAEgB,GAAG,CAACC,IAAJ,GAAWjB,cAFR;AAGnBC,cAAAA,UAAU,EAAEe,GAAG,CAACC,IAAJ,GAAWhB;AAHJ,aAArB;AAKAiB,YAAAA,IAAI,CAACI,IAAL,CAAUF,cAAV;AACA,iBAAK9B,QAAL,CAAc;AAAEH,cAAAA,cAAc,EAAE+B;AAAlB,aAAd;AACD;AACF,SAXD;AAYD,OAjBH;AAkBD,KArEmC;;AAAA,SAsEpCK,kBAtEoC,GAsEfd,EAAE,IAAI;AACzBxC,MAAAA,QAAQ,CACLmC,SADH,GAEGC,UAFH,CAEc,gBAFd,EAGGW,GAHH,WAGUP,EAHV,GAIGe,MAJH,GAKGjB,IALH,CAKQ,YAAW;AACfL,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD,OAPH,EAQGI,IARH,CAQQ,MAAM;AACV,aAAKjB,QAAL,CAAc;AACZH,UAAAA,cAAc,EAAE,KAAKF,KAAL,CAAWE,cAAX,CAA0BsC,MAA1B,CACdpB,UAAU,IAAIA,UAAU,CAACgB,YAAX,KAA4BZ,EAD5B;AADJ,SAAd;AAKD,OAdH,EAeGC,KAfH,CAeS,UAASC,KAAT,EAAgB;AACrBT,QAAAA,OAAO,CAACS,KAAR,CAAc,2BAAd,EAA2CA,KAA3C;AACD,OAjBH;AAkBD,KAzFmC;AAAA;;AA8CpCe,EAAAA,iBAAiB,GAAG;AAClB,SAAKd,sBAAL;AACD;;AA2CDe,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKtC,eAAtB;AAAuC,MAAA,SAAS,EAAC,qBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAIE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AACE,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWE,cADnB;AAEE,MAAA,kBAAkB,EAAE,KAAKoC,kBAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,EAUE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAKtC,KAAL,CAAWC,SAA1B;AAAqC,MAAA,KAAK,EAAEd,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AACE,MAAA,OAAO,EAAE,KAAKmB,gBADhB;AAEE,MAAA,SAAS,EAAC,kBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CADF,EAUE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,GAAG,EAAC,iBAFN;AAGE,MAAA,WAAW,EAAC,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE;AAAQ,MAAA,OAAO,EAAE,KAAKC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CAVF,EAqBG,KAAKP,KAAL,CAAWG,YAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADD,GAEG,IAvBN,CAVF,CADF;AAsCD;;AAlImC;;AAqItC,MAAMwC,eAAe,GAAG3C,KAAK,IAAI;AAC/B,SAAO;AACLc,IAAAA,IAAI,EAAEd,KAAK,CAAChB,QAAN,CAAe8B;AADhB,GAAP;AAGD,CAJD;;AAKA,eAAe7B,OAAO,CAAC0D,eAAD,CAAP,CAAyB5C,aAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport CollectionList from \"./CollectionList\";\r\nimport firebase from \"../config/fbConfig\";\r\nimport { connect } from \"react-redux\";\r\n\r\nModal.setAppElement(\"#root\");\r\nconst modalStyle = {\r\n  overlay: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.75)\"\r\n  },\r\n  content: {\r\n    position: \"relative\",\r\n    width: \"400px\",\r\n    height: \"400px\",\r\n    padding: \"0\",\r\n    background: \"#f0eee9\"\r\n  }\r\n};\r\n\r\nclass CollectionTab extends Component {\r\n  state = {\r\n    openModal: false,\r\n    collectionList: [],\r\n    alertMessage: false\r\n  };\r\n  handleOpenModal = () => {\r\n    this.setState({ openModal: true });\r\n  };\r\n  handleCloseModal = () => {\r\n    this.setState({ openModal: false });\r\n  };\r\n  addCollection = () => {\r\n    if (this.refs.collectionInput.value !== \"\") {\r\n      let newCollection = {\r\n        uid: this.props.auth.uid,\r\n        collectionName: this.refs.collectionInput.value,\r\n        RequestUrl: []\r\n      };\r\n      console.log(\"before\", newCollection);\r\n      this.setState({ alertMessage: false });\r\n      firebase\r\n        .firestore()\r\n        .collection(\"UserCollection\")\r\n        .add(newCollection)\r\n        .then(function(docRef) {\r\n          newCollection[\"collectionId\"] = newCollection[\"uid\"];\r\n          newCollection[\"collectionId\"] = docRef.id;\r\n          delete newCollection[\"uid\"];\r\n          console.log(\"Document written with ID: \", docRef.id);\r\n        })\r\n        .then(() => {\r\n          this.setState({\r\n            collectionList: [newCollection, ...this.state.collectionList]\r\n          });\r\n        })\r\n        .catch(function(error) {\r\n          console.error(\"Error adding document: \", error);\r\n        });\r\n      console.log(\"after\", newCollection);\r\n\r\n      this.handleCloseModal();\r\n    } else {\r\n      this.setState({ alertMessage: true });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.fetchingCollectionData();\r\n  }\r\n\r\n  fetchingCollectionData = () => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"UserCollection\")\r\n      .get()\r\n      .then(querySnapshot => {\r\n        querySnapshot.forEach(doc => {\r\n          if (doc.data().uid === this.props.auth.uid) {\r\n            let list = this.state.collectionList.slice();\r\n            let collectionData = {\r\n              collectionId: doc.id,\r\n              collectionName: doc.data().collectionName,\r\n              RequestUrl: doc.data().RequestUrl\r\n            };\r\n            list.push(collectionData);\r\n            this.setState({ collectionList: list });\r\n          }\r\n        });\r\n      });\r\n  };\r\n  deletingCollection = id => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"UserCollection\")\r\n      .doc(`${id}`)\r\n      .delete()\r\n      .then(function() {\r\n        console.log(\"Document successfully deleted!\");\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          collectionList: this.state.collectionList.filter(\r\n            collection => collection.collectionId !== id\r\n          )\r\n        });\r\n      })\r\n      .catch(function(error) {\r\n        console.error(\"Error removing document: \", error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <button onClick={this.handleOpenModal} className=\"newCollectionButton\">\r\n          + New Collection\r\n        </button>\r\n        <div className=\"collectionList\">\r\n          <CollectionList\r\n            list={this.state.collectionList}\r\n            deletingCollection={this.deletingCollection}\r\n          />\r\n        </div>\r\n        <Modal isOpen={this.state.openModal} style={modalStyle}>\r\n          <div className=\"modalHeader\">\r\n            <div>CREATE A NEW COLLECTION</div>\r\n            <button\r\n              onClick={this.handleCloseModal}\r\n              className=\"modalCloseButton\"\r\n            >\r\n              X\r\n            </button>\r\n          </div>\r\n          <div className=\"modalBody\">\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              ref=\"collectionInput\"\r\n              placeholder=\"Collection Name\"\r\n            />\r\n            <label>Description</label>\r\n            <textarea></textarea>\r\n            <button onClick={this.addCollection}>Submit</button>\r\n          </div>\r\n          {this.state.alertMessage ? (\r\n            <div>Please include a valid collection name</div>\r\n          ) : null}\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(CollectionTab);\r\n"]},"metadata":{},"sourceType":"module"}