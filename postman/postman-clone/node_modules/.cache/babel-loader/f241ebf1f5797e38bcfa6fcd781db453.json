{"ast":null,"code":"export const signIn = credentials => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password).then(() => {\n      dispatch({\n        type: 'LOGIN_SUCCESS'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'LOGIN_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const signOut = () => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({\n        type: 'SIGNOUT_SUCCESS'\n      });\n    });\n  };\n};\nexport const signUp = newUser => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(resp => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName\n      });\n    }).then(() => {\n      dispatch({\n        type: 'SIGNUP_SUCCESS'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'SIGNUP_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const GoogleSignIn = () => {\n  return (dispatch, getState, {\n    getFirebase,\n    firestore\n  }) => {\n    const firebase = getFirebase(); // const firestore=getFirestore();\n\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        return user;\n      }\n    }).then(res => {\n      const name = res.displayName.split(\" \");\n      console.log(name);\n      console.log(res.uid, res.displayName);\n      console.log('user logged in');\n      return firestore.collection('users').doc(res.user.uid).set({\n        firstName: name[0],\n        lastName: name[1]\n      });\n    }).then(() => {\n      dispatch({\n        type: 'GOOGLELOGIN_SUCCESS'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'LOGIN_ERROR',\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/store/actions/authAction.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","firebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","signOut","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","uid","set","firstName","lastName","GoogleSignIn","onAuthStateChanged","res","name","displayName","split","console","log"],"mappings":"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","sourcesContent":["export const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((resp) => {\r\n        return firestore\r\n          .collection('users')\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const GoogleSignIn = () => {\r\n  return (dispatch, getState, { getFirebase ,firestore }) => {\r\n    const firebase = getFirebase();\r\n    // const firestore=getFirestore();\r\n    firebase\r\n      .auth()\r\n      .onAuthStateChanged((user)=>{\r\n        if(user)\r\n        {\r\n          return user\r\n        }\r\n      })\r\n      .then((res)=>\r\n      {\r\n        const name=res.displayName.split(\" \")\r\n              console.log(name)\r\n              console.log(res.uid , res.displayName);\r\n              console.log('user logged in');\r\n              return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName:name[0],\r\n                lastName:name[1]\r\n              })\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'GOOGLELOGIN_SUCCESS' });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}