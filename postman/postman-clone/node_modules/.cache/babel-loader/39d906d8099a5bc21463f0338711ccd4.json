{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\src\\\\auth\\\\GoogleLogin.jsx\";\nimport React, { Component } from 'react';\nimport firebase from '../config/fbConfig';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { addAuthId } from '../store/actions/authAction';\nimport { connect } from 'react-redux';\n\nclass GoogleLogin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n    this.uiConfig = {\n      signInFlow: 'popup',\n      signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n      callbacks: {\n        signInSuccess: () => false\n      }\n    };\n\n    this.componentDidMount = () => {\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          const name = user.displayName.split(' ');\n          console.log(name);\n          console.log(user.uid, user.displayName);\n          console.log('user logged in');\n          this.props.addAuthId(user.uid, name);\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.state.isSignedIn ? React.createElement(React.Fragment, null) : React.createElement(StyledFirebaseAuth, {\n      uiConfig: this.uiConfig,\n      firebaseAuth: firebase.auth(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addAuthId: (userId, name) => dispatch(addAuthId(userId, name))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(GoogleLogin);","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/auth/GoogleLogin.jsx"],"names":["React","Component","firebase","StyledFirebaseAuth","addAuthId","connect","GoogleLogin","state","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccess","componentDidMount","onAuthStateChanged","user","name","displayName","split","console","log","uid","props","render","isSignedIn","mapDispatchToProps","dispatch","userId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AACA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCM,KADkC,GAC1B,EAD0B;AAAA,SAElCC,QAFkC,GAEvB;AACTC,MAAAA,UAAU,EAAE,OADH;AAETC,MAAAA,aAAa,EAAE,CAACR,QAAQ,CAACS,IAAT,CAAcC,kBAAd,CAAiCC,WAAlC,CAFN;AAGTC,MAAAA,SAAS,EAAE;AACTC,QAAAA,aAAa,EAAE,MAAM;AADZ;AAHF,KAFuB;;AAAA,SASlCC,iBATkC,GASd,MAAM;AACxBd,MAAAA,QAAQ,CAACS,IAAT,GAAgBM,kBAAhB,CAAoCC,IAAD,IAAU;AAC3C,YAAIA,IAAJ,EAAU;AACR,gBAAMC,IAAI,GAAGD,IAAI,CAACE,WAAL,CAAiBC,KAAjB,CAAuB,GAAvB,CAAb;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,GAAjB,EAAsBN,IAAI,CAACE,WAA3B;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,eAAKE,KAAL,CAAWrB,SAAX,CAAqBc,IAAI,CAACM,GAA1B,EAA+BL,IAA/B;AACD;AACF,OARD;AASD,KAnBiC;AAAA;;AAqBlCO,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKnB,KAAL,CAAWoB,UAAX,GACC,yCADD,GAGC,oBAAC,kBAAD;AACE,MAAA,QAAQ,EAAE,KAAKnB,QADjB;AAEE,MAAA,YAAY,EAAEN,QAAQ,CAACS,IAAT,EAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADF;AAYD;;AAlCiC;;AAqCpC,MAAMiB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLzB,IAAAA,SAAS,EAAE,CAAC0B,MAAD,EAASX,IAAT,KAAkBU,QAAQ,CAACzB,SAAS,CAAC0B,MAAD,EAASX,IAAT,CAAV;AADhC,GAAP;AAGD,CAJD;;AAMA,eAAed,OAAO,CACpB,IADoB,EAEpBuB,kBAFoB,CAAP,CAGbtB,WAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport firebase from '../config/fbConfig';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport { addAuthId } from '../store/actions/authAction';\r\nimport { connect } from 'react-redux';\r\nclass GoogleLogin extends Component {\r\n  state = {};\r\n  uiConfig = {\r\n    signInFlow: 'popup',\r\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\r\n    callbacks: {\r\n      signInSuccess: () => false\r\n    }\r\n  };\r\n  componentDidMount = () => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        const name = user.displayName.split(' ');\r\n        console.log(name);\r\n        console.log(user.uid, user.displayName);\r\n        console.log('user logged in');\r\n        this.props.addAuthId(user.uid, name);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isSignedIn ? (\r\n          <></>\r\n        ) : (\r\n          <StyledFirebaseAuth\r\n            uiConfig={this.uiConfig}\r\n            firebaseAuth={firebase.auth()}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addAuthId: (userId, name) => dispatch(addAuthId(userId, name))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(GoogleLogin);\r\n"]},"metadata":{},"sourceType":"module"}