{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const httpHistory = newHttpData => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    // const firebase=getFirebase();\n    const firestore = getFirestore();\n    firestore.collection('history').add(_objectSpread({}, newHttpData)).then(() => {\n      dispatch({\n        type: 'STORE_HTTPDATA',\n        newHttpData\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'STORE_HTTPDATA_ERROR',\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/store/actions/httpHistory.jsx"],"names":["httpHistory","newHttpData","dispatch","getState","getFirebase","getFirestore","firestore","collection","add","then","type","catch","err"],"mappings":";;;;;;AAAA,OAAO,MAAMA,WAAW,GAAIC,WAAD,IAAiB;AACxC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAArB,KAAuD;AAC1D;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AAEAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,SAArB,EAAgCC,GAAhC,mBACOP,WADP,GAEGQ,IAFH,CAEQ,MAAM;AACVP,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE,gBAAR;AAA0BT,QAAAA;AAA1B,OAAD,CAAR;AACH,KAJD,EAIGU,KAJH,CAISC,GAAG,IAAI;AACZV,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE,sBAAR;AAAgCE,QAAAA;AAAhC,OAAD,CAAR;AACH,KAND;AAOH,GAXD;AAYH,CAbM","sourcesContent":["export const httpHistory = (newHttpData) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // const firebase=getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firestore.collection('history').add({\r\n            ...newHttpData\r\n        }).then(() => {\r\n            dispatch({ type: 'STORE_HTTPDATA', newHttpData })\r\n        }).catch(err => {\r\n            dispatch({ type: 'STORE_HTTPDATA_ERROR', err })\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}