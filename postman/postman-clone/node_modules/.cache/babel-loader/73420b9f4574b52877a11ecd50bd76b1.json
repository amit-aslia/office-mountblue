{"ast":null,"code":"export const signIn = credentials => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password).then(() => {\n      dispatch({\n        type: 'LOGIN_SUCCESS'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'LOGIN_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const GoogleSignIn = () => {\n  return (dispatch, getState, {\n    getFirebase,\n    firestore\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password).then(() => {\n      dispatch({\n        type: 'LOGIN_SUCCESS'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'LOGIN_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const signOut = () => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({\n        type: 'SIGNOUT_SUCCESS'\n      });\n    });\n  };\n};\nexport const signUp = newUser => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(resp => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName\n      });\n    }).then(() => {\n      dispatch({\n        type: 'SIGNUP_SUCCESS'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'SIGNUP_ERROR',\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/store/actions/authAction.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","firebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","GoogleSignIn","firestore","signOut","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","collection","doc","user","uid","set","firstName","lastName"],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAIC,WAAD,IAAiB;AACrC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA;AAAF,GAArB,KAAyC;AAC9C,UAAMC,QAAQ,GAAGD,WAAW,EAA5B;AAEAC,IAAAA,QAAQ,CACLC,IADH,GAEGC,0BAFH,CAE8BN,WAAW,CAACO,KAF1C,EAEiDP,WAAW,CAACQ,QAF7D,EAGGC,IAHH,CAGQ,MAAM;AACVR,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KALH,EAMGC,KANH,CAMUC,GAAD,IAAS;AACdX,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE,aAAR;AAAuBE,QAAAA;AAAvB,OAAD,CAAR;AACD,KARH;AASD,GAZD;AAaD,CAdM;AAgBP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAO,CAACZ,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA,WAAF;AAAeW,IAAAA;AAAf,GAArB,KAAoD;AACzD,UAAMV,QAAQ,GAAGD,WAAW,EAA5B;AAEAC,IAAAA,QAAQ,CACLC,IADH,GAEGC,0BAFH,CAE8BN,WAAW,CAACO,KAF1C,EAEiDP,WAAW,CAACQ,QAF7D,EAGGC,IAHH,CAGQ,MAAM;AACVR,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KALH,EAMGC,KANH,CAMUC,GAAD,IAAS;AACdX,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE,aAAR;AAAuBE,QAAAA;AAAvB,OAAD,CAAR;AACD,KARH;AASD,GAZD;AAaD,CAdM;AAgBP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO,CAACd,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA;AAAF,GAArB,KAAyC;AAC9C,UAAMC,QAAQ,GAAGD,WAAW,EAA5B;AACAC,IAAAA,QAAQ,CACLC,IADH,GAEGU,OAFH,GAGGN,IAHH,CAGQ,MAAM;AACVR,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KALH;AAMD,GARD;AASD,CAVM;AAYP,OAAO,MAAMM,MAAM,GAAIC,OAAD,IAAa;AACjC,SAAO,CAAChB,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA,WAAF;AAAee,IAAAA;AAAf,GAArB,KAAuD;AAC5D,UAAMd,QAAQ,GAAGD,WAAW,EAA5B;AACA,UAAMW,SAAS,GAAGI,YAAY,EAA9B;AACAd,IAAAA,QAAQ,CACLC,IADH,GAEGc,8BAFH,CAEkCF,OAAO,CAACV,KAF1C,EAEiDU,OAAO,CAACT,QAFzD,EAGGC,IAHH,CAGSW,IAAD,IAAU;AACd,aAAON,SAAS,CACbO,UADI,CACO,OADP,EAEJC,GAFI,CAEAF,IAAI,CAACG,IAAL,CAAUC,GAFV,EAGJC,GAHI,CAGA;AACHC,QAAAA,SAAS,EAAET,OAAO,CAACS,SADhB;AAEHC,QAAAA,QAAQ,EAAEV,OAAO,CAACU;AAFf,OAHA,CAAP;AAOD,KAXH,EAYGlB,IAZH,CAYQ,MAAM;AACVR,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAdH,EAeGC,KAfH,CAeUC,GAAD,IAAS;AACdX,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE,cAAR;AAAwBE,QAAAA;AAAxB,OAAD,CAAR;AACD,KAjBH;AAkBD,GArBD;AAsBD,CAvBM","sourcesContent":["export const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const GoogleSignIn = () => {\r\n  return (dispatch, getState, { getFirebase ,firestore }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((resp) => {\r\n        return firestore\r\n          .collection('users')\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err });\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}