{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\src\\\\Components\\\\Newtabs.jsx\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport React, { Component } from 'react';\nimport HttpRequest from './HttpRequest';\nimport uuid from 'uuid';\nimport { connect } from 'react-redux';\nimport { addTabHistory } from '../store/actions/tabHistoryActions';\n\nclass Newtabs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      arr: [{\n        id: uuid(),\n        name: 'GET' // selected: false,\n\n      }]\n    };\n\n    this.handleClick = () => {\n      const arr = this.state.arr;\n      const newTabObject = {\n        id: uuid(),\n        name: \"GET\",\n        selected: false\n      };\n      this.setState({\n        arr: [...arr, newTabObject]\n      });\n    };\n\n    this.handleDelete = toDelete => {\n      console.log('thing to delete', toDelete);\n      const arr = this.state.arr;\n      const tabDeleteIndex = arr.findIndex(arr => arr.id === toDelete);\n      const updatedTabs = arr.filter((tab, index) => {\n        return index !== tabDeleteIndex;\n      });\n      this.setState({\n        arr: updatedTabs\n      });\n    };\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem('tabHistory', JSON.stringify(nextState.arr));\n  }\n\n  componentDidMount() {\n    const tab = JSON.parse(localStorage.getItem('tabHistory'));\n    if (tab !== null) this.setState({\n      arr: tab\n    }); // }\n  }\n\n  render() {\n    this.props.addTabHistory(this.state);\n    const arr = this.state.arr;\n    const name = arr.map((data, index) => {\n      // console.log('this is from new tab',data.id , this.state.arr)\n      return React.createElement(Tab, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tabListStyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, data.name, ' ', React.createElement(\"button\", {\n        onClick: () => this.handleDelete(data.id),\n        className: \"btn tabListButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"X\")));\n    });\n    const content = this.state.arr.map((data, index) => {\n      return React.createElement(TabPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(HttpRequest, {\n        key: uuid,\n        location: index,\n        index: data.id,\n        auth: this.props.auth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }));\n    });\n    const fun = React.createElement(Tabs, {\n      onSelect: tabIndex => {\n        console.log(tabIndex);\n        this.setState({\n          tabIndex\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      default: this.state.arr.length - 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, name, React.createElement(\"button\", {\n      onClick: this.handleClick,\n      className: \"btn newTabOpenButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"+\")), content);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, fun);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTabHistory: tabData => dispatch(addTabHistory(tabData))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    history: state.firestore.ordered.history\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Newtabs);","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/Components/Newtabs.jsx"],"names":["Tab","Tabs","TabList","TabPanel","React","Component","HttpRequest","uuid","connect","addTabHistory","Newtabs","state","arr","id","name","handleClick","newTabObject","selected","setState","handleDelete","toDelete","console","log","tabDeleteIndex","findIndex","updatedTabs","filter","tab","index","componentWillUpdate","nextProps","nextState","localStorage","setItem","JSON","stringify","componentDidMount","parse","getItem","render","props","map","data","content","auth","fun","tabIndex","length","mapDispatchToProps","dispatch","tabData","mapStateToProps","firebase","history","firestore","ordered"],"mappings":"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","sourcesContent":["import { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport React, { Component } from 'react';\r\nimport HttpRequest from './HttpRequest';\r\nimport uuid from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport { addTabHistory } from '../store/actions/tabHistoryActions';\r\n\r\nclass Newtabs extends Component {\r\n  state = {\r\n    arr: [\r\n      {\r\n        id: uuid(),\r\n        name: 'GET',\r\n        // selected: false,\r\n      \r\n      }\r\n    ]\r\n  };\r\n  componentWillUpdate(nextProps, nextState) {\r\n    localStorage.setItem('tabHistory', JSON.stringify(nextState.arr));\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { arr } = this.state;\r\n    const newTabObject = {\r\n      id: uuid(),\r\n      name: `GET`,\r\n      selected: false\r\n    };\r\n    this.setState({\r\n      arr: [...arr, newTabObject]\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    const tab = JSON.parse(localStorage.getItem('tabHistory'));\r\n    if(tab!==null)\r\n    this.setState({ arr: tab });\r\n\r\n    // }\r\n  }\r\n\r\n  handleDelete = (toDelete) => {\r\n    console.log('thing to delete', toDelete);\r\n    const { arr } = this.state;\r\n    const tabDeleteIndex = arr.findIndex((arr) => arr.id === toDelete);\r\n    const updatedTabs = arr.filter((tab, index) => {\r\n      return index !== tabDeleteIndex;\r\n    });\r\n    this.setState({\r\n      arr: updatedTabs\r\n    });\r\n  };\r\n  render() {\r\n    this.props.addTabHistory(this.state);\r\n    const { arr } = this.state;\r\n    const name = arr.map((data, index) => {\r\n      // console.log('this is from new tab',data.id , this.state.arr)\r\n      return (\r\n        <Tab>\r\n          <div className=\"tabListStyle\">\r\n            {data.name}{' '}\r\n            <button\r\n              onClick={() => this.handleDelete(data.id)}\r\n              className=\"btn tabListButton\"\r\n            >\r\n              X\r\n            </button>\r\n          </div>\r\n        </Tab>\r\n      );\r\n    });\r\n    const content = this.state.arr.map((data,index) => {\r\n      return (\r\n        <TabPanel>\r\n          <HttpRequest key={uuid} location={index} index={data.id} auth={this.props.auth} />\r\n          {/* {data.content} */}\r\n          {/* <HttpRequest\r\n            key={uuid}\r\n            index={data.id}\r\n            auth={this.props.auth}\r\n          /> */}\r\n        </TabPanel>\r\n      );\r\n    });\r\n\r\n    const fun = (\r\n      <Tabs onSelect={tabIndex =>\r\n        {\r\n          console.log(tabIndex)\r\n        this.setState({ tabIndex })}\r\n        }>\r\n        <TabList default={this.state.arr.length-1}>\r\n          {name}\r\n          <button onClick={this.handleClick} className=\"btn newTabOpenButton\">\r\n            +\r\n          </button>\r\n        </TabList>\r\n\r\n        {content}\r\n      </Tabs>\r\n    );\r\n\r\n    return <div>{fun}</div>;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTabHistory: (tabData) => dispatch(addTabHistory(tabData))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    history: state.firestore.ordered.history\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Newtabs);\r\n"]},"metadata":{},"sourceType":"module"}