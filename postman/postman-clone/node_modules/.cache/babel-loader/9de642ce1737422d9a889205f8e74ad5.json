{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\src\\\\components\\\\Dashboard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../store/actions/authAction';\nimport '../App.css';\nimport logo from \"../image/postman-logo.svg\";\nimport Sidebar from './Sidebar';\nimport { Redirect } from 'react-router-dom';\nimport HttpRequest from './HttpRequest';\n\nconst Dahboard = props => {\n  const auth = props.auth;\n  console.log(auth);\n  if (!auth.uid) return React.createElement(Redirect, {\n    to: \"/SignIn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  });\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"postmanImage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: '/',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: props.signOut,\n    className: \"right btn btn-floating black signoutButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Signout\")), React.createElement(\"img\", {\n    id: \"logo\",\n    src: logo,\n    alt: \"postman-logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"sidebarAndHttpRequestContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Sidebar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    className: \"httpRequest\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(HttpRequest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))));\n}; // }\n\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  // console.log(dispatch);\n  return {\n    signOut: () => dispatch(signOut())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dahboard);","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/components/Dashboard.js"],"names":["React","Link","connect","signOut","Sidebar","Redirect","HttpRequest","Dahboard","props","auth","console","log","uid","logo","mapStateToProps","state","firebase","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,OAAO,YAAP;;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA,QAClBC,IADkB,GACTD,KADS,CAClBC,IADkB;AAE1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,MAAI,CAACA,IAAI,CAACG,GAAV,EAAe,OAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACf,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAEJ,KAAK,CAACL,OADjB;AAEE,IAAA,SAAS,EAAC,4CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EASE;AAAK,IAAA,EAAE,EAAC,MAAR;AAAe,IAAA,GAAG,EAAEU,IAApB;AAA0B,IAAA,GAAG,EAAC,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,EAYE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CAZF,CADF;AAuBD,CA3BD,C,CA4BA;;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLN,IAAAA,IAAI,EAAEM,KAAK,CAACC,QAAN,CAAeP;AADhB,GAAP;AAGD,CAJD;;AAMA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AACvC;AACA,SAAO;AACLf,IAAAA,OAAO,EAAE,MAAMe,QAAQ,CAACf,OAAO,EAAR;AADlB,GAAP;AAGD,CALD;;AAOA,eAAeD,OAAO,CACpBY,eADoB,EAEpBG,kBAFoB,CAAP,CAGbV,QAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../store/actions/authAction';\r\nimport '../App.css';\r\nimport logo from '../image/postman-logo.svg';\r\nimport Sidebar from './Sidebar';\r\nimport { Redirect } from 'react-router-dom';\r\nimport HttpRequest from './HttpRequest';\r\n\r\nconst Dahboard = (props) => {\r\n  const { auth } = props;\r\n  console.log(auth);\r\n  if (!auth.uid) return <Redirect to=\"/SignIn\" />;\r\n  return (\r\n    <main>\r\n      <div className=\"postmanImage\">\r\n        <Link to={'/'}>\r\n          <button\r\n            onClick={props.signOut}\r\n            className=\"right btn btn-floating black signoutButton\"\r\n          >\r\n            Signout\r\n          </button>\r\n        </Link>\r\n        <img id=\"logo\" src={logo} alt=\"postman-logo\" />\r\n      </div>\r\n      <div className=\"sidebarAndHttpRequestContainer\">\r\n        <section className=\"sidebar\">\r\n          <Sidebar />\r\n        </section>\r\n        <section className=\"httpRequest\">\r\n          <HttpRequest />\r\n        </section>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n// }\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  // console.log(dispatch);\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dahboard);\r\n"]},"metadata":{},"sourceType":"module"}