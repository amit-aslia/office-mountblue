{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\src\\\\Components\\\\HttpRequest.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { httpHistory } from '../store/actions/httpHistoryActions';\nimport HttpRequestHeaders from './HttpRequestHeaders';\nimport HttpRequestBody from './HttpRequestBody';\nimport HttpResponse from './HttpResponse';\nimport { Tabs, Tab, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nclass HttpRequest extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      url: '',\n      result: '',\n      method: 'GET',\n      body: '',\n      headerKeys: ['Content-Type'],\n      headerValues: ['application/json'],\n      headers: {},\n      showHeader: true,\n      showBody: false\n    };\n\n    this.handleUrlChange = event => {\n      this.setState({\n        url: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const headObj = {};\n      this.state.headerKeys.map((headerKey, index) => {\n        return headObj[headerKey] = this.state.headerValues[index];\n      });\n      let bodyInput = '';\n\n      if (this.state.body.length !== 0) {\n        bodyInput = JSON.parse(this.state.body);\n      }\n\n      this.setState({\n        body: JSON.stringify(bodyInput),\n        headers: headObj\n      }, () => {\n        this.props.httpHistory(this.state, this.props.auth);\n        console.log(this.state);\n\n        if (this.state.method === 'GET') {\n          fetch(this.state.url, {\n            headers: this.state.headers\n          }).then(a => a.json()).then(result => this.setState({\n            result: JSON.stringify(result)\n          })).catch(err => {//console.log(\"error\" + err);\n          }); //console.log(this.state);\n        } else {\n          fetch(this.state.url, {\n            headers: this.state.headers,\n            method: this.state.method,\n            body: JSON.stringify(this.state.body)\n          }).then(a => a.json()).then(result => this.setState({\n            result: JSON.stringify(result)\n          })).catch(err => {//console.log(\"error\" + err);\n          }); //console.log(this.state);\n        }\n      });\n    };\n\n    this.handleSelectChange = event => {\n      this.setState({\n        method: event.target.value\n      });\n    };\n\n    this.handleHeaderRemove = index => {\n      this.state.headerKeys.splice(index, 1);\n      this.state.headerValues.splice(index, 1);\n      this.setState({\n        headerKeys: this.state.headerKeys\n      });\n      this.setState({\n        headervalues: this.state.headerValues\n      });\n    };\n\n    this.handleHeaderKeyChange = (e, index) => {\n      this.state.headerKeys[index] = e.target.value; // //console.log(this.state.bodyKey);\n\n      this.setState({\n        headerKeys: this.state.headerKeys\n      });\n    };\n\n    this.handleHeaderValueChange = (e, index) => {\n      this.state.headerValues[index] = e.target.value; // //console.log(this.state.bodyKey);\n\n      this.setState({\n        headerValues: this.state.headerValues\n      });\n    };\n\n    this.addHeader = () => {\n      this.setState({\n        headerKeys: [...this.state.headerKeys, '']\n      });\n      this.setState({\n        headerValues: [...this.state.headerValues, '']\n      });\n    };\n\n    this.onClickHeader = () => {\n      this.setState({\n        showHeader: true,\n        showBody: false\n      });\n    };\n\n    this.onClickBody = () => {\n      this.setState({\n        showHeader: false,\n        showBody: true\n      });\n    };\n\n    this.handleBodyRawInputChange = e => {\n      this.setState({\n        body: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    let history = this.props.historyData;\n\n    if (Object.keys(history).length !== 0) {\n      this.setState({\n        url: history.url,\n        method: history.method,\n        body: history.body,\n        headerKeys: history.headerKeys,\n        headerValues: history.headerValues,\n        headers: history.body\n      });\n    }\n  }\n\n  render() {\n    const tabID = this.props.tabHistory.arr.map(data => data.index === this.props.index);\n    console.log('this is props of httpHistory', tabID); // console.log('print history data', this.props.historyData);\n    // console.log('print tabHistory',this.props.tabHistory)\n\n    return React.createElement(\"div\", {\n      className: \"urlArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.state.url === '' ? React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        fontFamily: 'Helvetica'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Untitled\") : React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        fontFamily: 'Helvetica'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.state.url), React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.handleSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.state.method === 'GET' ? React.createElement(\"option\", {\n      value: \"GET\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"GET\") : React.createElement(\"option\", {\n      value: \"GET\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"GET\"), this.state.method === 'POST' ? React.createElement(\"option\", {\n      value: \"POST\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"POST\") : React.createElement(\"option\", {\n      value: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"POST\"), this.state.method === 'PUT' ? React.createElement(\"option\", {\n      value: \"PUT\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"PUT\") : React.createElement(\"option\", {\n      value: \"PUT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"PUT\"), this.state.method === 'DELETE' ? React.createElement(\"option\", {\n      value: \"DELETE\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"DELETE\") : React.createElement(\"option\", {\n      value: \"DELETE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"DELETE\")), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.url,\n      onChange: this.handleUrlChange,\n      className: \"inputUrl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Send\",\n      className: \"sendButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(Tabs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Header\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Body\")), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(HttpRequestHeaders, {\n      addHeader: e => {\n        this.addHeader(e);\n      },\n      handleHeaderRemove: index => {\n        this.handleHeaderRemove(index);\n      },\n      handleHeaderValueChange: (e, index) => {\n        this.handleHeaderValueChange(e, index);\n      },\n      handleHeaderKeyChange: (e, index) => {\n        this.handleHeaderKeyChange(e, index);\n      },\n      headerValues: this.state.headerValues,\n      headerKeys: this.state.headerKeys,\n      showHeader: this.state.showHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(HttpRequestBody, {\n      body: this.state.body,\n      showBody: this.state.showBody,\n      handleBodyRawInputChange: e => {\n        this.handleBodyRawInputChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"response-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Response\"), React.createElement(HttpResponse, {\n      result: this.state.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    historyData: state.historyData,\n    tabHistory: state.tabHistory\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    httpHistory: (newHttpData, auth) => dispatch(httpHistory(newHttpData, auth))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HttpRequest);","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/Components/HttpRequest.jsx"],"names":["React","Component","connect","httpHistory","HttpRequestHeaders","HttpRequestBody","HttpResponse","Tabs","Tab","TabList","TabPanel","HttpRequest","state","url","result","method","body","headerKeys","headerValues","headers","showHeader","showBody","handleUrlChange","event","setState","target","value","handleFormSubmit","preventDefault","headObj","map","headerKey","index","bodyInput","length","JSON","parse","stringify","props","auth","console","log","fetch","then","a","json","catch","err","handleSelectChange","handleHeaderRemove","splice","headervalues","handleHeaderKeyChange","e","handleHeaderValueChange","addHeader","onClickHeader","onClickBody","handleBodyRawInputChange","componentDidMount","history","historyData","Object","keys","render","tabID","tabHistory","arr","data","fontWeight","fontFamily","mapStateToProps","mapDispatchToProps","dispatch","newHttpData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { httpHistory } from '../store/actions/httpHistoryActions';\r\n\r\nimport HttpRequestHeaders from './HttpRequestHeaders';\r\nimport HttpRequestBody from './HttpRequestBody';\r\nimport HttpResponse from './HttpResponse';\r\nimport { Tabs, Tab, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\n\r\nclass HttpRequest extends Component {\r\n  state = {\r\n    url: '',\r\n    result: '',\r\n    method: 'GET',\r\n    body: '',\r\n    headerKeys: ['Content-Type'],\r\n    headerValues: ['application/json'],\r\n    headers: {},\r\n    showHeader: true,\r\n    showBody: false\r\n  };\r\n  componentDidMount() {\r\n    let history = this.props.historyData;\r\n    if (Object.keys(history).length !== 0) {\r\n      this.setState({\r\n        url: history.url,\r\n        method: history.method,\r\n        body: history.body,\r\n        headerKeys: history.headerKeys,\r\n        headerValues: history.headerValues,\r\n        headers: history.body\r\n      });\r\n    }\r\n  }\r\n  handleUrlChange = (event) => {\r\n    this.setState({ url: event.target.value });\r\n  };\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const headObj = {};\r\n    this.state.headerKeys.map((headerKey, index) => {\r\n      return (headObj[headerKey] = this.state.headerValues[index]);\r\n    });\r\n    let bodyInput = '';\r\n    if (this.state.body.length !== 0) {\r\n      bodyInput = JSON.parse(this.state.body);\r\n    }\r\n\r\n    this.setState({ body: JSON.stringify(bodyInput), headers: headObj }, () => {\r\n      this.props.httpHistory(this.state, this.props.auth);\r\n      console.log(this.state);\r\n      if (this.state.method === 'GET') {\r\n        fetch(this.state.url, {\r\n          headers: this.state.headers\r\n        })\r\n          .then((a) => a.json())\r\n          .then((result) => this.setState({ result: JSON.stringify(result) }))\r\n          .catch((err) => {\r\n            //console.log(\"error\" + err);\r\n          });\r\n        //console.log(this.state);\r\n      } else {\r\n        fetch(this.state.url, {\r\n          headers: this.state.headers,\r\n          method: this.state.method,\r\n          body: JSON.stringify(this.state.body)\r\n        })\r\n          .then((a) => a.json())\r\n          .then((result) => this.setState({ result: JSON.stringify(result) }))\r\n          .catch((err) => {\r\n            //console.log(\"error\" + err);\r\n          });\r\n        //console.log(this.state);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSelectChange = (event) => {\r\n    this.setState({ method: event.target.value });\r\n  };\r\n\r\n  handleHeaderRemove = (index) => {\r\n    this.state.headerKeys.splice(index, 1);\r\n    this.state.headerValues.splice(index, 1);\r\n    this.setState({ headerKeys: this.state.headerKeys });\r\n    this.setState({ headervalues: this.state.headerValues });\r\n  };\r\n\r\n  handleHeaderKeyChange = (e, index) => {\r\n    this.state.headerKeys[index] = e.target.value;\r\n    // //console.log(this.state.bodyKey);\r\n    this.setState({ headerKeys: this.state.headerKeys });\r\n  };\r\n\r\n  handleHeaderValueChange = (e, index) => {\r\n    this.state.headerValues[index] = e.target.value;\r\n    // //console.log(this.state.bodyKey);\r\n    this.setState({ headerValues: this.state.headerValues });\r\n  };\r\n\r\n  addHeader = () => {\r\n    this.setState({ headerKeys: [...this.state.headerKeys, ''] });\r\n    this.setState({ headerValues: [...this.state.headerValues, ''] });\r\n  };\r\n  onClickHeader = () => {\r\n    this.setState({ showHeader: true, showBody: false });\r\n  };\r\n  onClickBody = () => {\r\n    this.setState({ showHeader: false, showBody: true });\r\n  };\r\n  handleBodyRawInputChange = (e) => {\r\n    this.setState({ body: e.target.value });\r\n  };\r\n\r\n  render() {\r\n  const tabID=  this.props.tabHistory.arr.map(data=> data.index===this.props.index)\r\n\r\n    console.log('this is props of httpHistory',tabID)\r\n    // console.log('print history data', this.props.historyData);\r\n    // console.log('print tabHistory',this.props.tabHistory)\r\n\r\n    return (\r\n      <div className=\"urlArea\">\r\n        {this.state.url === '' ? (\r\n          <p style={{ fontWeight: 'bold', fontFamily: 'Helvetica' }}>\r\n            Untitled\r\n          </p>\r\n        ) : (\r\n          <p style={{ fontWeight: 'bold', fontFamily: 'Helvetica' }}>\r\n            {this.state.url}\r\n          </p>\r\n        )}\r\n\r\n        <form onSubmit={this.handleFormSubmit}>\r\n          <select onChange={this.handleSelectChange}>\r\n            {this.state.method === 'GET' ? (\r\n              <option value=\"GET\" selected>\r\n                GET\r\n              </option>\r\n            ) : (\r\n              <option value=\"GET\">GET</option>\r\n            )}\r\n            {this.state.method === 'POST' ? (\r\n              <option value=\"POST\" selected>\r\n                POST\r\n              </option>\r\n            ) : (\r\n              <option value=\"POST\">POST</option>\r\n            )}\r\n            {this.state.method === 'PUT' ? (\r\n              <option value=\"PUT\" selected>\r\n                PUT\r\n              </option>\r\n            ) : (\r\n              <option value=\"PUT\">PUT</option>\r\n            )}\r\n            {this.state.method === 'DELETE' ? (\r\n              <option value=\"DELETE\" selected>\r\n                DELETE\r\n              </option>\r\n            ) : (\r\n              <option value=\"DELETE\">DELETE</option>\r\n            )}\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.url}\r\n            onChange={this.handleUrlChange}\r\n            className=\"inputUrl\"\r\n          />\r\n          <input type=\"submit\" value=\"Send\" className=\"sendButton\" />\r\n        </form>\r\n\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>Header</Tab>\r\n            <Tab>Body</Tab>\r\n          </TabList>\r\n          <TabPanel>\r\n            <HttpRequestHeaders\r\n              addHeader={(e) => {\r\n                this.addHeader(e);\r\n              }}\r\n              handleHeaderRemove={(index) => {\r\n                this.handleHeaderRemove(index);\r\n              }}\r\n              handleHeaderValueChange={(e, index) => {\r\n                this.handleHeaderValueChange(e, index);\r\n              }}\r\n              handleHeaderKeyChange={(e, index) => {\r\n                this.handleHeaderKeyChange(e, index);\r\n              }}\r\n              headerValues={this.state.headerValues}\r\n              headerKeys={this.state.headerKeys}\r\n              showHeader={this.state.showHeader}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <HttpRequestBody\r\n              body={this.state.body}\r\n              showBody={this.state.showBody}\r\n              handleBodyRawInputChange={(e) => {\r\n                this.handleBodyRawInputChange(e);\r\n              }}\r\n            />\r\n          </TabPanel>\r\n        </Tabs>\r\n        <div className=\"response-label\">Response</div>\r\n        <HttpResponse result={this.state.result} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    historyData: state.historyData,\r\n    tabHistory:state.tabHistory\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    httpHistory: (newHttpData, auth) => dispatch(httpHistory(newHttpData, auth))\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HttpRequest);\r\n"]},"metadata":{},"sourceType":"module"}