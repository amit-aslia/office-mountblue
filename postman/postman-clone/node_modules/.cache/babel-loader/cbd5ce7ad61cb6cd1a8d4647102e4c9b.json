{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\src\\\\Components\\\\Dashboard.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../store/actions/authAction';\nimport '../App.css';\nimport logo from \"../image/postman-logo.svg\";\nimport Sidebar from './Sidebar';\nimport { Redirect } from 'react-router-dom';\nimport HttpRequest from './HttpRequest';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n\nclass Dashboard extends Component {\n  render() {\n    const _this$props = this.props,\n          auth = _this$props.auth,\n          history = _this$props.history;\n    console.log('this is props', this.props.data);\n    if (!auth.uid) return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n    return React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"postmanImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"logo\",\n      src: logo,\n      alt: \"postman-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: '/',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.props.signOut,\n      className: \"signoutButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Signout\"))), React.createElement(\"div\", {\n      className: \"sidebarAndHttpRequestContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      history: history,\n      auth: auth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      className: \"httpRequest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(HttpRequest, {\n      history: history,\n      auth: auth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n; // }\n\nconst mapStateToProps = state => {\n  console.log('this is state', state);\n  return {\n    auth: state.firebase.auth,\n    history: state.firestore.ordered.history,\n    data: state.firestore.data.history\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect([{\n  collection: 'history'\n}]))(Dashboard);","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/Components/Dashboard.js"],"names":["React","Component","Link","connect","signOut","Sidebar","Redirect","HttpRequest","firestoreConnect","compose","Dashboard","render","props","auth","history","console","log","data","uid","logo","mapStateToProps","state","firebase","firestore","ordered","mapDispatchToProps","dispatch","collection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../store/actions/authAction';\r\nimport '../App.css';\r\nimport logo from '../image/postman-logo.svg';\r\nimport Sidebar from './Sidebar';\r\nimport { Redirect } from 'react-router-dom';\r\nimport HttpRequest from './HttpRequest';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { auth, history, } = this.props;\r\n    console.log('this is props', this.props.data)\r\n\r\n    if (!auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <main>\r\n        <div className=\"postmanImage\">\r\n          <img id=\"logo\" src={logo} alt=\"postman-logo\" />\r\n          <Link to={'/'}>\r\n            <button onClick={this.props.signOut} className=\"signoutButton\">\r\n              Signout\r\n          </button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"sidebarAndHttpRequestContainer\">\r\n          <section className=\"sidebar\">\r\n            <Sidebar history={history} auth={auth} />\r\n          </section>\r\n          <section className=\"httpRequest\">\r\n            <HttpRequest history={history} auth={auth} />\r\n          </section>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n};\r\n// }\r\nconst mapStateToProps = (state) => {\r\n  console.log('this is state', state)\r\n  return {\r\n    auth: state.firebase.auth,\r\n    history: state.firestore.ordered.history,\r\n    data: state.firestore.data.history\r\n\r\n\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  ),\r\n  firestoreConnect([{ collection: 'history' }])\r\n)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}