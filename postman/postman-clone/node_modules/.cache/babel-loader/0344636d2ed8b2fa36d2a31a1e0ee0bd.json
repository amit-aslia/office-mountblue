{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\src\\\\Components\\\\HttpRequest.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { httpHistory } from '../store/actions/httpHistoryActions';\nimport HttpRequestHeaders from './HttpRequestHeaders';\nimport HttpRequestBody from './HttpRequestBody';\nimport HttpResponse from './HttpResponse';\nimport { Tabs, Tab, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { addCurrentTabId } from '../store/actions/tabHistoryActions';\n\nclass HttpRequest extends Component {\n  constructor(props) {\n    console.log('');\n    super(props);\n    this.state = {\n      url: '',\n      result: '',\n      method: 'GET',\n      body: '',\n      headerKeys: ['Content-Type'],\n      headerValues: ['application/json'],\n      headers: {},\n      test: '',\n      testOutput: ''\n    };\n\n    this.compareTestWithResponse = result => {\n      if (this.state.test.length === 0) {\n        return;\n      }\n\n      try {\n        let test = JSON.parse(this.state.test);\n        let jsonKeyinTest = Object.keys(test);\n        let jsonKeyInResult = Object.keys(result);\n\n        if (jsonKeyInResult.length !== jsonKeyinTest.length) {\n          this.setState({\n            testOutput: 'Failed length not equal'\n          });\n          console.log('Failed length not equal');\n          return;\n        } else {\n          for (let i = 0; i < jsonKeyInResult.length; i++) {\n            if (!jsonKeyinTest.includes(jsonKeyInResult[i])) {\n              this.setState({\n                testOutput: 'Failed Keys not present'\n              });\n              console.log('failed keys not present' + jsonKeyinTest + ',' + jsonKeyInResult);\n              return;\n            }\n\n            if (test[jsonKeyInResult[i]] !== result[jsonKeyInResult[i]]) {\n              this.setState({\n                testOutput: 'Failed not equal properties of ' + jsonKeyInResult[i] + ''\n              });\n              console.log('failed not equal properties of' + jsonKeyInResult[i]);\n              return;\n            }\n          }\n\n          this.setState({\n            testOutput: 'Passed'\n          });\n          console.log('Passed');\n        }\n      } catch (err) {\n        console.log('badly formatted test cases');\n      }\n    };\n\n    this.handleUrlChange = event => {\n      this.setState({\n        url: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.url !== '') {\n        const headObj = {};\n        this.state.headerKeys.map((headerKey, index) => {\n          return headObj[headerKey] = this.state.headerValues[index];\n        });\n        let bodyInput = '';\n        this.setState({\n          headers: headObj\n        }, () => {\n          this.props.httpHistory(this.state, this.props.auth);\n          console.log(this.state);\n\n          if (this.state.method === 'GET') {\n            fetch(this.state.url, {\n              headers: this.state.headers\n            }).then(a => a.json()).then(result => this.setState({\n              result: JSON.stringify(result)\n            }, () => {\n              this.compareTestWithResponse(result);\n            })).catch(err => {//console.log(\"error\" + err);\n            }); //console.log(this.state);\n          } else {\n            fetch(this.state.url, {\n              headers: this.state.headers,\n              method: this.state.method,\n              body: this.state.body\n            }).then(a => a.json()).then(result => this.setState({\n              result: JSON.stringify(result)\n            })).catch(err => {//console.log(\"error\" + err);\n            }); //console.log(this.state);\n          }\n        });\n      } else {\n        this.setState({\n          result: 'EMPTY URL'\n        });\n      }\n    };\n\n    this.handleSelectChange = event => {\n      this.setState({\n        method: event.target.value\n      });\n    };\n\n    this.handleHeaderRemove = index => {\n      this.state.headerKeys.splice(index, 1);\n      this.state.headerValues.splice(index, 1);\n      this.setState({\n        headerKeys: this.state.headerKeys\n      });\n      this.setState({\n        headervalues: this.state.headerValues\n      });\n    };\n\n    this.handleHeaderKeyChange = (e, index) => {\n      this.state.headerKeys[index] = e.target.value; // //console.log(this.state.bodyKey);\n\n      this.setState({\n        headerKeys: this.state.headerKeys\n      });\n    };\n\n    this.handleHeaderValueChange = (e, index) => {\n      this.state.headerValues[index] = e.target.value; // //console.log(this.state.bodyKey);\n\n      this.setState({\n        headerValues: this.state.headerValues\n      });\n    };\n\n    this.addHeader = () => {\n      this.setState({\n        headerKeys: [...this.state.headerKeys, '']\n      });\n      this.setState({\n        headerValues: [...this.state.headerValues, '']\n      });\n    };\n\n    this.onClickHeader = () => {\n      this.setState({\n        showHeader: true,\n        showBody: false\n      });\n    };\n\n    this.onClickBody = () => {\n      this.setState({\n        showHeader: false,\n        showBody: true\n      });\n    };\n\n    this.handleBodyRawInputChange = e => {\n      this.setState({\n        body: e.target.value\n      });\n    };\n\n    this.handleTestChange = e => {\n      this.setState({\n        test: e.target.value\n      });\n    };\n\n    props.addCurrentTabId(props.index);\n  }\n\n  componentWillReceiveProps() {\n    // this.props.addCurrentTabId(this.props.index);\n    let history = this.props.historyData;\n    console.log('insdide compoennent will recuevrf');\n\n    if (Object.keys(history).length !== 0 && this.props.previousTab) {\n      console.log('current tab', this.props.previousTab, 'current index', this.props.index); // if(this.props.previousTab===this.props.index)\n      // {\n      // this.setState({\n      //   url: history.url,\n      //   method: history.method,\n      //   body: history.body,\n      //   headerKeys: history.headerKeys,\n      //   headerValues: history.headerValues,\n      //   headers: history.headers\n      // });\n      // }\n      // else\n      // {\n      // this.setState({\n      //   url: \"\",\n      //   method: 'GET',\n      //   body: '',\n      //   headerKeys: ['Content-Type'],\n      //   headerValues: ['application/json'],\n      //   headers: {}\n      // });\n      // }\n    } // this.props.addCurrentTabId(this.props.index)\n\n  }\n\n  componentWillMount() {\n    let history = this.props.historyData;\n\n    if (Object.keys(history).length !== 0) {\n      console.log('inside the component did mount');\n\n      if (this.props.index === this.props.previousTab) {\n        this.setState({\n          url: history.url,\n          method: history.method,\n          body: history.body,\n          headerKeys: history.headerKeys,\n          headerValues: history.headerValues,\n          headers: history.headers\n        });\n      } else {\n        this.setState({\n          url: '',\n          method: 'GET',\n          body: '',\n          headerKeys: ['Content-Type'],\n          headerValues: ['application/json'],\n          headers: {}\n        });\n      }\n    }\n  }\n\n  render() {\n    // console.log('these are props',this.props.index)\n    // this.props.addCurrentTabId(this.props.index)\n    localStorage.setItem('currentTab', this.props.previousTab);\n    localStorage.setItem('currentIndex', this.props.index);\n    return React.createElement(\"div\", {\n      className: \"urlArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"url-title\",\n      style: {\n        fontWeight: 'bold',\n        fontFamily: 'Helvetica',\n        marginBottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, this.state.url === '' ? 'Untitled' : this.state.url), React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.handleSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, this.state.method === 'GET' ? React.createElement(\"option\", {\n      value: \"GET\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"GET\") : React.createElement(\"option\", {\n      value: \"GET\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"GET\"), this.state.method === 'POST' ? React.createElement(\"option\", {\n      value: \"POST\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"POST\") : React.createElement(\"option\", {\n      value: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"POST\"), this.state.method === 'PUT' ? React.createElement(\"option\", {\n      value: \"PUT\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"PUT\") : React.createElement(\"option\", {\n      value: \"PUT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"PUT\"), this.state.method === 'DELETE' ? React.createElement(\"option\", {\n      value: \"DELETE\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"DELETE\") : React.createElement(\"option\", {\n      value: \"DELETE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"DELETE\")), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Request URL\",\n      value: this.state.url,\n      onChange: this.handleUrlChange,\n      className: \"inputUrl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Send\",\n      className: \"sendButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }))), React.createElement(Tabs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"Header\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Body\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Test\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Test Result\")), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(HttpRequestHeaders, {\n      addHeader: e => {\n        this.addHeader(e);\n      },\n      handleHeaderRemove: index => {\n        this.handleHeaderRemove(index);\n      },\n      handleHeaderValueChange: (e, index) => {\n        this.handleHeaderValueChange(e, index);\n      },\n      handleHeaderKeyChange: (e, index) => {\n        this.handleHeaderKeyChange(e, index);\n      },\n      headerValues: this.state.headerValues,\n      headerKeys: this.state.headerKeys,\n      showHeader: this.state.showHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    })), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(HttpRequestBody, {\n      body: this.state.body,\n      showBody: this.state.showBody,\n      handleBodyRawInputChange: e => {\n        this.handleBodyRawInputChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    })), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"test-tab\",\n      placeholder: 'Test',\n      value: this.state.test,\n      onChange: e => {\n        this.handleTestChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    })), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"test-tab\",\n      placeholder: 'Test',\n      value: this.state.testOutput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"response-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, \"Response\"), React.createElement(HttpResponse, {\n      result: this.state.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    historyData: state.historyData,\n    tabHistory: state.tabHistory,\n    previousTab: state.currentTabId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    httpHistory: (newHttpData, auth) => dispatch(httpHistory(newHttpData, auth)),\n    addCurrentTabId: currenttab => dispatch(addCurrentTabId(currenttab))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HttpRequest);","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/Components/HttpRequest.jsx"],"names":["React","Component","connect","httpHistory","HttpRequestHeaders","HttpRequestBody","HttpResponse","Tabs","Tab","TabList","TabPanel","addCurrentTabId","HttpRequest","constructor","props","console","log","state","url","result","method","body","headerKeys","headerValues","headers","test","testOutput","compareTestWithResponse","length","JSON","parse","jsonKeyinTest","Object","keys","jsonKeyInResult","setState","i","includes","err","handleUrlChange","event","target","value","handleFormSubmit","preventDefault","headObj","map","headerKey","index","bodyInput","auth","fetch","then","a","json","stringify","catch","handleSelectChange","handleHeaderRemove","splice","headervalues","handleHeaderKeyChange","e","handleHeaderValueChange","addHeader","onClickHeader","showHeader","showBody","onClickBody","handleBodyRawInputChange","handleTestChange","componentWillReceiveProps","history","historyData","previousTab","componentWillMount","render","localStorage","setItem","fontWeight","fontFamily","marginBottom","mapStateToProps","tabHistory","currentTabId","mapDispatchToProps","dispatch","newHttpData","currenttab"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { httpHistory } from '../store/actions/httpHistoryActions';\r\nimport HttpRequestHeaders from './HttpRequestHeaders';\r\nimport HttpRequestBody from './HttpRequestBody';\r\nimport HttpResponse from './HttpResponse';\r\nimport { Tabs, Tab, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { addCurrentTabId } from '../store/actions/tabHistoryActions';\r\n\r\nclass HttpRequest extends Component {\r\n  constructor(props)\r\n  {\r\n    console.log('')\r\n    super(props);\r\n    props.addCurrentTabId(props.index);\r\n \r\n  }\r\n  state = {\r\n    url: '',\r\n    result: '',\r\n    method: 'GET',\r\n    body: '',\r\n    headerKeys: ['Content-Type'],\r\n    headerValues: ['application/json'],\r\n    headers: {},\r\n    test: '',\r\n    testOutput: ''\r\n  };\r\n  componentWillReceiveProps() {\r\n    // this.props.addCurrentTabId(this.props.index);\r\n\r\n    let history = this.props.historyData;\r\n    console.log('insdide compoennent will recuevrf');\r\n    if (Object.keys(history).length !== 0 && this.props.previousTab) {\r\n      console.log(\r\n        'current tab',\r\n        this.props.previousTab,\r\n        'current index',\r\n        this.props.index\r\n      );\r\n\r\n      // if(this.props.previousTab===this.props.index)\r\n      // {\r\n      // this.setState({\r\n      //   url: history.url,\r\n      //   method: history.method,\r\n      //   body: history.body,\r\n      //   headerKeys: history.headerKeys,\r\n      //   headerValues: history.headerValues,\r\n      //   headers: history.headers\r\n      // });\r\n      // }\r\n      // else\r\n      // {\r\n      // this.setState({\r\n      //   url: \"\",\r\n      //   method: 'GET',\r\n      //   body: '',\r\n      //   headerKeys: ['Content-Type'],\r\n      //   headerValues: ['application/json'],\r\n      //   headers: {}\r\n      // });\r\n      // }\r\n    }\r\n    // this.props.addCurrentTabId(this.props.index)\r\n  }\r\n  componentWillMount() {\r\n    let history = this.props.historyData;\r\n    if (Object.keys(history).length !== 0) {\r\n      console.log('inside the component did mount');\r\n      if (this.props.index === this.props.previousTab) {\r\n        this.setState({\r\n          url: history.url,\r\n          method: history.method,\r\n          body: history.body,\r\n          headerKeys: history.headerKeys,\r\n          headerValues: history.headerValues,\r\n          headers: history.headers\r\n        });\r\n      } else {\r\n        this.setState({\r\n          url: '',\r\n          method: 'GET',\r\n          body: '',\r\n          headerKeys: ['Content-Type'],\r\n          headerValues: ['application/json'],\r\n          headers: {}\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  compareTestWithResponse = (result) => {\r\n    if (this.state.test.length === 0) {\r\n      return;\r\n    }\r\n    try {\r\n      let test = JSON.parse(this.state.test);\r\n      let jsonKeyinTest = Object.keys(test);\r\n      let jsonKeyInResult = Object.keys(result);\r\n      if (jsonKeyInResult.length !== jsonKeyinTest.length) {\r\n        this.setState({ testOutput: 'Failed length not equal' });\r\n        console.log('Failed length not equal');\r\n        return;\r\n      } else {\r\n        for (let i = 0; i < jsonKeyInResult.length; i++) {\r\n          if (!jsonKeyinTest.includes(jsonKeyInResult[i])) {\r\n            this.setState({ testOutput: 'Failed Keys not present' });\r\n            console.log(\r\n              'failed keys not present' + jsonKeyinTest + ',' + jsonKeyInResult\r\n            );\r\n            return;\r\n          }\r\n          if (test[jsonKeyInResult[i]] !== result[jsonKeyInResult[i]]) {\r\n            this.setState({\r\n              testOutput:\r\n                'Failed not equal properties of ' + jsonKeyInResult[i] + ''\r\n            });\r\n            console.log('failed not equal properties of' + jsonKeyInResult[i]);\r\n            return;\r\n          }\r\n        }\r\n        this.setState({ testOutput: 'Passed' });\r\n        console.log('Passed');\r\n      }\r\n    } catch (err) {\r\n      console.log('badly formatted test cases');\r\n    }\r\n  };\r\n  handleUrlChange = (event) => {\r\n    this.setState({ url: event.target.value });\r\n  };\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.url !== '') {\r\n      const headObj = {};\r\n      this.state.headerKeys.map((headerKey, index) => {\r\n        return (headObj[headerKey] = this.state.headerValues[index]);\r\n      });\r\n      let bodyInput = '';\r\n\r\n      this.setState({ headers: headObj }, () => {\r\n        this.props.httpHistory(this.state, this.props.auth);\r\n        console.log(this.state);\r\n        if (this.state.method === 'GET') {\r\n          fetch(this.state.url, {\r\n            headers: this.state.headers\r\n          })\r\n            .then((a) => a.json())\r\n            .then((result) =>\r\n              this.setState({ result: JSON.stringify(result) }, () => {\r\n                this.compareTestWithResponse(result);\r\n              })\r\n            )\r\n            .catch((err) => {\r\n              //console.log(\"error\" + err);\r\n            });\r\n          //console.log(this.state);\r\n        } else {\r\n          fetch(this.state.url, {\r\n            headers: this.state.headers,\r\n            method: this.state.method,\r\n            body: this.state.body\r\n          })\r\n            .then((a) => a.json())\r\n            .then((result) => this.setState({ result: JSON.stringify(result) }))\r\n            .catch((err) => {\r\n              //console.log(\"error\" + err);\r\n            });\r\n          //console.log(this.state);\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({ result: 'EMPTY URL' });\r\n    }\r\n  };\r\n\r\n  handleSelectChange = (event) => {\r\n    this.setState({ method: event.target.value });\r\n  };\r\n\r\n  handleHeaderRemove = (index) => {\r\n    this.state.headerKeys.splice(index, 1);\r\n    this.state.headerValues.splice(index, 1);\r\n    this.setState({ headerKeys: this.state.headerKeys });\r\n    this.setState({ headervalues: this.state.headerValues });\r\n  };\r\n\r\n  handleHeaderKeyChange = (e, index) => {\r\n    this.state.headerKeys[index] = e.target.value;\r\n    // //console.log(this.state.bodyKey);\r\n    this.setState({ headerKeys: this.state.headerKeys });\r\n  };\r\n\r\n  handleHeaderValueChange = (e, index) => {\r\n    this.state.headerValues[index] = e.target.value;\r\n    // //console.log(this.state.bodyKey);\r\n    this.setState({ headerValues: this.state.headerValues });\r\n  };\r\n\r\n  addHeader = () => {\r\n    this.setState({ headerKeys: [...this.state.headerKeys, ''] });\r\n    this.setState({ headerValues: [...this.state.headerValues, ''] });\r\n  };\r\n  onClickHeader = () => {\r\n    this.setState({ showHeader: true, showBody: false });\r\n  };\r\n  onClickBody = () => {\r\n    this.setState({ showHeader: false, showBody: true });\r\n  };\r\n  handleBodyRawInputChange = (e) => {\r\n    this.setState({ body: e.target.value });\r\n  };\r\n  handleTestChange = (e) => {\r\n    this.setState({ test: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    // console.log('these are props',this.props.index)\r\n    // this.props.addCurrentTabId(this.props.index)\r\n    localStorage.setItem('currentTab', this.props.previousTab);\r\n    localStorage.setItem('currentIndex', this.props.index);\r\n\r\n    return (\r\n      <div className=\"urlArea\">\r\n        <p\r\n          className=\"url-title\"\r\n          style={{\r\n            fontWeight: 'bold',\r\n            fontFamily: 'Helvetica',\r\n            marginBottom: 0\r\n          }}\r\n        >\r\n          {this.state.url === '' ? 'Untitled' : this.state.url}\r\n        </p>\r\n\r\n        <form onSubmit={this.handleFormSubmit}>\r\n          <div className=\"form-section\">\r\n            <select onChange={this.handleSelectChange}>\r\n              {this.state.method === 'GET' ? (\r\n                <option value=\"GET\" selected>\r\n                  GET\r\n                </option>\r\n              ) : (\r\n                <option value=\"GET\">GET</option>\r\n              )}\r\n              {this.state.method === 'POST' ? (\r\n                <option value=\"POST\" selected>\r\n                  POST\r\n                </option>\r\n              ) : (\r\n                <option value=\"POST\">POST</option>\r\n              )}\r\n              {this.state.method === 'PUT' ? (\r\n                <option value=\"PUT\" selected>\r\n                  PUT\r\n                </option>\r\n              ) : (\r\n                <option value=\"PUT\">PUT</option>\r\n              )}\r\n              {this.state.method === 'DELETE' ? (\r\n                <option value=\"DELETE\" selected>\r\n                  DELETE\r\n                </option>\r\n              ) : (\r\n                <option value=\"DELETE\">DELETE</option>\r\n              )}\r\n            </select>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Request URL\"\r\n              value={this.state.url}\r\n              onChange={this.handleUrlChange}\r\n              className=\"inputUrl\"\r\n            />\r\n            <input type=\"submit\" value=\"Send\" className=\"sendButton\" />\r\n          </div>\r\n        </form>\r\n\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>Header</Tab>\r\n            <Tab>Body</Tab>\r\n\r\n            <Tab>Test</Tab>\r\n            <Tab>Test Result</Tab>\r\n          </TabList>\r\n          <TabPanel>\r\n            <HttpRequestHeaders\r\n              addHeader={(e) => {\r\n                this.addHeader(e);\r\n              }}\r\n              handleHeaderRemove={(index) => {\r\n                this.handleHeaderRemove(index);\r\n              }}\r\n              handleHeaderValueChange={(e, index) => {\r\n                this.handleHeaderValueChange(e, index);\r\n              }}\r\n              handleHeaderKeyChange={(e, index) => {\r\n                this.handleHeaderKeyChange(e, index);\r\n              }}\r\n              headerValues={this.state.headerValues}\r\n              headerKeys={this.state.headerKeys}\r\n              showHeader={this.state.showHeader}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <HttpRequestBody\r\n              body={this.state.body}\r\n              showBody={this.state.showBody}\r\n              handleBodyRawInputChange={(e) => {\r\n                this.handleBodyRawInputChange(e);\r\n              }}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <textarea\r\n              className=\"test-tab\"\r\n              placeholder={'Test'}\r\n              value={this.state.test}\r\n              onChange={(e) => {\r\n                this.handleTestChange(e);\r\n              }}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <textarea\r\n              className=\"test-tab\"\r\n              placeholder={'Test'}\r\n              value={this.state.testOutput}\r\n            />\r\n          </TabPanel>\r\n        </Tabs>\r\n        <div className=\"response-label\">Response</div>\r\n        <HttpResponse result={this.state.result} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    historyData: state.historyData,\r\n    tabHistory: state.tabHistory,\r\n    previousTab: state.currentTabId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    httpHistory: (newHttpData, auth) =>\r\n      dispatch(httpHistory(newHttpData, auth)),\r\n    addCurrentTabId: (currenttab) => dispatch(addCurrentTabId(currenttab))\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HttpRequest);\r\n"]},"metadata":{},"sourceType":"module"}