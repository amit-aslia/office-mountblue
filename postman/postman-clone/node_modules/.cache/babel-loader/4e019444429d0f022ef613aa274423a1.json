{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\src\\\\Components\\\\Newtabs.jsx\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport React, { Component } from 'react';\nimport HttpRequest from './HttpRequest';\nimport uuid from 'uuid';\nimport { connect } from 'react-redux';\nimport { addTabHistory } from '../store/actions/tabHistoryActions';\n\nclass Newtabs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      arr: [{\n        id: 1 + Math.random() * (9 - 1),\n        name: 'GET'\n      }]\n    };\n\n    this.handleClick = () => {\n      const arr = this.state.arr;\n      const newTabObject = {\n        id: arr.length + 1,\n        name: \"GET\"\n      };\n      this.setState({\n        arr: [...arr, newTabObject]\n      });\n    };\n\n    this.handleDelete = toDelete => {\n      const arr = this.state.arr;\n      const tabDeleteIndex = arr.findIndex(arr => arr.id === toDelete);\n      const updatedTabs = arr.filter((tab, index) => {\n        return index !== tabDeleteIndex;\n      });\n      this.setState({\n        arr: updatedTabs\n      });\n    };\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem('tabHistory', JSON.stringify(nextState.arr));\n  }\n\n  componentDidMount() {\n    const tab = JSON.parse(localStorage.getItem('tabHistory'));\n\n    if (tab == null) {}\n  }\n\n  render() {\n    this.props.addTabHistory(this.state);\n    const arr = this.state.arr;\n    const name = arr.map((data, index) => {\n      return React.createElement(Tab, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tabListStyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, data.name, ' ', React.createElement(\"button\", {\n        onClick: () => this.handleDelete(data.id),\n        className: \"btn tabListButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"X\")));\n    });\n    const content = this.state.arr.map(data => {\n      return React.createElement(TabPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(HttpRequest, {\n        key: uuid,\n        index: data.id,\n        auth: this.props.auth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    });\n    const fun = React.createElement(Tabs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, name, React.createElement(\"button\", {\n      onClick: this.handleClick,\n      className: \"btn newTabOpenButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"+\")), content);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, fun);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTabHistory: tabData => dispatch(addTabHistory(tabData))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    history: state.firestore.ordered.history\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Newtabs);","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/Components/Newtabs.jsx"],"names":["Tab","Tabs","TabList","TabPanel","React","Component","HttpRequest","uuid","connect","addTabHistory","Newtabs","state","arr","id","Math","random","name","handleClick","newTabObject","length","setState","handleDelete","toDelete","tabDeleteIndex","findIndex","updatedTabs","filter","tab","index","componentWillUpdate","nextProps","nextState","localStorage","setItem","JSON","stringify","componentDidMount","parse","getItem","render","props","map","data","content","auth","fun","mapDispatchToProps","dispatch","tabData","mapStateToProps","firebase","history","firestore","ordered"],"mappings":"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","sourcesContent":["import { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport React, { Component } from 'react';\r\nimport HttpRequest from './HttpRequest';\r\nimport uuid from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport { addTabHistory } from '../store/actions/tabHistoryActions';\r\n\r\nclass Newtabs extends Component {\r\n  state = {\r\n    arr: [\r\n      {\r\n        id:  1 + (Math.random() * (9-1)),\r\n        name: 'GET'\r\n      }\r\n    ]\r\n  };\r\n  componentWillUpdate(nextProps, nextState) {\r\n    localStorage.setItem('tabHistory', JSON.stringify(nextState.arr));\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { arr } = this.state;\r\n    const newTabObject = {\r\n      id: arr.length + 1,\r\n      name: `GET`\r\n    };\r\n    this.setState({\r\n      arr: [...arr, newTabObject]\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    const tab = JSON.parse(localStorage.getItem('tabHistory'));\r\n    if(tab==null)\r\n    {\r\n\r\n    }\r\n    }\r\n\r\n  handleDelete = (toDelete) => {\r\n    const { arr } = this.state;\r\n    const tabDeleteIndex = arr.findIndex((arr) => arr.id === toDelete);\r\n    const updatedTabs = arr.filter((tab, index) => {\r\n      return index !== tabDeleteIndex;\r\n    });\r\n    this.setState({\r\n      arr: updatedTabs\r\n    });\r\n  };\r\n  render() {\r\n    this.props.addTabHistory(this.state);\r\n    const { arr } = this.state;\r\n    const name = arr.map((data, index) => {\r\n      return (\r\n        <Tab>\r\n          <div className=\"tabListStyle\">\r\n            {data.name}{' '}\r\n            <button\r\n              onClick={() => this.handleDelete(data.id)}\r\n              className=\"btn tabListButton\"\r\n            >\r\n              X\r\n            </button>\r\n          </div>\r\n        </Tab>\r\n      );\r\n    });\r\n    const content = this.state.arr.map((data) => {\r\n      return (\r\n        <TabPanel>\r\n          {/* {data.content} */}\r\n          <HttpRequest\r\n            key={uuid}\r\n            index={data.id}\r\n            auth={this.props.auth}\r\n          />\r\n        </TabPanel>\r\n      );\r\n    });\r\n\r\n    const fun = (\r\n      <Tabs>\r\n        <TabList>\r\n          {name}\r\n          <button onClick={this.handleClick} className=\"btn newTabOpenButton\">\r\n            +\r\n          </button>\r\n        </TabList>\r\n\r\n        {content}\r\n      </Tabs>\r\n    );\r\n\r\n    return <div>{fun}</div>;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTabHistory: (tabData) => dispatch(addTabHistory(tabData))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    history: state.firestore.ordered.history\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Newtabs);\r\n"]},"metadata":{},"sourceType":"module"}