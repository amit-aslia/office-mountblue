{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\src\\\\auth\\\\googleLogin.js\";\nimport React, { Component } from 'react';\nimport firebase from '../config/fbConfig';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { GoogleSignIn } from '../store/actions/authAction';\nimport { connect } from 'react-redux';\n\nclass GoogleLogin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n    this.uiConfig = {\n      signInFlow: 'popup',\n      signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n      callbacks: {\n        signInSuccess: () => false\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.props.GoogleSignIn(); // firebase.auth().onAuthStateChanged((user) => {\n      //   if (user) {\n      //     const name=user.displayName.split(\" \")\n      //     console.log(name)\n      //     console.log(user.uid , user.displayName);\n      //     console.log('user logged in');\n      //     return firestore.collection('users').doc(user.user.uid).set({\n      //       firstName:name[0],\n      //       lastName:name[1]\n      //     })\n      //   }\n      // });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.state.isSignedIn ? React.createElement(React.Fragment, null) : React.createElement(StyledFirebaseAuth, {\n      uiConfig: this.uiConfig,\n      firebaseAuth: firebase.auth(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    GoogleSignIn: () => dispatch(GoogleSignIn())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(GoogleLogin);","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/auth/googleLogin.js"],"names":["React","Component","firebase","StyledFirebaseAuth","GoogleSignIn","connect","GoogleLogin","state","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccess","componentDidMount","props","render","isSignedIn","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,SAAQC,YAAR,QAA2B,6BAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AACA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCM,KADkC,GAC1B,EAD0B;AAAA,SAElCC,QAFkC,GAEvB;AACTC,MAAAA,UAAU,EAAE,OADH;AAETC,MAAAA,aAAa,EAAE,CAACR,QAAQ,CAACS,IAAT,CAAcC,kBAAd,CAAiCC,WAAlC,CAFN;AAGTC,MAAAA,SAAS,EAAE;AACTC,QAAAA,aAAa,EAAE,MAAM;AADZ;AAHF,KAFuB;;AAAA,SASlCC,iBATkC,GASd,MAAM;AACxB,WAAKC,KAAL,CAAWb,YAAX,GADwB,CAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAvBiC;AAAA;;AAyBlCc,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,KAAL,CAAWY,UAAX,GACC,yCADD,GAGC,oBAAC,kBAAD;AACE,MAAA,QAAQ,EAAE,KAAKX,QADjB;AAEE,MAAA,YAAY,EAAEN,QAAQ,CAACS,IAAT,EAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADF;AAYD;;AAtCiC;;AAyCpC,MAAMS,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLjB,IAAAA,YAAY,EAAE,MAAMiB,QAAQ,CAACjB,YAAY,EAAb;AADvB,GAAP;AAGD,CAJD;;AAOA,eAAeC,OAAO,CAAC,IAAD,EAAMe,kBAAN,CAAP,CAAiCd,WAAjC,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport firebase from '../config/fbConfig';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport {GoogleSignIn} from '../store/actions/authAction'\r\nimport {connect} from 'react-redux'\r\nclass GoogleLogin extends Component {\r\n  state = {};\r\n  uiConfig = {\r\n    signInFlow: 'popup',\r\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\r\n    callbacks: {\r\n      signInSuccess: () => false\r\n    }\r\n  };\r\n  componentDidMount = () => {\r\n    this.props.GoogleSignIn()\r\n    // firebase.auth().onAuthStateChanged((user) => {\r\n    //   if (user) {\r\n    //     const name=user.displayName.split(\" \")\r\n    //     console.log(name)\r\n    //     console.log(user.uid , user.displayName);\r\n    //     console.log('user logged in');\r\n    //     return firestore.collection('users').doc(user.user.uid).set({\r\n    //       firstName:name[0],\r\n    //       lastName:name[1]\r\n    //     })\r\n    //   }\r\n    // });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isSignedIn ? (\r\n          <></>\r\n        ) : (\r\n          <StyledFirebaseAuth\r\n            uiConfig={this.uiConfig}\r\n            firebaseAuth={firebase.auth()}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    GoogleSignIn: () => dispatch(GoogleSignIn())\r\n  };\r\n};\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(GoogleLogin);\r\n"]},"metadata":{},"sourceType":"module"}