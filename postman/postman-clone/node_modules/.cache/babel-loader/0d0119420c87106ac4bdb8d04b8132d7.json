{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const httpHistory = (newHttpData, auth) => {\n  console.log('fjaskldnfnjflasnfdls', auth);\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    const firebase = getFirebase();\n    firestore.collection('history').add(_objectSpread({}, newHttpData, {\n      userId: auth.uid,\n      createdAt: firebase.ServerValue.TIMESTAMP\n    })).then(() => {\n      dispatch({\n        type: 'STORE_HTTPDATA',\n        newHttpData\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'STORE_HTTPDATA_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const deleteHTTPHistory = history => {\n  console.log('this is action of history', history);\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('history').doc(history.id).delete().then(response => {\n      dispatch({\n        type: 'DELETE_HISTORY'\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: 'DELETE_HISTORY_ERROR',\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/store/actions/httpHistoryActions.js"],"names":["httpHistory","newHttpData","auth","console","log","dispatch","getState","getFirebase","getFirestore","firestore","firebase","collection","add","userId","uid","createdAt","ServerValue","TIMESTAMP","then","type","catch","err","deleteHTTPHistory","history","doc","id","delete","response"],"mappings":";;;;;;AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,WAAD,EAAcC,IAAd,KAAuB;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,IAApC;AACA,SAAO,CAACG,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAArB,KAAuD;AAC1D,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACA,UAAME,QAAQ,GAAGH,WAAW,EAA5B;AACAE,IAAAA,SAAS,CAACE,UAAV,CAAqB,SAArB,EAAgCC,GAAhC,mBAEOX,WAFP;AAGIY,MAAAA,MAAM,EAAEX,IAAI,CAACY,GAHjB;AAIIC,MAAAA,SAAS,EAAEL,QAAQ,CAACM,WAAT,CAAqBC;AAJpC,QAKGC,IALH,CAKQ,MAAM;AACVb,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAE,gBAAR;AAA0BlB,QAAAA;AAA1B,OAAD,CAAR;AACH,KAPD,EAOGmB,KAPH,CAOSC,GAAG,IAAI;AACZhB,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAE,sBAAR;AAAgCE,QAAAA;AAAhC,OAAD,CAAR;AACH,KATD;AAUH,GAbD;AAcH,CAhBM;AAkBP,OAAO,MAAMC,iBAAiB,GAAIC,OAAD,IAAa;AAC1CpB,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCmB,OAAzC;AACA,SAAO,CAAClB,QAAD,EAAWC,QAAX,EAAqB;AAAEE,IAAAA;AAAF,GAArB,KAA0C;AAC7C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AAEAC,IAAAA,SAAS,CAACE,UAAV,CAAqB,SAArB,EAAgCa,GAAhC,CAAoCD,OAAO,CAACE,EAA5C,EAAgDC,MAAhD,GACKR,IADL,CACWS,QAAD,IAAc;AAChBtB,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACH,KAHL,EAGOC,KAHP,CAGa,UAAUC,GAAV,EAAe;AACpBhB,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAE,sBAAR;AAAgCE,QAAAA;AAAhC,OAAD,CAAR;AACH,KALL;AAMH,GATD;AAUH,CAZM","sourcesContent":["export const httpHistory = (newHttpData, auth) => {\r\n    console.log('fjaskldnfnjflasnfdls', auth)\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const firebase = getFirebase();\r\n        firestore.collection('history').add({\r\n\r\n            ...newHttpData,\r\n            userId: auth.uid,\r\n            createdAt: firebase.ServerValue.TIMESTAMP\r\n        }).then(() => {\r\n            dispatch({ type: 'STORE_HTTPDATA', newHttpData })\r\n        }).catch(err => {\r\n            dispatch({ type: 'STORE_HTTPDATA_ERROR', err })\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteHTTPHistory = (history) => {\r\n    console.log('this is action of history', history)\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        const firestore = getFirestore()\r\n\r\n        firestore.collection('history').doc(history.id).delete()\r\n            .then((response) => {\r\n                dispatch({ type: 'DELETE_HISTORY' })\r\n            }).catch(function (err) {\r\n                dispatch({ type: 'DELETE_HISTORY_ERROR', err })\r\n            });\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}