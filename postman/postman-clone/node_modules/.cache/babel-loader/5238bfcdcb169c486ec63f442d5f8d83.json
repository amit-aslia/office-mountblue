{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\src\\\\Components\\\\HttpRequest.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { httpHistory, to } from '../store/actions/httpHistoryActions';\n\nvar JSONpretty = require('react-json-pretty'); // import firebase from \"../config/fbConfig\"\n//console.log(firebase.firestore().collection(\"test\"));\n\n\nclass HttpRequest extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      url: \"\",\n      result: [],\n      method: \"GET\",\n      body: \"\",\n      headerKeys: [\"Content-Type\"],\n      headerValues: [\"application/json\"],\n      header: {},\n      showHeader: false,\n      showBody: true\n    };\n\n    this.handleUrlChange = event => {\n      this.setState({\n        url: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const headObj = {};\n      this.state.headerKeys.map((headerKey, index) => {\n        return headObj[headerKey] = this.state.headerValues[index];\n      });\n      let bodyInput = \"\";\n\n      if (this.state.body.length != 0) {\n        bodyInput = JSON.parse(this.state.body);\n      }\n\n      this.setState({\n        body: JSON.stringify(bodyInput),\n        header: headObj\n      }, () => {\n        this.props.httpHistory(this.state, this.props.auth);\n\n        if (this.state.method === \"GET\") {\n          fetch(this.state.url, {\n            headers: this.state.header\n          }).then(a => a.json()).then(result => this.setState({\n            result: JSON.stringify(result)\n          })).catch(err => {//console.log(\"error\" + err);\n          }); //console.log(this.state);\n        } else {\n          fetch(this.state.url, {\n            headers: this.state.header,\n            method: this.state.method,\n            body: JSON.stringify(this.state.body)\n          }).then(a => a.json()).then(result => this.setState({\n            result: JSON.stringify(result)\n          })).catch(err => {//console.log(\"error\" + err);\n          }); //console.log(this.state);\n        }\n      });\n    };\n\n    this.handleSelectChange = event => {\n      this.setState({\n        method: event.target.value\n      });\n    };\n\n    this.handleHeaderRemove = index => {\n      this.state.headerKeys.splice(index, 1);\n      this.state.headerValues.splice(index, 1);\n      this.setState({\n        headerKeys: this.state.headerKeys\n      });\n      this.setState({\n        headervalues: this.state.headerValues\n      });\n    };\n\n    this.handleHeaderKeyChange = (e, index) => {\n      this.state.headerKeys[index] = e.target.value; // //console.log(this.state.bodyKey);\n\n      this.setState({\n        headerKeys: this.state.headerKeys\n      });\n    };\n\n    this.handleHeaderValueChange = (e, index) => {\n      this.state.headerValues[index] = e.target.value; // //console.log(this.state.bodyKey);\n\n      this.setState({\n        headerValues: this.state.headerValues\n      });\n    };\n\n    this.addHeader = () => {\n      this.setState({\n        headerKeys: [...this.state.headerKeys, \"\"]\n      });\n      this.setState({\n        headerValues: [...this.state.headerValues, \"\"]\n      });\n    };\n\n    this.onClickHeader = () => {\n      this.setState({\n        showHeader: true,\n        showBody: false\n      });\n    };\n\n    this.onClickBody = () => {\n      this.setState({\n        showHeader: false,\n        showBody: true\n      });\n    };\n\n    this.handleBodyRawInputChange = e => {\n      this.setState({\n        body: e.target.value\n      });\n    };\n  }\n\n  render() {\n    // console.log('this is  auth',this.props.auth)\n    return React.createElement(\"div\", {\n      className: \"urlArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.handleSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"GET\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"GET\"), React.createElement(\"option\", {\n      value: \"PUT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"PUT\"), React.createElement(\"option\", {\n      value: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"POST\"), React.createElement(\"option\", {\n      value: \"DELETE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"DELETE\")), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.url,\n      onChange: this.handleUrlChange,\n      className: \"inputUrl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Send\",\n      className: \"sendButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(\"nav\", {\n      className: \"header-body-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"header-body-tab\",\n      onClick: this.onClickHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Header\"), React.createElement(\"button\", {\n      className: \"header-body-tab\",\n      onClick: this.onClickBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Body\")), this.state.showBody ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"body-raw-input\",\n      placeholder: \"Body\",\n      value: this.state.body,\n      onChange: e => {\n        this.handleBodyRawInputChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })) : null, this.state.showHeader ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.state.headerKeys.map((headerKey, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Key\",\n        value: headerKey,\n        onChange: e => {\n          this.handleHeaderKeyChange(e, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        placeholder: \"value\",\n        value: this.state.headerValues[index],\n        onChange: e => {\n          this.handleHeaderValueChange(e, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: () => this.handleHeaderRemove(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Remove\"));\n    }), React.createElement(\"button\", {\n      onClick: e => this.addHeader(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Add Header\")) : null, React.createElement(\"div\", {\n      style: {\n        height: 500,\n        overflow: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, this.state.result.length === 0 ? null : React.createElement(JSONpretty, {\n      id: \"response-area\",\n      data: this.state.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    httpHistory: (newHttpData, auth) => dispatch(httpHistory(newHttpData, auth))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(HttpRequest);","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/Components/HttpRequest.jsx"],"names":["React","Component","connect","httpHistory","to","JSONpretty","require","HttpRequest","state","url","result","method","body","headerKeys","headerValues","header","showHeader","showBody","handleUrlChange","event","setState","target","value","handleFormSubmit","preventDefault","headObj","map","headerKey","index","bodyInput","length","JSON","parse","stringify","props","auth","fetch","headers","then","a","json","catch","err","handleSelectChange","handleHeaderRemove","splice","headervalues","handleHeaderKeyChange","e","handleHeaderValueChange","addHeader","onClickHeader","onClickBody","handleBodyRawInputChange","render","height","overflow","mapDispatchToProps","dispatch","newHttpData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport { connect } from 'react-redux';\r\nimport { httpHistory ,to } from '../store/actions/httpHistoryActions'\r\nvar JSONpretty = require('react-json-pretty');\r\n\r\n// import firebase from \"../config/fbConfig\"\r\n//console.log(firebase.firestore().collection(\"test\"));\r\n\r\nclass HttpRequest extends Component {\r\n  state = {\r\n    url: \"\",\r\n    result: [],\r\n    method: \"GET\",\r\n    body: \"\",\r\n    headerKeys: [\"Content-Type\"],\r\n    headerValues: [\"application/json\"],\r\n    header: {},\r\n    showHeader: false,\r\n    showBody: true\r\n  };\r\n\r\n  // componentWillReceiveProps(){\r\n  //   console.log(\"receive props called\")\r\n  //   if(this.props.history!=undefined){\r\n  //     console.log('this is props', this.props.history,);\r\n  //     this.setState({url: this.props.history[0].url,\r\n  //       method: this.props.history[0].method,\r\n  //       bodyKeys: this.props.history[0].bodyKeys,\r\n  //       bodyValues: this.props.history[0].bodyValues,\r\n  //       body: this.props.history[0].body,\r\n  //       headerKeys: this.props.history[0].headerKeys,\r\n  //       headerValues: this.props.history[0].headerValues,\r\n  //       header: this.props.history[0].body\r\n  //        })\r\n  //   }\r\n  //  }\r\n  handleUrlChange = event => {\r\n    this.setState({ url: event.target.value });\r\n  };\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const headObj = {};\r\n    this.state.headerKeys.map((headerKey, index) => {\r\n      return (headObj[headerKey] = this.state.headerValues[index]);\r\n    });\r\n    let bodyInput = \"\";\r\n    if (this.state.body.length != 0) {\r\n      bodyInput = JSON.parse(this.state.body)\r\n    }\r\n\r\n    this.setState({ body: JSON.stringify(bodyInput), header: headObj }, () => {\r\n      this.props.httpHistory(this.state, this.props.auth)\r\n      if (this.state.method === \"GET\") {\r\n        fetch(this.state.url, {\r\n          headers: this.state.header\r\n        })\r\n          .then(a => a.json())\r\n          .then(result => this.setState({ result: JSON.stringify(result) }))\r\n          .catch(err => {\r\n            //console.log(\"error\" + err);\r\n          });\r\n        //console.log(this.state);\r\n      } else {\r\n        fetch(this.state.url, {\r\n          headers: this.state.header,\r\n          method: this.state.method,\r\n          body: JSON.stringify(this.state.body)\r\n        })\r\n          .then(a => a.json())\r\n          .then(result => this.setState({ result: JSON.stringify(result) }))\r\n          .catch(err => {\r\n            //console.log(\"error\" + err);\r\n          });\r\n        //console.log(this.state);\r\n      }\r\n\r\n    })\r\n\r\n\r\n  };\r\n\r\n  handleSelectChange = event => {\r\n    this.setState({ method: event.target.value });\r\n  };\r\n\r\n  handleHeaderRemove = index => {\r\n    this.state.headerKeys.splice(index, 1);\r\n    this.state.headerValues.splice(index, 1);\r\n    this.setState({ headerKeys: this.state.headerKeys });\r\n    this.setState({ headervalues: this.state.headerValues });\r\n  };\r\n\r\n  handleHeaderKeyChange = (e, index) => {\r\n    this.state.headerKeys[index] = e.target.value;\r\n    // //console.log(this.state.bodyKey);\r\n    this.setState({ headerKeys: this.state.headerKeys });\r\n  };\r\n\r\n  handleHeaderValueChange = (e, index) => {\r\n    this.state.headerValues[index] = e.target.value;\r\n    // //console.log(this.state.bodyKey);\r\n    this.setState({ headerValues: this.state.headerValues });\r\n  };\r\n\r\n\r\n\r\n  addHeader = () => {\r\n    this.setState({ headerKeys: [...this.state.headerKeys, \"\"] });\r\n    this.setState({ headerValues: [...this.state.headerValues, \"\"] });\r\n  };\r\n  onClickHeader = () => {\r\n    this.setState({ showHeader: true, showBody: false });\r\n  };\r\n  onClickBody = () => {\r\n    this.setState({ showHeader: false, showBody: true });\r\n  };\r\n  handleBodyRawInputChange = e => {\r\n    this.setState({ body: e.target.value });\r\n  };\r\n\r\n  render() {\r\n\r\n    // console.log('this is  auth',this.props.auth)\r\n    return (\r\n      <div className=\"urlArea\">\r\n        <form onSubmit={this.handleFormSubmit}>\r\n          <select onChange={this.handleSelectChange}>\r\n            <option value=\"GET\">GET</option>\r\n            <option value=\"PUT\">PUT</option>\r\n            <option value=\"POST\">POST</option>\r\n            <option value=\"DELETE\">DELETE</option>\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.url}\r\n            onChange={this.handleUrlChange}\r\n            className=\"inputUrl\"\r\n          />\r\n          <input type=\"submit\" value=\"Send\" className=\"sendButton\" />\r\n\r\n        </form>\r\n        <nav className=\"header-body-nav\">\r\n          <button className=\"header-body-tab\" onClick={this.onClickHeader}>\r\n            Header\r\n          </button>\r\n          <button className=\"header-body-tab\" onClick={this.onClickBody}>\r\n            Body\r\n          </button>\r\n        </nav>\r\n        {this.state.showBody ? (\r\n          <span>\r\n            <textarea\r\n              className=\"body-raw-input\"\r\n              placeholder={\"Body\"}\r\n              value={this.state.body}\r\n              onChange={e => {\r\n                this.handleBodyRawInputChange(e);\r\n              }}\r\n            />\r\n          </span>\r\n        ) : null}\r\n        {this.state.showHeader ? (\r\n          <span>\r\n            {this.state.headerKeys.map((headerKey, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <input\r\n                    placeholder={\"Key\"}\r\n                    value={headerKey}\r\n                    onChange={e => {\r\n                      this.handleHeaderKeyChange(e, index);\r\n                    }}\r\n                  />\r\n                  <input\r\n                    placeholder={\"value\"}\r\n                    value={this.state.headerValues[index]}\r\n                    onChange={e => {\r\n                      this.handleHeaderValueChange(e, index);\r\n                    }}\r\n                  />\r\n                  <button onClick={() => this.handleHeaderRemove(index)}>\r\n                    Remove\r\n                  </button>\r\n                </div>\r\n              );\r\n            })}\r\n            <button onClick={e => this.addHeader(e)}>Add Header</button>\r\n\r\n          </span>\r\n        ) : null}\r\n        <div style={{ height: 500, overflow: 'auto' }}>\r\n          <span >{this.state.result.length === 0 ? null : <JSONpretty id=\"response-area\" data={this.state.result} />}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    httpHistory: (newHttpData, auth) => dispatch(httpHistory(newHttpData, auth))\r\n  }\r\n}\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(HttpRequest);\r\n"]},"metadata":{},"sourceType":"module"}