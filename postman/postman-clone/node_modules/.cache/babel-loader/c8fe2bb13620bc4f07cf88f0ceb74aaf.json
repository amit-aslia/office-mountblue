{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\src\\\\Components\\\\HttpRequest.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { httpHistory } from '../store/actions/httpHistoryActions';\n\nclass HttpRequest extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      url: \"\",\n      result: \"\",\n      method: \"GET\",\n      bodyKeys: [],\n      bodyValues: [],\n      body: {},\n      headerKeys: [],\n      headerValues: [],\n      header: {}\n    };\n\n    this.handleUrlChange = event => {\n      this.setState({\n        url: event.target.value\n      }); // console.log(this.state)\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      this.props.httpHistory(this.state, this.props.auth);\n\n      if (this.state.method === \"GET\") {\n        fetch(this.state.url, {\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(a => a.json()).then(result => this.setState({\n          result: JSON.stringify(result).json()\n        })).catch(err => {\n          console.log(\"error\" + err);\n        }); // console.log(this.state);\n      } else {\n        fetch(this.state.url, {\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json\"\n          },\n          method: this.state.method,\n          body: JSON.stringify(this.state.body)\n        }).then(a => a.json()).then(result => this.setState({\n          result: JSON.stringify(result)\n        })).catch(err => {\n          console.log(\"error\" + err);\n        }); // console.log(this.state);\n        // console.log('props', this.props.history[0].id)\n      }\n    };\n\n    this.handleSelectChange = event => {\n      this.setState({\n        method: event.target.value\n      });\n    };\n\n    this.handleBodyRemove = index => {\n      this.state.bodyKeys.splice(index, 1);\n      this.state.bodyValues.splice(index, 1);\n      this.setState({\n        bodyKeys: this.state.bodyKeys\n      });\n      this.setState({\n        bodyvalues: this.state.bodyValues\n      });\n    };\n\n    this.handleHeaderRemove = index => {\n      this.state.headerKeys.splice(index, 1);\n      this.state.headerValues.splice(index, 1);\n      this.setState({\n        headerKeys: this.state.headerKeys\n      });\n      this.setState({\n        headervalues: this.state.headerValues\n      });\n    };\n\n    this.handleBodyKeyChange = (e, index) => {\n      this.state.bodyKeys[index] = e.target.value; // console.log(this.state.bodyKey);\n\n      this.setState({\n        bodyKeys: this.state.bodyKeys\n      });\n    };\n\n    this.handleHeaderKeyChange = (e, index) => {\n      this.state.headerKeys[index] = e.target.value; // console.log(this.state.bodyKey);\n\n      this.setState({\n        headerKeys: this.state.headerKeys\n      });\n    };\n\n    this.handleBodyValueChange = (e, index) => {\n      this.state.bodyValues[index] = e.target.value; // console.log(this.state.bodyKey);\n\n      this.setState({\n        bodyValues: this.state.bodyValues\n      });\n    };\n\n    this.handleHeaderValueChange = (e, index) => {\n      this.state.headerValues[index] = e.target.value; // console.log(this.state.bodyKey);\n\n      this.setState({\n        headerValues: this.state.headerValues\n      });\n    };\n\n    this.handlebodySubmit = () => {\n      const obj = {};\n      this.state.bodyKeys.map((bodyKey, index) => {\n        return obj[bodyKey] = this.state.bodyValues[index];\n      });\n      this.setState({\n        body: obj\n      }, () => console.log(this.state.body));\n    };\n\n    this.handleHeaderSubmit = () => {\n      const obj = {};\n      this.state.headerKeys.map((headerKey, index) => {\n        return obj[headerKey] = this.state.headerValues[index];\n      });\n      this.setState({\n        header: obj\n      }, () => console.log(this.state.header));\n    };\n\n    this.addBody = () => {\n      this.setState({\n        bodyKeys: [...this.state.bodyKeys, \"\"]\n      });\n      this.setState({\n        bodyValues: [...this.state.bodyValues, \"\"]\n      });\n    };\n\n    this.addHeader = () => {\n      this.setState({\n        headerKeys: [...this.state.headerKeys, \"\"]\n      });\n      this.setState({\n        headerValues: [...this.state.headerValues, \"\"]\n      });\n    };\n  }\n\n  render() {\n    console.log('this is httphistory', this.props.history);\n    return React.createElement(\"div\", {\n      className: \"urlArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.handleSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"GET\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"GET\"), React.createElement(\"option\", {\n      value: \"PUT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"PUT\"), React.createElement(\"option\", {\n      value: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"POST\"), React.createElement(\"option\", {\n      value: \"DELETE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"DELETE\")), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.url,\n      onChange: this.handleUrlChange,\n      className: \"inputUrl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Send\",\n      className: \"sendButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.state.result)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.state.bodyKeys.map((bodyKey, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Key\",\n        value: bodyKey,\n        onChange: e => {\n          this.handleBodyKeyChange(e, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        placeholder: \"value\",\n        value: this.state.bodyValues[index],\n        onChange: e => {\n          this.handleBodyValueChange(e, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: () => this.handleBodyRemove(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Remove\"));\n    }), React.createElement(\"button\", {\n      onClick: e => this.addBody(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Add body\"), React.createElement(\"button\", {\n      onClick: e => this.handlebodySubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \" Submit Body\")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.state.headerKeys.map((headerKey, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Key\",\n        value: headerKey,\n        onChange: e => {\n          this.handleHeaderKeyChange(e, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        placeholder: \"value\",\n        value: this.state.headerValues[index],\n        onChange: e => {\n          this.handleHeaderValueChange(e, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: () => this.handleHeaderRemove(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Remove\"));\n    }), React.createElement(\"button\", {\n      onClick: e => this.addHeader(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Add Header\"), React.createElement(\"button\", {\n      onClick: e => this.handleHeaderSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \" Submit Header\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    httpHistory: (newHttpData, auth) => dispatch(httpHistory(newHttpData, auth))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(HttpRequest);","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/Components/HttpRequest.jsx"],"names":["React","Component","connect","httpHistory","HttpRequest","state","url","result","method","bodyKeys","bodyValues","body","headerKeys","headerValues","header","handleUrlChange","event","setState","target","value","handleFormSubmit","preventDefault","props","auth","fetch","headers","then","a","json","JSON","stringify","catch","err","console","log","handleSelectChange","handleBodyRemove","index","splice","bodyvalues","handleHeaderRemove","headervalues","handleBodyKeyChange","e","handleHeaderKeyChange","handleBodyValueChange","handleHeaderValueChange","handlebodySubmit","obj","map","bodyKey","handleHeaderSubmit","headerKey","addBody","addHeader","render","history","mapDispatchToProps","dispatch","newHttpData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport { connect } from 'react-redux';\r\nimport { httpHistory } from '../store/actions/httpHistoryActions'\r\n\r\nclass HttpRequest extends Component {\r\n  state = {\r\n    url: \"\",\r\n    result: \"\",\r\n    method: \"GET\",\r\n    bodyKeys: [],\r\n    bodyValues: [],\r\n    body: {},\r\n    headerKeys: [],\r\n    headerValues: [],\r\n    header: {}\r\n  };\r\n\r\n  handleUrlChange = event => {\r\n    this.setState({ url: event.target.value });\r\n    // console.log(this.state)\r\n  };\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.httpHistory(this.state, this.props.auth);\r\n\r\n    if (this.state.method === \"GET\") {\r\n      fetch(this.state.url, {\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      })\r\n        .then(a => a.json())\r\n        .then(result => this.setState({ result: JSON.stringify(result).json() }))\r\n        .catch(err => {\r\n          console.log(\"error\" + err);\r\n        });\r\n      // console.log(this.state);\r\n    }\r\n\r\n    else {\r\n      fetch(this.state.url, {\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: this.state.method,\r\n        body: JSON.stringify(this.state.body)\r\n      })\r\n        .then(a => a.json())\r\n        .then(result => this.setState({ result: JSON.stringify(result) }))\r\n        .catch(err => {\r\n          console.log(\"error\" + err);\r\n        });\r\n      // console.log(this.state);\r\n      // console.log('props', this.props.history[0].id)\r\n    }\r\n  }\r\n\r\n  handleSelectChange = event => {\r\n    this.setState({ method: event.target.value });\r\n  };\r\n  handleBodyRemove = index => {\r\n    this.state.bodyKeys.splice(index, 1);\r\n    this.state.bodyValues.splice(index, 1);\r\n    this.setState({ bodyKeys: this.state.bodyKeys });\r\n    this.setState({ bodyvalues: this.state.bodyValues });\r\n  };\r\n  handleHeaderRemove = index => {\r\n    this.state.headerKeys.splice(index, 1);\r\n    this.state.headerValues.splice(index, 1);\r\n    this.setState({ headerKeys: this.state.headerKeys });\r\n    this.setState({ headervalues: this.state.headerValues });\r\n  };\r\n  handleBodyKeyChange = (e, index) => {\r\n    this.state.bodyKeys[index] = e.target.value;\r\n    // console.log(this.state.bodyKey);\r\n    this.setState({ bodyKeys: this.state.bodyKeys });\r\n  };\r\n  handleHeaderKeyChange = (e, index) => {\r\n    this.state.headerKeys[index] = e.target.value;\r\n    // console.log(this.state.bodyKey);\r\n    this.setState({ headerKeys: this.state.headerKeys });\r\n  };\r\n  handleBodyValueChange = (e, index) => {\r\n    this.state.bodyValues[index] = e.target.value;\r\n    // console.log(this.state.bodyKey);\r\n    this.setState({ bodyValues: this.state.bodyValues });\r\n  };\r\n  handleHeaderValueChange = (e, index) => {\r\n    this.state.headerValues[index] = e.target.value;\r\n    // console.log(this.state.bodyKey);\r\n    this.setState({ headerValues: this.state.headerValues });\r\n  };\r\n  handlebodySubmit = () => {\r\n    const obj = {};\r\n    this.state.bodyKeys.map((bodyKey, index) => {\r\n      return (obj[bodyKey] = this.state.bodyValues[index]);\r\n    });\r\n    this.setState({ body: obj }, () => console.log(this.state.body));\r\n  };\r\n  handleHeaderSubmit = () => {\r\n    const obj = {};\r\n    this.state.headerKeys.map((headerKey, index) => {\r\n      return (obj[headerKey] = this.state.headerValues[index]);\r\n    });\r\n    this.setState({ header: obj }, () => console.log(this.state.header));\r\n  };\r\n  addBody = () => {\r\n    this.setState({ bodyKeys: [...this.state.bodyKeys, \"\"] });\r\n    this.setState({ bodyValues: [...this.state.bodyValues, \"\"] });\r\n  };\r\n  addHeader = () => {\r\n    this.setState({ headerKeys: [...this.state.headerKeys, \"\"] });\r\n    this.setState({ headerValues: [...this.state.headerValues, \"\"] });\r\n  };\r\n  render() {\r\n    console.log('this is httphistory', this.props.history)\r\n    return (\r\n      <div className=\"urlArea\">\r\n        <form onSubmit={this.handleFormSubmit}>\r\n          <select onChange={this.handleSelectChange}>\r\n            <option value=\"GET\">GET</option>\r\n            <option value=\"PUT\">PUT</option>\r\n            <option value=\"POST\">POST</option>\r\n            <option value=\"DELETE\">DELETE</option>\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.url}\r\n            onChange={this.handleUrlChange}\r\n            className=\"inputUrl\"\r\n          />\r\n          <input type=\"submit\" value=\"Send\" className=\"sendButton\" />\r\n          <div>{this.state.result}</div>\r\n        </form>\r\n        <span>\r\n          {this.state.bodyKeys.map((bodyKey, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <input\r\n                  placeholder={\"Key\"}\r\n                  value={bodyKey}\r\n                  onChange={e => {\r\n                    this.handleBodyKeyChange(e, index);\r\n                  }}\r\n                />\r\n                <input\r\n                  placeholder={\"value\"}\r\n                  value={this.state.bodyValues[index]}\r\n                  onChange={e => {\r\n                    this.handleBodyValueChange(e, index);\r\n                  }}\r\n                />\r\n                <button onClick={() => this.handleBodyRemove(index)}>Remove</button>\r\n              </div>\r\n            );\r\n          })}\r\n          <button onClick={e => this.addBody(e)}>Add body</button>\r\n          <button onClick={e => this.handlebodySubmit(e)}> Submit Body</button>\r\n        </span>\r\n        <span>\r\n          {this.state.headerKeys.map((headerKey, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <input\r\n                  placeholder={\"Key\"}\r\n                  value={headerKey}\r\n                  onChange={e => {\r\n                    this.handleHeaderKeyChange(e, index);\r\n                  }}\r\n                />\r\n                <input\r\n                  placeholder={\"value\"}\r\n                  value={this.state.headerValues[index]}\r\n                  onChange={e => {\r\n                    this.handleHeaderValueChange(e, index);\r\n                  }}\r\n                />\r\n                <button onClick={() => this.handleHeaderRemove(index)}>Remove</button>\r\n              </div>\r\n            );\r\n          })}\r\n          <button onClick={e => this.addHeader(e)}>Add Header</button>\r\n          <button onClick={e => this.handleHeaderSubmit(e)}> Submit Header</button>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    httpHistory: (newHttpData, auth) => dispatch(httpHistory(newHttpData, auth))\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(HttpRequest);\r\n"]},"metadata":{},"sourceType":"module"}