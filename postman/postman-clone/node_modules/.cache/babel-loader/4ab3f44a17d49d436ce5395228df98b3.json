{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}export var httpHistory=function httpHistory(newHttpData,auth){console.log('this is history',newHttpData);console.log('thi si auth',auth);console.log('this is auth in action',auth);return function(dispatch,getState,_ref){var getFirestore=_ref.getFirestore;var firestore=getFirestore();firestore.collection('history').add(_objectSpread({},newHttpData,{userId:auth.uid,createdAt:new Date()})).then(function(){dispatch({type:'STORE_HTTPDATA',newHttpData:newHttpData});}).catch(function(err){dispatch({type:'STORE_HTTPDATA_ERROR',err:err});});};};export var deleteHTTPHistory=function deleteHTTPHistory(history){console.log('this is action of history',history);return function(dispatch,getState,_ref2){var getFirestore=_ref2.getFirestore;var firestore=getFirestore();firestore.collection('history').doc(history.id).delete().then(function(response){dispatch({type:'DELETE_HISTORY'});}).catch(function(err){dispatch({type:'DELETE_HISTORY_ERROR',err:err});});};};export var toRenderHistory=function toRenderHistory(renderData){console.log('ths is redmerig data',renderData);return{type:'RENDER_HISTORY_DATA',payload:renderData};};","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/store/actions/httpHistoryActions.js"],"names":["httpHistory","newHttpData","auth","console","log","dispatch","getState","getFirestore","firestore","collection","add","userId","uid","createdAt","Date","then","type","catch","err","deleteHTTPHistory","history","doc","id","delete","response","toRenderHistory","renderData","payload"],"mappings":"07BAAA,MAAO,IAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,WAAD,CAAcC,IAAd,CAAuB,CAC9CC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA8BH,WAA9B,EACAE,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA0BF,IAA1B,EACAC,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAAsCF,IAAtC,EACA,MAAO,UAACG,QAAD,CAAWC,QAAX,MAA0C,IAAnBC,CAAAA,YAAmB,MAAnBA,YAAmB,CAC7C,GAAMC,CAAAA,SAAS,CAAGD,YAAY,EAA9B,CACAC,SAAS,CAACC,UAAV,CAAqB,SAArB,EAAgCC,GAAhC,kBAEOT,WAFP,EAGIU,MAAM,CAAET,IAAI,CAACU,GAHjB,CAIIC,SAAS,CAAE,GAAIC,CAAAA,IAAJ,EAJf,IAKGC,IALH,CAKQ,UAAM,CACVV,QAAQ,CAAC,CAAEW,IAAI,CAAE,gBAAR,CAA0Bf,WAAW,CAAXA,WAA1B,CAAD,CAAR,CACH,CAPD,EAOGgB,KAPH,CAOS,SAAAC,GAAG,CAAI,CACZb,QAAQ,CAAC,CAAEW,IAAI,CAAE,sBAAR,CAAgCE,GAAG,CAAHA,GAAhC,CAAD,CAAR,CACH,CATD,EAUH,CAZD,CAaH,CAjBM,CAmBP,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,OAAD,CAAa,CAC1CjB,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAyCgB,OAAzC,EACA,MAAO,UAACf,QAAD,CAAWC,QAAX,OAA0C,IAAnBC,CAAAA,YAAmB,OAAnBA,YAAmB,CAC7C,GAAMC,CAAAA,SAAS,CAAGD,YAAY,EAA9B,CAEAC,SAAS,CAACC,UAAV,CAAqB,SAArB,EAAgCY,GAAhC,CAAoCD,OAAO,CAACE,EAA5C,EAAgDC,MAAhD,GACKR,IADL,CACU,SAACS,QAAD,CAAc,CAChBnB,QAAQ,CAAC,CAAEW,IAAI,CAAE,gBAAR,CAAD,CAAR,CACH,CAHL,EAGOC,KAHP,CAGa,SAAUC,GAAV,CAAe,CACpBb,QAAQ,CAAC,CAAEW,IAAI,CAAE,sBAAR,CAAgCE,GAAG,CAAHA,GAAhC,CAAD,CAAR,CACH,CALL,EAMH,CATD,CAUH,CAZM,CAcP,MAAO,IAAMO,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,UAAD,CAAgB,CAC3CvB,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAoCsB,UAApC,EACA,MAAO,CACHV,IAAI,CAAE,qBADH,CAEHW,OAAO,CAAED,UAFN,CAAP,CAIH,CANM","sourcesContent":["export const httpHistory = (newHttpData, auth) => {\r\n    console.log('this is history',newHttpData);\r\n    console.log('thi si auth',auth)\r\n    console.log('this is auth in action', auth)\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('history').add({\r\n\r\n            ...newHttpData,\r\n            userId: auth.uid,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'STORE_HTTPDATA', newHttpData })\r\n        }).catch(err => {\r\n            dispatch({ type: 'STORE_HTTPDATA_ERROR', err })\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteHTTPHistory = (history) => {\r\n    console.log('this is action of history', history)\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        const firestore = getFirestore()\r\n\r\n        firestore.collection('history').doc(history.id).delete()\r\n            .then((response) => {\r\n                dispatch({ type: 'DELETE_HISTORY' })\r\n            }).catch(function (err) {\r\n                dispatch({ type: 'DELETE_HISTORY_ERROR', err })\r\n            });\r\n    }\r\n}\r\n\r\nexport const toRenderHistory = (renderData) => {\r\n    console.log('ths is redmerig data', renderData)\r\n    return {\r\n        type: 'RENDER_HISTORY_DATA',\r\n        payload: renderData\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}