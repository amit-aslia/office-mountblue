{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\src\\\\Components\\\\HttpRequest.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { httpHistory } from '../store/actions/httpHistoryActions';\nimport HttpRequestHeaders from './HttpRequestHeaders';\nimport HttpRequestBody from './HttpRequestBody';\nimport HttpResponse from './HttpResponse';\nimport { Tabs, Tab, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { addCurrentTabId } from '../store/actions/tabHistoryActions';\n\nclass HttpRequest extends Component {\n  constructor(props) {\n    props.addCurrentTabId(tis.props.index);\n  }\n\n  componentWillReceiveProps() {\n    // this.props.addCurrentTabId(this.props.index);\n    let history = this.props.historyData;\n    console.log('insdide compoennent will recuevrf');\n\n    if (Object.keys(history).length !== 0 && this.props.previousTab) {\n      console.log('current tab', this.props.previousTab, 'current index', this.props.index); // if(this.props.previousTab===this.props.index)\n      // {\n      // this.setState({\n      //   url: history.url,\n      //   method: history.method,\n      //   body: history.body,\n      //   headerKeys: history.headerKeys,\n      //   headerValues: history.headerValues,\n      //   headers: history.headers\n      // });\n      // }\n      // else\n      // {\n      // this.setState({\n      //   url: \"\",\n      //   method: 'GET',\n      //   body: '',\n      //   headerKeys: ['Content-Type'],\n      //   headerValues: ['application/json'],\n      //   headers: {}\n      // });\n      // }\n    } // this.props.addCurrentTabId(this.props.index)\n\n  }\n\n  componentWillMount() {\n    let history = this.props.historyData;\n\n    if (Object.keys(history).length !== 0) {\n      console.log('inside the component did mount');\n\n      if (this.props.index === this.props.previousTab) {\n        this.setState({\n          url: history.url,\n          method: history.method,\n          body: history.body,\n          headerKeys: history.headerKeys,\n          headerValues: history.headerValues,\n          headers: history.headers\n        });\n      } else {\n        this.setState({\n          url: '',\n          method: 'GET',\n          body: '',\n          headerKeys: ['Content-Type'],\n          headerValues: ['application/json'],\n          headers: {}\n        });\n      }\n    }\n  }\n\n  render() {\n    // console.log('these are props',this.props.index)\n    // this.props.addCurrentTabId(this.props.index)\n    localStorage.setItem('currentTab', this.props.previousTab);\n    localStorage.setItem('currentIndex', this.props.index);\n    return React.createElement(\"div\", {\n      className: \"urlArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"url-title\",\n      style: {\n        fontWeight: 'bold',\n        fontFamily: 'Helvetica',\n        marginBottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, this.state.url === '' ? 'Untitled' : this.state.url), React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.handleSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, this.state.method === 'GET' ? React.createElement(\"option\", {\n      value: \"GET\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"GET\") : React.createElement(\"option\", {\n      value: \"GET\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"GET\"), this.state.method === 'POST' ? React.createElement(\"option\", {\n      value: \"POST\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"POST\") : React.createElement(\"option\", {\n      value: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"POST\"), this.state.method === 'PUT' ? React.createElement(\"option\", {\n      value: \"PUT\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"PUT\") : React.createElement(\"option\", {\n      value: \"PUT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"PUT\"), this.state.method === 'DELETE' ? React.createElement(\"option\", {\n      value: \"DELETE\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"DELETE\") : React.createElement(\"option\", {\n      value: \"DELETE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"DELETE\")), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Request URL\",\n      value: this.state.url,\n      onChange: this.handleUrlChange,\n      className: \"inputUrl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Send\",\n      className: \"sendButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }))), React.createElement(Tabs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Header\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Body\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Test\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Test Result\")), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(HttpRequestHeaders, {\n      addHeader: e => {\n        this.addHeader(e);\n      },\n      handleHeaderRemove: index => {\n        this.handleHeaderRemove(index);\n      },\n      handleHeaderValueChange: (e, index) => {\n        this.handleHeaderValueChange(e, index);\n      },\n      handleHeaderKeyChange: (e, index) => {\n        this.handleHeaderKeyChange(e, index);\n      },\n      headerValues: this.state.headerValues,\n      headerKeys: this.state.headerKeys,\n      showHeader: this.state.showHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    })), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(HttpRequestBody, {\n      body: this.state.body,\n      showBody: this.state.showBody,\n      handleBodyRawInputChange: e => {\n        this.handleBodyRawInputChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    })), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"test-tab\",\n      placeholder: 'Test',\n      value: this.state.test,\n      onChange: e => {\n        this.handleTestChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    })), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"test-tab\",\n      placeholder: 'Test',\n      value: this.state.testOutput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"response-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Response\"), React.createElement(HttpResponse, {\n      result: this.state.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    historyData: state.historyData,\n    tabHistory: state.tabHistory,\n    previousTab: state.currentTabId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    httpHistory: (newHttpData, auth) => dispatch(httpHistory(newHttpData, auth)),\n    addCurrentTabId: currenttab => dispatch(addCurrentTabId(currenttab))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HttpRequest);","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/Components/HttpRequest.jsx"],"names":["React","Component","connect","httpHistory","HttpRequestHeaders","HttpRequestBody","HttpResponse","Tabs","Tab","TabList","TabPanel","addCurrentTabId","HttpRequest","constructor","props","tis","index","componentWillReceiveProps","history","historyData","console","log","Object","keys","length","previousTab","componentWillMount","setState","url","method","body","headerKeys","headerValues","headers","render","localStorage","setItem","fontWeight","fontFamily","marginBottom","state","handleFormSubmit","handleSelectChange","handleUrlChange","e","addHeader","handleHeaderRemove","handleHeaderValueChange","handleHeaderKeyChange","showHeader","showBody","handleBodyRawInputChange","test","handleTestChange","testOutput","result","mapStateToProps","tabHistory","currentTabId","mapDispatchToProps","dispatch","newHttpData","auth","currenttab"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { httpHistory } from '../store/actions/httpHistoryActions';\r\nimport HttpRequestHeaders from './HttpRequestHeaders';\r\nimport HttpRequestBody from './HttpRequestBody';\r\nimport HttpResponse from './HttpResponse';\r\nimport { Tabs, Tab, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { addCurrentTabId } from '../store/actions/tabHistoryActions';\r\n\r\nclass HttpRequest extends Component {\r\n  constructor(props)\r\n  {\r\n    props.addCurrentTabId(tis.props.index);\r\n \r\n  }\r\n  state = {\r\n    url: '',\r\n    result: '',\r\n    method: 'GET',\r\n    body: '',\r\n    headerKeys: ['Content-Type'],\r\n    headerValues: ['application/json'],\r\n    headers: {},\r\n    test: '',\r\n    testOutput: ''\r\n  };\r\n  componentWillReceiveProps() {\r\n    // this.props.addCurrentTabId(this.props.index);\r\n\r\n    let history = this.props.historyData;\r\n    console.log('insdide compoennent will recuevrf');\r\n    if (Object.keys(history).length !== 0 && this.props.previousTab) {\r\n      console.log(\r\n        'current tab',\r\n        this.props.previousTab,\r\n        'current index',\r\n        this.props.index\r\n      );\r\n\r\n      // if(this.props.previousTab===this.props.index)\r\n      // {\r\n      // this.setState({\r\n      //   url: history.url,\r\n      //   method: history.method,\r\n      //   body: history.body,\r\n      //   headerKeys: history.headerKeys,\r\n      //   headerValues: history.headerValues,\r\n      //   headers: history.headers\r\n      // });\r\n      // }\r\n      // else\r\n      // {\r\n      // this.setState({\r\n      //   url: \"\",\r\n      //   method: 'GET',\r\n      //   body: '',\r\n      //   headerKeys: ['Content-Type'],\r\n      //   headerValues: ['application/json'],\r\n      //   headers: {}\r\n      // });\r\n      // }\r\n    }\r\n    // this.props.addCurrentTabId(this.props.index)\r\n  }\r\n  componentWillMount() {\r\n    let history = this.props.historyData;\r\n    if (Object.keys(history).length !== 0) {\r\n      console.log('inside the component did mount');\r\n      if (this.props.index === this.props.previousTab) {\r\n        this.setState({\r\n          url: history.url,\r\n          method: history.method,\r\n          body: history.body,\r\n          headerKeys: history.headerKeys,\r\n          headerValues: history.headerValues,\r\n          headers: history.headers\r\n        });\r\n      } else {\r\n        this.setState({\r\n          url: '',\r\n          method: 'GET',\r\n          body: '',\r\n          headerKeys: ['Content-Type'],\r\n          headerValues: ['application/json'],\r\n          headers: {}\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  compareTestWithResponse = (result) => {\r\n    if (this.state.test.length === 0) {\r\n      return;\r\n    }\r\n    try {\r\n      let test = JSON.parse(this.state.test);\r\n      let jsonKeyinTest = Object.keys(test);\r\n      let jsonKeyInResult = Object.keys(result);\r\n      if (jsonKeyInResult.length !== jsonKeyinTest.length) {\r\n        this.setState({ testOutput: 'Failed length not equal' });\r\n        console.log('Failed length not equal');\r\n        return;\r\n      } else {\r\n        for (let i = 0; i < jsonKeyInResult.length; i++) {\r\n          if (!jsonKeyinTest.includes(jsonKeyInResult[i])) {\r\n            this.setState({ testOutput: 'Failed Keys not present' });\r\n            console.log(\r\n              'failed keys not present' + jsonKeyinTest + ',' + jsonKeyInResult\r\n            );\r\n            return;\r\n          }\r\n          if (test[jsonKeyInResult[i]] !== result[jsonKeyInResult[i]]) {\r\n            this.setState({\r\n              testOutput:\r\n                'Failed not equal properties of ' + jsonKeyInResult[i] + ''\r\n            });\r\n            console.log('failed not equal properties of' + jsonKeyInResult[i]);\r\n            return;\r\n          }\r\n        }\r\n        this.setState({ testOutput: 'Passed' });\r\n        console.log('Passed');\r\n      }\r\n    } catch (err) {\r\n      console.log('badly formatted test cases');\r\n    }\r\n  };\r\n  handleUrlChange = (event) => {\r\n    this.setState({ url: event.target.value });\r\n  };\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.url !== '') {\r\n      const headObj = {};\r\n      this.state.headerKeys.map((headerKey, index) => {\r\n        return (headObj[headerKey] = this.state.headerValues[index]);\r\n      });\r\n      let bodyInput = '';\r\n\r\n      this.setState({ headers: headObj }, () => {\r\n        this.props.httpHistory(this.state, this.props.auth);\r\n        console.log(this.state);\r\n        if (this.state.method === 'GET') {\r\n          fetch(this.state.url, {\r\n            headers: this.state.headers\r\n          })\r\n            .then((a) => a.json())\r\n            .then((result) =>\r\n              this.setState({ result: JSON.stringify(result) }, () => {\r\n                this.compareTestWithResponse(result);\r\n              })\r\n            )\r\n            .catch((err) => {\r\n              //console.log(\"error\" + err);\r\n            });\r\n          //console.log(this.state);\r\n        } else {\r\n          fetch(this.state.url, {\r\n            headers: this.state.headers,\r\n            method: this.state.method,\r\n            body: this.state.body\r\n          })\r\n            .then((a) => a.json())\r\n            .then((result) => this.setState({ result: JSON.stringify(result) }))\r\n            .catch((err) => {\r\n              //console.log(\"error\" + err);\r\n            });\r\n          //console.log(this.state);\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({ result: 'EMPTY URL' });\r\n    }\r\n  };\r\n\r\n  handleSelectChange = (event) => {\r\n    this.setState({ method: event.target.value });\r\n  };\r\n\r\n  handleHeaderRemove = (index) => {\r\n    this.state.headerKeys.splice(index, 1);\r\n    this.state.headerValues.splice(index, 1);\r\n    this.setState({ headerKeys: this.state.headerKeys });\r\n    this.setState({ headervalues: this.state.headerValues });\r\n  };\r\n\r\n  handleHeaderKeyChange = (e, index) => {\r\n    this.state.headerKeys[index] = e.target.value;\r\n    // //console.log(this.state.bodyKey);\r\n    this.setState({ headerKeys: this.state.headerKeys });\r\n  };\r\n\r\n  handleHeaderValueChange = (e, index) => {\r\n    this.state.headerValues[index] = e.target.value;\r\n    // //console.log(this.state.bodyKey);\r\n    this.setState({ headerValues: this.state.headerValues });\r\n  };\r\n\r\n  addHeader = () => {\r\n    this.setState({ headerKeys: [...this.state.headerKeys, ''] });\r\n    this.setState({ headerValues: [...this.state.headerValues, ''] });\r\n  };\r\n  onClickHeader = () => {\r\n    this.setState({ showHeader: true, showBody: false });\r\n  };\r\n  onClickBody = () => {\r\n    this.setState({ showHeader: false, showBody: true });\r\n  };\r\n  handleBodyRawInputChange = (e) => {\r\n    this.setState({ body: e.target.value });\r\n  };\r\n  handleTestChange = (e) => {\r\n    this.setState({ test: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    // console.log('these are props',this.props.index)\r\n    // this.props.addCurrentTabId(this.props.index)\r\n    localStorage.setItem('currentTab', this.props.previousTab);\r\n    localStorage.setItem('currentIndex', this.props.index);\r\n\r\n    return (\r\n      <div className=\"urlArea\">\r\n        <p\r\n          className=\"url-title\"\r\n          style={{\r\n            fontWeight: 'bold',\r\n            fontFamily: 'Helvetica',\r\n            marginBottom: 0\r\n          }}\r\n        >\r\n          {this.state.url === '' ? 'Untitled' : this.state.url}\r\n        </p>\r\n\r\n        <form onSubmit={this.handleFormSubmit}>\r\n          <div className=\"form-section\">\r\n            <select onChange={this.handleSelectChange}>\r\n              {this.state.method === 'GET' ? (\r\n                <option value=\"GET\" selected>\r\n                  GET\r\n                </option>\r\n              ) : (\r\n                <option value=\"GET\">GET</option>\r\n              )}\r\n              {this.state.method === 'POST' ? (\r\n                <option value=\"POST\" selected>\r\n                  POST\r\n                </option>\r\n              ) : (\r\n                <option value=\"POST\">POST</option>\r\n              )}\r\n              {this.state.method === 'PUT' ? (\r\n                <option value=\"PUT\" selected>\r\n                  PUT\r\n                </option>\r\n              ) : (\r\n                <option value=\"PUT\">PUT</option>\r\n              )}\r\n              {this.state.method === 'DELETE' ? (\r\n                <option value=\"DELETE\" selected>\r\n                  DELETE\r\n                </option>\r\n              ) : (\r\n                <option value=\"DELETE\">DELETE</option>\r\n              )}\r\n            </select>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Request URL\"\r\n              value={this.state.url}\r\n              onChange={this.handleUrlChange}\r\n              className=\"inputUrl\"\r\n            />\r\n            <input type=\"submit\" value=\"Send\" className=\"sendButton\" />\r\n          </div>\r\n        </form>\r\n\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>Header</Tab>\r\n            <Tab>Body</Tab>\r\n\r\n            <Tab>Test</Tab>\r\n            <Tab>Test Result</Tab>\r\n          </TabList>\r\n          <TabPanel>\r\n            <HttpRequestHeaders\r\n              addHeader={(e) => {\r\n                this.addHeader(e);\r\n              }}\r\n              handleHeaderRemove={(index) => {\r\n                this.handleHeaderRemove(index);\r\n              }}\r\n              handleHeaderValueChange={(e, index) => {\r\n                this.handleHeaderValueChange(e, index);\r\n              }}\r\n              handleHeaderKeyChange={(e, index) => {\r\n                this.handleHeaderKeyChange(e, index);\r\n              }}\r\n              headerValues={this.state.headerValues}\r\n              headerKeys={this.state.headerKeys}\r\n              showHeader={this.state.showHeader}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <HttpRequestBody\r\n              body={this.state.body}\r\n              showBody={this.state.showBody}\r\n              handleBodyRawInputChange={(e) => {\r\n                this.handleBodyRawInputChange(e);\r\n              }}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <textarea\r\n              className=\"test-tab\"\r\n              placeholder={'Test'}\r\n              value={this.state.test}\r\n              onChange={(e) => {\r\n                this.handleTestChange(e);\r\n              }}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <textarea\r\n              className=\"test-tab\"\r\n              placeholder={'Test'}\r\n              value={this.state.testOutput}\r\n            />\r\n          </TabPanel>\r\n        </Tabs>\r\n        <div className=\"response-label\">Response</div>\r\n        <HttpResponse result={this.state.result} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    historyData: state.historyData,\r\n    tabHistory: state.tabHistory,\r\n    previousTab: state.currentTabId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    httpHistory: (newHttpData, auth) =>\r\n      dispatch(httpHistory(newHttpData, auth)),\r\n    addCurrentTabId: (currenttab) => dispatch(addCurrentTabId(currenttab))\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HttpRequest);\r\n"]},"metadata":{},"sourceType":"module"}