{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\src\\\\Components\\\\HttpRequest.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { httpHistory } from \"../store/actions/httpHistoryActions\";\nimport HttpRequestHeaders from \"./HttpRequestHeaders\";\nimport HttpRequestBody from \"./HttpRequestBody\";\nimport HttpResponse from \"./HttpResponse\";\nimport { Tabs, Tab, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport { addCurrentTabId } from '../store/actions/tabHistoryActions';\n\nclass HttpRequest extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      url: '',\n      result: '',\n      method: 'GET',\n      body: '',\n      headerKeys: ['Content-Type'],\n      headerValues: ['application/json'],\n      headers: {},\n      test: \"\",\n      testOutput: \"\"\n    };\n\n    this.compareTestWithResponse = result => {\n      if (this.state.test.length === 0) {\n        return;\n      }\n\n      try {\n        let test = JSON.parse(this.state.test);\n        let jsonKeyinTest = Object.keys(test);\n        let jsonKeyInResult = Object.keys(result);\n\n        if (jsonKeyInResult.length !== jsonKeyinTest.length) {\n          this.setState({\n            testOutput: \"Failed length not equal\"\n          });\n          console.log(\"Failed length not equal\");\n          return;\n        } else {\n          for (let i = 0; i < jsonKeyInResult.length; i++) {\n            if (!jsonKeyinTest.includes(jsonKeyInResult[i])) {\n              this.setState({\n                testOutput: \"Failed Keys not present\"\n              });\n              console.log(\"failed keys not present\" + jsonKeyinTest + \",\" + jsonKeyInResult);\n              return;\n            }\n\n            if (test[jsonKeyInResult[i]] !== result[jsonKeyInResult[i]]) {\n              this.setState({\n                testOutput: \"Failed not equal properties of \" + jsonKeyInResult[i] + \"\"\n              });\n              console.log(\"failed not equal properties of\" + jsonKeyInResult[i]);\n              return;\n            }\n          }\n\n          this.setState({\n            testOutput: \"Passed\"\n          });\n          console.log(\"Passed\");\n        }\n      } catch (err) {\n        console.log(\"badly formatted test cases\");\n      }\n    };\n\n    this.handleUrlChange = event => {\n      this.setState({\n        url: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.url !== \"\") {\n        const headObj = {};\n        this.state.headerKeys.map((headerKey, index) => {\n          return headObj[headerKey] = this.state.headerValues[index];\n        });\n        let bodyInput = \"\";\n        this.setState({\n          headers: headObj\n        }, () => {\n          this.props.httpHistory(this.state, this.props.auth);\n          console.log(this.state);\n\n          if (this.state.method === \"GET\") {\n            fetch(this.state.url, {\n              headers: this.state.headers\n            }).then(a => a.json()).then(result => this.setState({\n              result: JSON.stringify(result)\n            }, () => {\n              this.compareTestWithResponse(result);\n            })).catch(err => {//console.log(\"error\" + err);\n            }); //console.log(this.state);\n          } else {\n            fetch(this.state.url, {\n              headers: this.state.headers,\n              method: this.state.method,\n              body: this.state.body\n            }).then(a => a.json()).then(result => this.setState({\n              result: JSON.stringify(result)\n            })).catch(err => {//console.log(\"error\" + err);\n            }); //console.log(this.state);\n          }\n        });\n      } else {\n        this.setState({\n          result: \"EMPTY URL\"\n        });\n      }\n    };\n\n    this.handleSelectChange = event => {\n      this.setState({\n        method: event.target.value\n      });\n    };\n\n    this.handleHeaderRemove = index => {\n      this.state.headerKeys.splice(index, 1);\n      this.state.headerValues.splice(index, 1);\n      this.setState({\n        headerKeys: this.state.headerKeys\n      });\n      this.setState({\n        headervalues: this.state.headerValues\n      });\n    };\n\n    this.handleHeaderKeyChange = (e, index) => {\n      this.state.headerKeys[index] = e.target.value; // //console.log(this.state.bodyKey);\n\n      this.setState({\n        headerKeys: this.state.headerKeys\n      });\n    };\n\n    this.handleHeaderValueChange = (e, index) => {\n      this.state.headerValues[index] = e.target.value; // //console.log(this.state.bodyKey);\n\n      this.setState({\n        headerValues: this.state.headerValues\n      });\n    };\n\n    this.addHeader = () => {\n      this.setState({\n        headerKeys: [...this.state.headerKeys, '']\n      });\n      this.setState({\n        headerValues: [...this.state.headerValues, '']\n      });\n    };\n\n    this.onClickHeader = () => {\n      this.setState({\n        showHeader: true,\n        showBody: false\n      });\n    };\n\n    this.onClickBody = () => {\n      this.setState({\n        showHeader: false,\n        showBody: true\n      });\n    };\n\n    this.handleBodyRawInputChange = e => {\n      this.setState({\n        body: e.target.value\n      });\n    };\n\n    this.handleTestChange = e => {\n      this.setState({\n        test: e.target.value\n      });\n    };\n  }\n\n  componentWillReceiveProps() {\n    let history = this.props.historyData;\n\n    if (Object.keys(history).length !== 0) {\n      this.setState({\n        url: history.url,\n        method: history.method,\n        body: history.body,\n        headerKeys: history.headerKeys,\n        headerValues: history.headerValues,\n        headers: history.headers\n      });\n    } // this.props.addCurrentTabId(this.props.index)\n\n  }\n\n  render() {\n    console.log('these are props', this.props.index);\n    this.props.addCurrentTabId(this.props.index);\n    localStorage.setItem('currentTab', this.props.previousTab);\n    localStorage.setItem;\n    return React.createElement(\"div\", {\n      className: \"urlArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"url-title\",\n      style: {\n        fontWeight: \"bold\",\n        fontFamily: \"Helvetica\",\n        marginBottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, this.state.url === \"\" ? \"Untitled\" : this.state.url), React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.handleSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, this.state.method === \"GET\" ? React.createElement(\"option\", {\n      value: \"GET\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"GET\") : React.createElement(\"option\", {\n      value: \"GET\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"GET\"), this.state.method === \"POST\" ? React.createElement(\"option\", {\n      value: \"POST\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"POST\") : React.createElement(\"option\", {\n      value: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"POST\"), this.state.method === \"PUT\" ? React.createElement(\"option\", {\n      value: \"PUT\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"PUT\") : React.createElement(\"option\", {\n      value: \"PUT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"PUT\"), this.state.method === \"DELETE\" ? React.createElement(\"option\", {\n      value: \"DELETE\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"DELETE\") : React.createElement(\"option\", {\n      value: \"DELETE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"DELETE\")), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Request URL\",\n      value: this.state.url,\n      onChange: this.handleUrlChange,\n      className: \"inputUrl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Send\",\n      className: \"sendButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }))), React.createElement(Tabs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Header\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Body\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Test\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Test Result\")), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(HttpRequestHeaders, {\n      addHeader: e => {\n        this.addHeader(e);\n      },\n      handleHeaderRemove: index => {\n        this.handleHeaderRemove(index);\n      },\n      handleHeaderValueChange: (e, index) => {\n        this.handleHeaderValueChange(e, index);\n      },\n      handleHeaderKeyChange: (e, index) => {\n        this.handleHeaderKeyChange(e, index);\n      },\n      headerValues: this.state.headerValues,\n      headerKeys: this.state.headerKeys,\n      showHeader: this.state.showHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    })), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(HttpRequestBody, {\n      body: this.state.body,\n      showBody: this.state.showBody,\n      handleBodyRawInputChange: e => {\n        this.handleBodyRawInputChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    })), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"test-tab\",\n      placeholder: \"Test\",\n      value: this.state.test,\n      onChange: e => {\n        this.handleTestChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    })), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"test-tab\",\n      placeholder: \"Test\",\n      value: this.state.testOutput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"response-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Response\"), React.createElement(HttpResponse, {\n      result: this.state.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    historyData: state.historyData,\n    tabHistory: state.tabHistory,\n    previousTab: state.currentTabId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    httpHistory: (newHttpData, auth) => dispatch(httpHistory(newHttpData, auth)),\n    addCurrentTabId: currenttab => dispatch(addCurrentTabId(currenttab))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HttpRequest);","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/Components/HttpRequest.jsx"],"names":["React","Component","connect","httpHistory","HttpRequestHeaders","HttpRequestBody","HttpResponse","Tabs","Tab","TabList","TabPanel","addCurrentTabId","HttpRequest","state","url","result","method","body","headerKeys","headerValues","headers","test","testOutput","compareTestWithResponse","length","JSON","parse","jsonKeyinTest","Object","keys","jsonKeyInResult","setState","console","log","i","includes","err","handleUrlChange","event","target","value","handleFormSubmit","preventDefault","headObj","map","headerKey","index","bodyInput","props","auth","fetch","then","a","json","stringify","catch","handleSelectChange","handleHeaderRemove","splice","headervalues","handleHeaderKeyChange","e","handleHeaderValueChange","addHeader","onClickHeader","showHeader","showBody","onClickBody","handleBodyRawInputChange","handleTestChange","componentWillReceiveProps","history","historyData","render","localStorage","setItem","previousTab","fontWeight","fontFamily","marginBottom","mapStateToProps","tabHistory","currentTabId","mapDispatchToProps","dispatch","newHttpData","currenttab"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { httpHistory } from \"../store/actions/httpHistoryActions\";\r\nimport HttpRequestHeaders from \"./HttpRequestHeaders\";\r\nimport HttpRequestBody from \"./HttpRequestBody\";\r\nimport HttpResponse from \"./HttpResponse\";\r\nimport { Tabs, Tab, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport { addCurrentTabId } from '../store/actions/tabHistoryActions';\r\n\r\n\r\nclass HttpRequest extends Component {\r\n  state = {\r\n    url: '',\r\n    result: '',\r\n    method: 'GET',\r\n    body: '',\r\n    headerKeys: ['Content-Type'],\r\n    headerValues: ['application/json'],\r\n    headers: {},\r\n    test: \"\",\r\n    testOutput:\"\"\r\n  };\r\n  componentWillReceiveProps() {\r\n    let history = this.props.historyData;\r\n    if (Object.keys(history).length !== 0) {\r\n      this.setState({\r\n        url: history.url,\r\n        method: history.method,\r\n        body: history.body,\r\n        headerKeys: history.headerKeys,\r\n        headerValues: history.headerValues,\r\n        headers: history.headers\r\n      });\r\n    }\r\n    // this.props.addCurrentTabId(this.props.index)\r\n  }\r\n \r\n  compareTestWithResponse = result => {\r\n    if (this.state.test.length === 0) {\r\n      return;\r\n    }\r\n    try\r\n    {\r\n      let test = JSON.parse(this.state.test);\r\n      let jsonKeyinTest = Object.keys(test);\r\n    let jsonKeyInResult = Object.keys(result);\r\n    if (jsonKeyInResult.length !== jsonKeyinTest.length) {\r\n      this.setState({testOutput:\"Failed length not equal\"})\r\n      console.log(\"Failed length not equal\");\r\n      return;\r\n    } else {\r\n      for (let i = 0; i < jsonKeyInResult.length; i++) {\r\n        if (!jsonKeyinTest.includes(jsonKeyInResult[i])) {\r\n          this.setState({testOutput:\"Failed Keys not present\"})\r\n          console.log(\r\n            \"failed keys not present\" + jsonKeyinTest + \",\" + jsonKeyInResult\r\n          );\r\n          return;\r\n        }\r\n        if (test[jsonKeyInResult[i]] !== result[jsonKeyInResult[i]]) {\r\n          this.setState({testOutput:\"Failed not equal properties of \"+jsonKeyInResult[i] +\"\"})\r\n          console.log(\"failed not equal properties of\" + jsonKeyInResult[i]);\r\n          return;\r\n        }\r\n      }\r\n      this.setState({testOutput:\"Passed\"})\r\n      console.log(\"Passed\");\r\n    }\r\n    }\r\ncatch(err)\r\n{\r\n  console.log(\"badly formatted test cases\")\r\n}    \r\n    \r\n  };\r\n  handleUrlChange = event => {\r\n    this.setState({ url: event.target.value });\r\n  };\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.url !== \"\") {\r\n      const headObj = {};\r\n      this.state.headerKeys.map((headerKey, index) => {\r\n        return (headObj[headerKey] = this.state.headerValues[index]);\r\n      });\r\n      let bodyInput = \"\";\r\n   \r\n\r\n      this.setState({ headers: headObj }, () => {\r\n        this.props.httpHistory(this.state, this.props.auth);\r\n        console.log(this.state);\r\n        if (this.state.method === \"GET\") {\r\n          fetch(this.state.url, {\r\n            headers: this.state.headers\r\n          })\r\n            .then(a => a.json())\r\n            .then(result =>\r\n              this.setState({ result: JSON.stringify(result) }, () => {\r\n                this.compareTestWithResponse(result);\r\n              })\r\n            )\r\n            .catch(err => {\r\n              //console.log(\"error\" + err);\r\n            });\r\n          //console.log(this.state);\r\n        } else {\r\n          fetch(this.state.url, {\r\n            headers: this.state.headers,\r\n            method: this.state.method,\r\n            body: this.state.body\r\n          })\r\n            .then(a => a.json())\r\n            .then(result => this.setState({ result: JSON.stringify(result) }))\r\n            .catch(err => {\r\n              //console.log(\"error\" + err);\r\n            });\r\n          //console.log(this.state);\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({ result: \"EMPTY URL\" });\r\n    }\r\n  };\r\n\r\n  handleSelectChange = (event) => {\r\n    this.setState({ method: event.target.value });\r\n  };\r\n\r\n  handleHeaderRemove = (index) => {\r\n    this.state.headerKeys.splice(index, 1);\r\n    this.state.headerValues.splice(index, 1);\r\n    this.setState({ headerKeys: this.state.headerKeys });\r\n    this.setState({ headervalues: this.state.headerValues });\r\n  };\r\n\r\n  handleHeaderKeyChange = (e, index) => {\r\n    this.state.headerKeys[index] = e.target.value;\r\n    // //console.log(this.state.bodyKey);\r\n    this.setState({ headerKeys: this.state.headerKeys });\r\n  };\r\n\r\n  handleHeaderValueChange = (e, index) => {\r\n    this.state.headerValues[index] = e.target.value;\r\n    // //console.log(this.state.bodyKey);\r\n    this.setState({ headerValues: this.state.headerValues });\r\n  };\r\n\r\n  addHeader = () => {\r\n    this.setState({ headerKeys: [...this.state.headerKeys, ''] });\r\n    this.setState({ headerValues: [...this.state.headerValues, ''] });\r\n  };\r\n  onClickHeader = () => {\r\n    this.setState({ showHeader: true, showBody: false });\r\n  };\r\n  onClickBody = () => {\r\n    this.setState({ showHeader: false, showBody: true });\r\n  };\r\n  handleBodyRawInputChange = (e) => {\r\n    this.setState({ body: e.target.value });\r\n  };\r\n  handleTestChange = e => {\r\n    this.setState({ test: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    console.log('these are props',this.props.index)\r\n    this.props.addCurrentTabId(this.props.index)\r\n    localStorage.setItem('currentTab',this.props.previousTab)\r\n    localStorage.setItem\r\n\r\n    return (\r\n      <div className=\"urlArea\">\r\n        <p\r\n          className=\"url-title\"\r\n          style={{\r\n            fontWeight: \"bold\",\r\n            fontFamily: \"Helvetica\",\r\n            marginBottom: 0\r\n          }}\r\n        >\r\n          {this.state.url === \"\" ? \"Untitled\" : this.state.url}\r\n        </p>\r\n\r\n        <form onSubmit={this.handleFormSubmit}>\r\n          <div className=\"form-section\">\r\n            <select onChange={this.handleSelectChange}>\r\n              {this.state.method === \"GET\" ? (\r\n                <option value=\"GET\" selected>\r\n                  GET\r\n                </option>\r\n              ) : (\r\n                <option value=\"GET\">GET</option>\r\n              )}\r\n              {this.state.method === \"POST\" ? (\r\n                <option value=\"POST\" selected>\r\n                  POST\r\n                </option>\r\n              ) : (\r\n                <option value=\"POST\">POST</option>\r\n              )}\r\n              {this.state.method === \"PUT\" ? (\r\n                <option value=\"PUT\" selected>\r\n                  PUT\r\n                </option>\r\n              ) : (\r\n                <option value=\"PUT\">PUT</option>\r\n              )}\r\n              {this.state.method === \"DELETE\" ? (\r\n                <option value=\"DELETE\" selected>\r\n                  DELETE\r\n                </option>\r\n              ) : (\r\n                <option value=\"DELETE\">DELETE</option>\r\n              )}\r\n            </select>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Request URL\"\r\n              value={this.state.url}\r\n              onChange={this.handleUrlChange}\r\n              className=\"inputUrl\"\r\n            />\r\n            <input type=\"submit\" value=\"Send\" className=\"sendButton\" />\r\n          </div>\r\n        </form>\r\n\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>Header</Tab>\r\n            <Tab>Body</Tab>\r\n\r\n            <Tab>Test</Tab>\r\n            <Tab>Test Result</Tab>\r\n          </TabList>\r\n          <TabPanel>\r\n            <HttpRequestHeaders\r\n              addHeader={e => {\r\n                this.addHeader(e);\r\n              }}\r\n              handleHeaderRemove={index => {\r\n                this.handleHeaderRemove(index);\r\n              }}\r\n              handleHeaderValueChange={(e, index) => {\r\n                this.handleHeaderValueChange(e, index);\r\n              }}\r\n              handleHeaderKeyChange={(e, index) => {\r\n                this.handleHeaderKeyChange(e, index);\r\n              }}\r\n              headerValues={this.state.headerValues}\r\n              headerKeys={this.state.headerKeys}\r\n              showHeader={this.state.showHeader}\r\n            />\r\n\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <HttpRequestBody\r\n              body={this.state.body}\r\n              showBody={this.state.showBody}\r\n              handleBodyRawInputChange={e => {\r\n                this.handleBodyRawInputChange(e);\r\n              }}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <textarea\r\n              className=\"test-tab\"\r\n              placeholder={\"Test\"}\r\n              value={this.state.test}\r\n              onChange={e => {\r\n                this.handleTestChange(e);\r\n              }}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <textarea\r\n              className=\"test-tab\"\r\n              placeholder={\"Test\"}\r\n              value={this.state.testOutput}\r\n            />\r\n          </TabPanel>\r\n        </Tabs>\r\n        <div className=\"response-label\">Response</div>\r\n        <HttpResponse result={this.state.result} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    historyData: state.historyData,\r\n    tabHistory: state.tabHistory,\r\n    previousTab: state.currentTabId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    httpHistory: (newHttpData, auth) =>\r\n      dispatch(httpHistory(newHttpData, auth)),\r\n    addCurrentTabId: (currenttab) => dispatch(addCurrentTabId(currenttab))\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HttpRequest);\r\n"]},"metadata":{},"sourceType":"module"}