{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\src\\\\store\\\\actions\\\\authAction.js\";\nimport { Redirect } from 'react-router-dom';\nexport const signIn = credentials => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password).then(() => {\n      dispatch({\n        type: 'LOGIN_SUCCESS'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'LOGIN_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const signOut = () => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({\n        type: 'SIGNOUT_SUCCESS'\n      });\n    });\n  };\n};\nexport const signUp = newUser => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(resp => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName\n      });\n    }).then(() => {\n      dispatch({\n        type: 'SIGNUP_SUCCESS'\n      });\n      React.createElement(Redirect, {\n        to: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'SIGNUP_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const addAuthId = (uid, name) => {\n  return (dispatch, getState, {\n    getFirestore,\n    getFirebase\n  }) => {\n    const firestore = getFirestore();\n    return firestore.collection('users').doc(uid).set({\n      firstName: name[0],\n      lastName: name[1]\n    }).then(() => {\n      dispatch({\n        type: 'GOOGLESIGNiN'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'GOOGLESIGNIN_ERROR'\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/store/actions/authAction.js"],"names":["Redirect","signIn","credentials","dispatch","getState","getFirebase","firebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","signOut","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","uid","set","firstName","lastName","addAuthId","name"],"mappings":"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","sourcesContent":["import { Redirect } from 'react-router-dom';\r\n\r\nexport const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((resp) => {\r\n        return firestore\r\n          .collection('users')\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n        <Redirect to=\"\"></Redirect>\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const addAuthId=(uid,name)=>\r\n{\r\n  return (dispatch,getState , {getFirestore , getFirebase})=>\r\n  {\r\n    const firestore=getFirestore();\r\n    return firestore.collection('users').doc(uid).set({\r\n      firstName:name[0],\r\n      lastName:name[1]\r\n    }).then(()=>\r\n    {\r\n      dispatch({type:'GOOGLESIGNiN'})\r\n    }).catch((err)=>\r\n    {\r\n      dispatch({type:'GOOGLESIGNIN_ERROR'})\r\n    })\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}