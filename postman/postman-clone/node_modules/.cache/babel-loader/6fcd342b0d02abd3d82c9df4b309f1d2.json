{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\src\\\\components\\\\HttpRequest.jsx\";\nimport React, { Component } from \"react\";\n\nclass HttpRequest extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      url: \"\",\n      result: \"\",\n      method: \"GET\",\n      bodyKeys: [],\n      bodyValues: [],\n      body: {},\n      headerKeys: [],\n      headerValues: [],\n      header: {}\n    };\n\n    this.handleUrlChange = event => {\n      this.setState({\n        url: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      console.log(this.state);\n\n      if (this.state.method == \"GET\") {\n        fetch(this.state.url, {\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(a => a.json()).then(result => this.setState({\n          result: JSON.stringify(result)\n        })).catch(err => {\n          console.log(\"error\" + err);\n        });\n        console.log(this.state);\n      } else {\n        fetch(this.state.url, {\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json\"\n          },\n          method: this.state.method,\n          body: JSON.stringify(this.state.body)\n        }).then(a => a.json()).then(result => this.setState({\n          result: JSON.stringify(result)\n        })).catch(err => {\n          console.log(\"error\" + err);\n        });\n        console.log(this.state);\n      }\n    };\n\n    this.handleSelectChange = event => {\n      this.setState({\n        method: event.target.value\n      });\n    };\n\n    this.handleBodyRemove = index => {\n      this.state.bodyKeys.splice(index, 1);\n      this.state.bodyValues.splice(index, 1);\n      this.setState({\n        bodyKeys: this.state.bodyKeys\n      });\n      this.setState({\n        bodyvalues: this.state.bodyValues\n      });\n    };\n\n    this.handleHeaderRemove = index => {\n      this.state.headerKeys.splice(index, 1);\n      this.state.headerValues.splice(index, 1);\n      this.setState({\n        headerKeys: this.state.headerKeys\n      });\n      this.setState({\n        headervalues: this.state.headerValues\n      });\n    };\n\n    this.handleBodyKeyChange = (e, index) => {\n      this.state.bodyKeys[index] = e.target.value; // console.log(this.state.bodyKey);\n\n      this.setState({\n        bodyKeys: this.state.bodyKeys\n      });\n    };\n\n    this.handleHeaderKeyChange = (e, index) => {\n      this.state.headerKeys[index] = e.target.value; // console.log(this.state.bodyKey);\n\n      this.setState({\n        headerKeys: this.state.headerKeys\n      });\n    };\n\n    this.handleBodyValueChange = (e, index) => {\n      this.state.bodyValues[index] = e.target.value; // console.log(this.state.bodyKey);\n\n      this.setState({\n        bodyValues: this.state.bodyValues\n      });\n    };\n\n    this.handleHeaderValueChange = (e, index) => {\n      this.state.headerValues[index] = e.target.value; // console.log(this.state.bodyKey);\n\n      this.setState({\n        headerValues: this.state.headerValues\n      });\n    };\n\n    this.handlebodySubmit = () => {\n      const obj = {};\n      this.state.bodyKeys.map((bodyKey, index) => {\n        return obj[bodyKey] = this.state.bodyValues[index];\n      });\n      this.setState({\n        body: obj\n      }, () => console.log(this.state.body));\n    };\n\n    this.handleHeaderSubmit = () => {\n      const obj = {};\n      this.state.headerKeys.map((headerKey, index) => {\n        return obj[headerKey] = this.state.headerValues[index];\n      });\n      this.setState({\n        header: obj\n      }, () => console.log(this.state.header));\n    };\n\n    this.addBody = () => {\n      this.setState({\n        bodyKeys: [...this.state.bodyKeys, \"\"]\n      });\n      this.setState({\n        bodyValues: [...this.state.bodyValues, \"\"]\n      });\n    };\n\n    this.addHeader = () => {\n      this.setState({\n        headerKeys: [...this.state.headerKeys, \"\"]\n      });\n      this.setState({\n        headerValues: [...this.state.headerValues, \"\"]\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"urlArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.handleSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"GET\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"GET\"), React.createElement(\"option\", {\n      value: \"PUT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"PUT\"), React.createElement(\"option\", {\n      value: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"POST\"), React.createElement(\"option\", {\n      value: \"DELETE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"DELETE\")), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.url,\n      onChange: this.handleUrlChange,\n      className: \"inputUrl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Send\",\n      className: \"sendButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.state.result)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, this.state.bodyKeys.map((bodyKey, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Key\",\n        value: bodyKey,\n        onChange: e => {\n          this.handleBodyKeyChange(e, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        placeholder: \"value\",\n        value: this.state.bodyValues[index],\n        onChange: e => {\n          this.handleBodyValueChange(e, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: () => this.handleBodyRemove(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Remove\"));\n    }), React.createElement(\"button\", {\n      onClick: e => this.addBody(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Add body\"), React.createElement(\"button\", {\n      onClick: e => this.handlebodySubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \" Submit Body\")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.state.headerKeys.map((headerKey, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Key\",\n        value: headerKey,\n        onChange: e => {\n          this.handleHeaderKeyChange(e, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        placeholder: \"value\",\n        value: this.state.headerValues[index],\n        onChange: e => {\n          this.handleHeaderValueChange(e, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: () => this.handleHeaderRemove(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Remove\"));\n    }), React.createElement(\"button\", {\n      onClick: e => this.addHeader(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Add Header\"), React.createElement(\"button\", {\n      onClick: e => this.handleHeaderSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \" Submit Header\")));\n  }\n\n}\n\nexport default HttpRequest;","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/components/HttpRequest.jsx"],"names":["React","Component","HttpRequest","state","url","result","method","bodyKeys","bodyValues","body","headerKeys","headerValues","header","handleUrlChange","event","setState","target","value","handleFormSubmit","preventDefault","console","log","fetch","headers","then","a","json","JSON","stringify","catch","err","handleSelectChange","handleBodyRemove","index","splice","bodyvalues","handleHeaderRemove","headervalues","handleBodyKeyChange","e","handleHeaderKeyChange","handleBodyValueChange","handleHeaderValueChange","handlebodySubmit","obj","map","bodyKey","handleHeaderSubmit","headerKey","addBody","addHeader","render"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\"\r\n\r\nclass HttpRequest extends Component {\r\n  state = {\r\n    url: \"\",\r\n    result: \"\",\r\n    method: \"GET\",\r\n    bodyKeys: [],\r\n    bodyValues: [],\r\n    body: {},\r\n    headerKeys:[],\r\n    headerValues:[],\r\n    header:{}\r\n  };\r\n  handleUrlChange = event => {\r\n    this.setState({ url: event.target.value });\r\n  };\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n    \r\n  if(this.state.method==\"GET\")\r\n  {\r\n    fetch(this.state.url, {\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(a => a.json())\r\n      .then(result => this.setState({ result: JSON.stringify(result) }))\r\n      .catch(err => {\r\n        console.log(\"error\" + err);\r\n      });\r\n      console.log(this.state);\r\n  }\r\n  \r\n  else{\r\n    fetch(this.state.url, {\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    method: this.state.method,\r\n    body: JSON.stringify(this.state.body)\r\n  })\r\n    .then(a => a.json())\r\n    .then(result => this.setState({ result: JSON.stringify(result) }))\r\n    .catch(err => {\r\n      console.log(\"error\" + err);\r\n    });\r\n    console.log(this.state);\r\n  }\r\n}\r\n\r\n  handleSelectChange = event => {\r\n    this.setState({ method: event.target.value });\r\n  };\r\n  handleBodyRemove = index => {\r\n    this.state.bodyKeys.splice(index, 1);\r\n    this.state.bodyValues.splice(index, 1);\r\n    this.setState({ bodyKeys: this.state.bodyKeys });\r\n    this.setState({ bodyvalues: this.state.bodyValues });\r\n  };\r\n  handleHeaderRemove = index => {\r\n    this.state.headerKeys.splice(index, 1);\r\n    this.state.headerValues.splice(index, 1);\r\n    this.setState({ headerKeys: this.state.headerKeys });\r\n    this.setState({ headervalues: this.state.headerValues });\r\n  };\r\n  handleBodyKeyChange = (e, index) => {\r\n    this.state.bodyKeys[index] = e.target.value;\r\n    // console.log(this.state.bodyKey);\r\n    this.setState({ bodyKeys: this.state.bodyKeys });\r\n  };\r\n  handleHeaderKeyChange = (e, index) => {\r\n    this.state.headerKeys[index] = e.target.value;\r\n    // console.log(this.state.bodyKey);\r\n    this.setState({ headerKeys: this.state.headerKeys });\r\n  };\r\n  handleBodyValueChange = (e, index) => {\r\n    this.state.bodyValues[index] = e.target.value;\r\n    // console.log(this.state.bodyKey);\r\n    this.setState({ bodyValues: this.state.bodyValues });\r\n  };\r\n  handleHeaderValueChange = (e, index) => {\r\n    this.state.headerValues[index] = e.target.value;\r\n    // console.log(this.state.bodyKey);\r\n    this.setState({ headerValues: this.state.headerValues });\r\n  };\r\n  handlebodySubmit = () => {\r\n    const obj = {};\r\n    this.state.bodyKeys.map((bodyKey, index) => {\r\n      return (obj[bodyKey] = this.state.bodyValues[index]);\r\n    });\r\n    this.setState({ body: obj }, () => console.log(this.state.body));\r\n  };\r\n  handleHeaderSubmit = () => {\r\n    const obj = {};\r\n    this.state.headerKeys.map((headerKey, index) => {\r\n      return (obj[headerKey] = this.state.headerValues[index]);\r\n    });\r\n    this.setState({ header: obj }, () => console.log(this.state.header));\r\n  };\r\n  addBody = () => {\r\n    this.setState({ bodyKeys: [...this.state.bodyKeys, \"\"] });\r\n    this.setState({ bodyValues: [...this.state.bodyValues, \"\"] });\r\n  };\r\n  addHeader = () => {\r\n    this.setState({ headerKeys: [...this.state.headerKeys, \"\"] });\r\n    this.setState({ headerValues: [...this.state.headerValues, \"\"] });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"urlArea\">\r\n        <form onSubmit={this.handleFormSubmit}>\r\n          <select onChange={this.handleSelectChange}>\r\n            <option value=\"GET\">GET</option>\r\n            <option value=\"PUT\">PUT</option>\r\n            <option value=\"POST\">POST</option>\r\n            <option value=\"DELETE\">DELETE</option>\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.url}\r\n            onChange={this.handleUrlChange}\r\n            className=\"inputUrl\"\r\n          />\r\n          <input type=\"submit\" value=\"Send\" className=\"sendButton\" />\r\n          <div>{this.state.result}</div>\r\n        </form>\r\n        <span>\r\n          {this.state.bodyKeys.map((bodyKey, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <input\r\n                  placeholder={\"Key\"}\r\n                  value={bodyKey}\r\n                  onChange={e => {\r\n                    this.handleBodyKeyChange(e, index);\r\n                  }}\r\n                />\r\n                <input\r\n                  placeholder={\"value\"}\r\n                  value={this.state.bodyValues[index]}\r\n                  onChange={e => {\r\n                    this.handleBodyValueChange(e, index);\r\n                  }}\r\n                />\r\n                <button onClick={() => this.handleBodyRemove(index)}>Remove</button>\r\n              </div>\r\n            );\r\n          })}\r\n          <button onClick={e => this.addBody(e)}>Add body</button>\r\n          <button onClick={e => this.handlebodySubmit(e)}> Submit Body</button>\r\n        </span>\r\n        <span>\r\n        {this.state.headerKeys.map((headerKey, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <input\r\n                  placeholder={\"Key\"}\r\n                  value={headerKey}\r\n                  onChange={e => {\r\n                    this.handleHeaderKeyChange(e, index);\r\n                  }}\r\n                />\r\n                <input\r\n                  placeholder={\"value\"}\r\n                  value={this.state.headerValues[index]}\r\n                  onChange={e => {\r\n                    this.handleHeaderValueChange(e, index);\r\n                  }}\r\n                />\r\n                <button onClick={() => this.handleHeaderRemove(index)}>Remove</button>\r\n              </div>\r\n            );\r\n          })}\r\n          <button onClick={e => this.addHeader(e)}>Add Header</button>\r\n          <button onClick={e => this.handleHeaderSubmit(e)}> Submit Header</button>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HttpRequest;\r\n"]},"metadata":{},"sourceType":"module"}