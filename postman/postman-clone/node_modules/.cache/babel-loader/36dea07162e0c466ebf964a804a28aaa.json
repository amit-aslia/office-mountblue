{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\src\\\\Components\\\\HttpRequest.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { httpHistory } from \"../store/actions/httpHistoryActions\";\nimport HttpRequestHeaders from \"./HttpRequestHeaders\";\nimport HttpRequestBody from \"./HttpRequestBody\";\nimport HttpResponse from \"./HttpResponse\";\nimport { Tabs, Tab, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nclass HttpRequest extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      url: \"\",\n      result: \"\",\n      method: \"GET\",\n      body: \"\",\n      headerKeys: [\"Content-Type\"],\n      headerValues: [\"application/json\"],\n      headers: {},\n      test: '',\n      testOutput: '',\n      title: 'untitled'\n    };\n\n    this.compareTestWithResponse = result => {\n      if (this.state.test.length === 0) {\n        this.setState({\n          testOutput: \"No test case.\"\n        });\n        return;\n      }\n\n      try {\n        let test = JSON.parse(this.state.test);\n\n        if (test.length >= 0) {\n          for (let eachObjectInTest = 0; eachObjectInTest < test.length; eachObjectInTest++) {\n            let testCase = test[eachObjectInTest];\n            let resultCase = result[eachObjectInTest];\n            let jsonKeyinTest = Object.keys(testCase);\n            let jsonKeyInResult = Object.keys(resultCase);\n\n            if (jsonKeyInResult.length !== jsonKeyinTest.length) {\n              this.setState({\n                testOutput: \"Failed, length of test case and response not equal\"\n              });\n              break;\n            } else {\n              for (let i = 0; i < jsonKeyinTest.length; i++) {\n                console.log(i + \". result key\" + jsonKeyInResult[i] + \" , test key\" + jsonKeyinTest);\n\n                if (!jsonKeyInResult.includes(jsonKeyinTest[i])) {\n                  this.setState({\n                    testOutput: \"Failed \" + jsonKeyinTest[i] + \" not present in response\"\n                  });\n                  break;\n                } else if (testCase[jsonKeyinTest[i]] !== resultCase[jsonKeyinTest[i]]) {\n                  this.setState({\n                    testOutput: \"Failed not equal properties of \" + jsonKeyInResult[i] + \"\"\n                  });\n                  break;\n                } else {\n                  this.setState({\n                    testOutput: \"Passed\"\n                  });\n                }\n              }\n            }\n          }\n        } else {\n          let jsonKeyinTest = Object.keys(test);\n          let jsonKeyInResult = Object.keys(result);\n\n          if (jsonKeyInResult.length !== jsonKeyinTest.length) {\n            this.setState({\n              testOutput: \"Failed, length of test case and response not equal\"\n            });\n            return;\n          } else {\n            for (let i = 0; i < jsonKeyinTest.length; i++) {\n              if (!jsonKeyInResult.includes(jsonKeyinTest[i])) {\n                this.setState({\n                  testOutput: \"Failed \" + jsonKeyinTest[i] + \" not present in response\"\n                });\n                return;\n              } else if (test[jsonKeyInResult[i]] !== result[jsonKeyInResult[i]]) {\n                this.setState({\n                  testOutput: \"Failed not equal properties of \" + jsonKeyInResult[i] + \"\"\n                });\n                return;\n              } else {\n                this.setState({\n                  testOutput: \"Passed\"\n                });\n              }\n            }\n          }\n        }\n      } catch (err) {\n        console.log(\"ERROR \" + err);\n        this.setState({\n          testOutput: \"Badly formatted test case.\"\n        });\n      }\n    };\n\n    this.handleUrlChange = event => {\n      this.setState({\n        url: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.url !== \"\") {\n        const headObj = {};\n        this.state.headerKeys.map((headerKey, index) => {\n          return headObj[headerKey] = this.state.headerValues[index];\n        });\n        this.setState({\n          headers: headObj\n        }, () => {\n          this.props.httpHistory(this.state, this.props.auth);\n          console.log(this.state);\n\n          if (this.state.method === \"GET\") {\n            fetch(this.state.url, {\n              headers: this.state.headers\n            }).then(a => a.json()).then(result => this.setState({\n              result: JSON.stringify(result)\n            }, () => {\n              this.compareTestWithResponse(result);\n            })).catch(err => {});\n          } else {\n            fetch(this.state.url, {\n              headers: this.state.headers,\n              method: this.state.method,\n              body: this.state.body\n            }).then(a => a.json()).then(result => this.setState({\n              result: JSON.stringify(result)\n            })).catch(err => {});\n          }\n        });\n      } else {\n        this.setState({\n          result: \"EMPTY URL\"\n        });\n      }\n    };\n\n    this.handleSelectChange = event => {\n      this.setState({\n        method: event.target.value\n      });\n    };\n\n    this.handleHeaderRemove = index => {\n      let updatedHeaderKeys = this.state.headerKeys;\n      let updatedHeaderValues = this.state.headerValues;\n      updatedHeaderKeys.splice(index, 1);\n      updatedHeaderValues.splice(index, 1);\n      this.setState({\n        headerKeys: updatedHeaderKeys\n      });\n      this.setState({\n        headervalues: updatedHeaderValues\n      });\n    };\n\n    this.handleHeaderKeyChange = (e, index) => {\n      let updatedHeaderKeys = this.state.headerKeys;\n      updatedHeaderKeys[index] = e.target.value;\n      this.setState({\n        headerKeys: updatedHeaderKeys\n      });\n    };\n\n    this.handleHeaderValueChange = (e, index) => {\n      let updatedHeaderValues = this.state.headerValues;\n      updatedHeaderValues[index] = e.target.value;\n      this.setState({\n        headerValues: updatedHeaderValues\n      });\n    };\n\n    this.addHeader = () => {\n      this.setState({\n        headerKeys: [...this.state.headerKeys, \"\"]\n      });\n      this.setState({\n        headerValues: [...this.state.headerValues, \"\"]\n      });\n    };\n\n    this.onClickHeader = () => {\n      this.setState({\n        showHeader: true,\n        showBody: false\n      });\n    };\n\n    this.onClickBody = () => {\n      this.setState({\n        showHeader: false,\n        showBody: true\n      });\n    };\n\n    this.handleBodyRawInputChange = e => {\n      this.setState({\n        body: e.target.value\n      });\n    };\n\n    this.handleTestChange = e => {\n      this.setState({\n        test: e.target.value\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleTitle = () => {\n      this.setState({\n        title: ''\n      });\n    };\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem(this.props.index, JSON.stringify(nextState));\n  }\n\n  componentDidMount() {\n    let savedState = localStorage.getItem(this.props.index);\n    console.log('I am inside the compoment di montofddfdsfg', sa);\n\n    if (savedState !== null) {\n      let savedStateObject = JSON.parse(savedState);\n      this.setState({\n        url: savedStateObject.url,\n        result: savedStateObject.result,\n        method: savedStateObject.method,\n        body: savedStateObject.body,\n        headerKeys: savedStateObject.headerKeys,\n        headerValues: savedStateObject.headerValues,\n        headers: savedStateObject.headers,\n        test: savedStateObject.test,\n        testOutput: savedStateObject.testOutput\n      });\n    }\n  }\n\n  componentWillReceiveProps() {\n    let history = this.props.historyData;\n\n    if (Object.keys(history).length !== 0) {\n      console.log(\"inside the component did mount and current tab\", this.props.previousTab, \"current index\", this.props.index);\n\n      if (this.props.location === 0) {\n        this.setState({\n          url: history.url,\n          method: history.method,\n          body: history.body,\n          headerKeys: history.headerKeys,\n          headerValues: history.headerValues,\n          headers: history.headers,\n          title: history.title\n        }, () => {\n          localStorage.setItem(this.props.index, JSON.stringify(this.state));\n        });\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"urlArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"handleTitle\",\n      type: \"text\",\n      name: \"title\",\n      value: this.state.title,\n      onClick: this.handleTitle,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.handleSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, this.state.method === \"GET\" ? React.createElement(\"option\", {\n      value: \"GET\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"GET\") : React.createElement(\"option\", {\n      value: \"GET\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"GET\"), this.state.method === \"POST\" ? React.createElement(\"option\", {\n      value: \"POST\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"POST\") : React.createElement(\"option\", {\n      value: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"POST\"), this.state.method === \"PUT\" ? React.createElement(\"option\", {\n      value: \"PUT\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"PUT\") : React.createElement(\"option\", {\n      value: \"PUT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"PUT\"), this.state.method === \"DELETE\" ? React.createElement(\"option\", {\n      value: \"DELETE\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"DELETE\") : React.createElement(\"option\", {\n      value: \"DELETE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"DELETE\")), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Request URL\",\n      value: this.state.url,\n      onChange: this.handleUrlChange,\n      className: \"inputUrl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Send\",\n      className: \"sendButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }))), React.createElement(Tabs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"Header\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Body\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Test\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"Test Result\")), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(HttpRequestHeaders, {\n      addHeader: e => {\n        this.addHeader(e);\n      },\n      handleHeaderRemove: index => {\n        this.handleHeaderRemove(index);\n      },\n      handleHeaderValueChange: (e, index) => {\n        this.handleHeaderValueChange(e, index);\n      },\n      handleHeaderKeyChange: (e, index) => {\n        this.handleHeaderKeyChange(e, index);\n      },\n      headerValues: this.state.headerValues,\n      headerKeys: this.state.headerKeys,\n      showHeader: this.state.showHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    })), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(HttpRequestBody, {\n      body: this.state.body,\n      showBody: this.state.showBody,\n      handleBodyRawInputChange: e => {\n        this.handleBodyRawInputChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    })), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"test-tab\",\n      placeholder: \"Test\",\n      value: this.state.test,\n      onChange: e => {\n        this.handleTestChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    })), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"test-tab\",\n      placeholder: \"Test\",\n      value: this.state.testOutput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"response-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"Response\"), React.createElement(HttpResponse, {\n      result: this.state.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    historyData: state.historyData,\n    tabHistory: state.tabHistory,\n    previousTab: state.currentTabId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    httpHistory: (newHttpData, auth) => dispatch(httpHistory(newHttpData, auth))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HttpRequest);","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/Components/HttpRequest.jsx"],"names":["React","Component","connect","httpHistory","HttpRequestHeaders","HttpRequestBody","HttpResponse","Tabs","Tab","TabList","TabPanel","HttpRequest","state","url","result","method","body","headerKeys","headerValues","headers","test","testOutput","title","compareTestWithResponse","length","setState","JSON","parse","eachObjectInTest","testCase","resultCase","jsonKeyinTest","Object","keys","jsonKeyInResult","i","console","log","includes","err","handleUrlChange","event","target","value","handleFormSubmit","preventDefault","headObj","map","headerKey","index","props","auth","fetch","then","a","json","stringify","catch","handleSelectChange","handleHeaderRemove","updatedHeaderKeys","updatedHeaderValues","splice","headervalues","handleHeaderKeyChange","e","handleHeaderValueChange","addHeader","onClickHeader","showHeader","showBody","onClickBody","handleBodyRawInputChange","handleTestChange","handleChange","name","handleTitle","componentWillUpdate","nextProps","nextState","localStorage","setItem","componentDidMount","savedState","getItem","sa","savedStateObject","componentWillReceiveProps","history","historyData","previousTab","location","render","mapStateToProps","tabHistory","currentTabId","mapDispatchToProps","dispatch","newHttpData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,YAA7C;AACA,OAAO,iCAAP;;AAEA,MAAMC,WAAN,SAA0BV,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCW,KADkC,GAC1B;AACNC,MAAAA,GAAG,EAAE,EADC;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,MAAM,EAAE,KAHF;AAINC,MAAAA,IAAI,EAAE,EAJA;AAKNC,MAAAA,UAAU,EAAE,CAAC,cAAD,CALN;AAMNC,MAAAA,YAAY,EAAE,CAAC,kBAAD,CANR;AAONC,MAAAA,OAAO,EAAE,EAPH;AAQNC,MAAAA,IAAI,EAAE,EARA;AASNC,MAAAA,UAAU,EAAE,EATN;AAUNC,MAAAA,KAAK,EAAC;AAVA,KAD0B;;AAAA,SAmElCC,uBAnEkC,GAmERT,MAAM,IAAI;AAClC,UAAI,KAAKF,KAAL,CAAWQ,IAAX,CAAgBI,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,aAAKC,QAAL,CAAc;AAACJ,UAAAA,UAAU,EAAC;AAAZ,SAAd;AACA;AACD;;AAED,UACA;AACE,YAAID,IAAI,GAAGM,IAAI,CAACC,KAAL,CAAW,KAAKf,KAAL,CAAWQ,IAAtB,CAAX;;AACA,YAAGA,IAAI,CAACI,MAAL,IAAa,CAAhB,EACA;AACE,eAAI,IAAII,gBAAgB,GAAC,CAAzB,EAA2BA,gBAAgB,GAACR,IAAI,CAACI,MAAjD,EAAwDI,gBAAgB,EAAxE,EACF;AACE,gBAAIC,QAAQ,GAACT,IAAI,CAACQ,gBAAD,CAAjB;AACA,gBAAIE,UAAU,GAAChB,MAAM,CAACc,gBAAD,CAArB;AACA,gBAAIG,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYJ,QAAZ,CAApB;AACA,gBAAIK,eAAe,GAAGF,MAAM,CAACC,IAAP,CAAYH,UAAZ,CAAtB;;AACA,gBAAII,eAAe,CAACV,MAAhB,KAA2BO,aAAa,CAACP,MAA7C,EAAqD;AACnD,mBAAKC,QAAL,CAAc;AACZJ,gBAAAA,UAAU,EAAE;AADA,eAAd;AAGA;AACD,aALD,MAKO;AACL,mBAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,aAAa,CAACP,MAAlC,EAA0CW,CAAC,EAA3C,EAA+C;AAC7CC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,GAAC,cAAF,GAAiBD,eAAe,CAACC,CAAD,CAAhC,GAAoC,aAApC,GAAkDJ,aAA9D;;AACA,oBAAI,CAACG,eAAe,CAACI,QAAhB,CAAyBP,aAAa,CAACI,CAAD,CAAtC,CAAL,EAAiD;AAC/C,uBAAKV,QAAL,CAAc;AACZJ,oBAAAA,UAAU,EAAE,YAAYU,aAAa,CAACI,CAAD,CAAzB,GAA+B;AAD/B,mBAAd;AAIA;AACD,iBAND,MAMO,IAAIN,QAAQ,CAACE,aAAa,CAACI,CAAD,CAAd,CAAR,KAA+BL,UAAU,CAACC,aAAa,CAACI,CAAD,CAAd,CAA7C,EAAiE;AACtE,uBAAKV,QAAL,CAAc;AACZJ,oBAAAA,UAAU,EACR,oCAAoCa,eAAe,CAACC,CAAD,CAAnD,GAAyD;AAF/C,mBAAd;AAIA;AACD,iBANM,MAMA;AACL,uBAAKV,QAAL,CAAc;AAAEJ,oBAAAA,UAAU,EAAE;AAAd,mBAAd;AACD;AACF;AACF;AACF;AACA,SAlCD,MAoCA;AACI,cAAIU,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYb,IAAZ,CAApB;AACA,cAAIc,eAAe,GAAGF,MAAM,CAACC,IAAP,CAAYnB,MAAZ,CAAtB;;AACA,cAAIoB,eAAe,CAACV,MAAhB,KAA2BO,aAAa,CAACP,MAA7C,EAAqD;AACnD,iBAAKC,QAAL,CAAc;AACZJ,cAAAA,UAAU,EAAE;AADA,aAAd;AAGA;AACD,WALD,MAKO;AACL,iBAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,aAAa,CAACP,MAAlC,EAA0CW,CAAC,EAA3C,EAA+C;AAC7C,kBAAI,CAACD,eAAe,CAACI,QAAhB,CAAyBP,aAAa,CAACI,CAAD,CAAtC,CAAL,EAAiD;AAC/C,qBAAKV,QAAL,CAAc;AACZJ,kBAAAA,UAAU,EAAE,YAAYU,aAAa,CAACI,CAAD,CAAzB,GAA+B;AAD/B,iBAAd;AAIA;AACD,eAND,MAMO,IAAIf,IAAI,CAACc,eAAe,CAACC,CAAD,CAAhB,CAAJ,KAA6BrB,MAAM,CAACoB,eAAe,CAACC,CAAD,CAAhB,CAAvC,EAA6D;AAClE,qBAAKV,QAAL,CAAc;AACZJ,kBAAAA,UAAU,EACR,oCAAoCa,eAAe,CAACC,CAAD,CAAnD,GAAyD;AAF/C,iBAAd;AAIA;AACD,eANM,MAMA;AACL,qBAAKV,QAAL,CAAc;AAAEJ,kBAAAA,UAAU,EAAE;AAAd,iBAAd;AACD;AACF;AACF;AAEJ;AAEF,OArED,CAsEC,OAAOkB,GAAP,EACA;AACCH,QAAAA,OAAO,CAACC,GAAR,CAAY,WAASE,GAArB;AACA,aAAKd,QAAL,CAAc;AAAEJ,UAAAA,UAAU,EAAE;AAAd,SAAd;AACD;AACF,KApJiC;;AAAA,SAqJlCmB,eArJkC,GAqJhBC,KAAK,IAAI;AACzB,WAAKhB,QAAL,CAAc;AAAEZ,QAAAA,GAAG,EAAE4B,KAAK,CAACC,MAAN,CAAaC;AAApB,OAAd;AACD,KAvJiC;;AAAA,SAwJlCC,gBAxJkC,GAwJfH,KAAK,IAAI;AAC1BA,MAAAA,KAAK,CAACI,cAAN;;AACA,UAAI,KAAKjC,KAAL,CAAWC,GAAX,KAAmB,EAAvB,EAA2B;AACzB,cAAMiC,OAAO,GAAG,EAAhB;AACA,aAAKlC,KAAL,CAAWK,UAAX,CAAsB8B,GAAtB,CAA0B,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAC9C,iBAAQH,OAAO,CAACE,SAAD,CAAP,GAAqB,KAAKpC,KAAL,CAAWM,YAAX,CAAwB+B,KAAxB,CAA7B;AACD,SAFD;AAIA,aAAKxB,QAAL,CAAc;AAAEN,UAAAA,OAAO,EAAE2B;AAAX,SAAd,EAAoC,MAAM;AACxC,eAAKI,KAAL,CAAW/C,WAAX,CAAuB,KAAKS,KAA5B,EAAmC,KAAKsC,KAAL,CAAWC,IAA9C;AACAf,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzB,KAAjB;;AACA,cAAI,KAAKA,KAAL,CAAWG,MAAX,KAAsB,KAA1B,EAAiC;AAC/BqC,YAAAA,KAAK,CAAC,KAAKxC,KAAL,CAAWC,GAAZ,EAAiB;AACpBM,cAAAA,OAAO,EAAE,KAAKP,KAAL,CAAWO;AADA,aAAjB,CAAL,CAGGkC,IAHH,CAGQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAHb,EAIGF,IAJH,CAIQvC,MAAM,IACV,KAAKW,QAAL,CAAc;AAAEX,cAAAA,MAAM,EAAEY,IAAI,CAAC8B,SAAL,CAAe1C,MAAf;AAAV,aAAd,EAAkD,MAAM;AACtD,mBAAKS,uBAAL,CAA6BT,MAA7B;AACD,aAFD,CALJ,EASG2C,KATH,CASSlB,GAAG,IAAI,CACb,CAVH;AAWD,WAZD,MAYO;AACLa,YAAAA,KAAK,CAAC,KAAKxC,KAAL,CAAWC,GAAZ,EAAiB;AACpBM,cAAAA,OAAO,EAAE,KAAKP,KAAL,CAAWO,OADA;AAEpBJ,cAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWG,MAFC;AAGpBC,cAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI;AAHG,aAAjB,CAAL,CAKGqC,IALH,CAKQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EALb,EAMGF,IANH,CAMQvC,MAAM,IAAI,KAAKW,QAAL,CAAc;AAAEX,cAAAA,MAAM,EAAEY,IAAI,CAAC8B,SAAL,CAAe1C,MAAf;AAAV,aAAd,CANlB,EAOG2C,KAPH,CAOSlB,GAAG,IAAI,CACb,CARH;AASD;AACF,SA1BD;AA2BD,OAjCD,MAiCO;AACL,aAAKd,QAAL,CAAc;AAAEX,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD;AACF,KA9LiC;;AAAA,SAgMlC4C,kBAhMkC,GAgMbjB,KAAK,IAAI;AAC5B,WAAKhB,QAAL,CAAc;AAAEV,QAAAA,MAAM,EAAE0B,KAAK,CAACC,MAAN,CAAaC;AAAvB,OAAd;AACD,KAlMiC;;AAAA,SAoMlCgB,kBApMkC,GAoMbV,KAAK,IAAI;AAC5B,UAAIW,iBAAiB,GAAG,KAAKhD,KAAL,CAAWK,UAAnC;AACA,UAAI4C,mBAAmB,GAAG,KAAKjD,KAAL,CAAWM,YAArC;AACA0C,MAAAA,iBAAiB,CAACE,MAAlB,CAAyBb,KAAzB,EAAgC,CAAhC;AACAY,MAAAA,mBAAmB,CAACC,MAApB,CAA2Bb,KAA3B,EAAkC,CAAlC;AACA,WAAKxB,QAAL,CAAc;AAAER,QAAAA,UAAU,EAAE2C;AAAd,OAAd;AACA,WAAKnC,QAAL,CAAc;AAAEsC,QAAAA,YAAY,EAAEF;AAAhB,OAAd;AACD,KA3MiC;;AAAA,SA6MlCG,qBA7MkC,GA6MV,CAACC,CAAD,EAAIhB,KAAJ,KAAc;AACpC,UAAIW,iBAAiB,GAAG,KAAKhD,KAAL,CAAWK,UAAnC;AACA2C,MAAAA,iBAAiB,CAACX,KAAD,CAAjB,GAA2BgB,CAAC,CAACvB,MAAF,CAASC,KAApC;AACA,WAAKlB,QAAL,CAAc;AAAER,QAAAA,UAAU,EAAE2C;AAAd,OAAd;AACD,KAjNiC;;AAAA,SAmNlCM,uBAnNkC,GAmNR,CAACD,CAAD,EAAIhB,KAAJ,KAAc;AACtC,UAAIY,mBAAmB,GAAG,KAAKjD,KAAL,CAAWM,YAArC;AACA2C,MAAAA,mBAAmB,CAACZ,KAAD,CAAnB,GAA6BgB,CAAC,CAACvB,MAAF,CAASC,KAAtC;AACA,WAAKlB,QAAL,CAAc;AAAEP,QAAAA,YAAY,EAAE2C;AAAhB,OAAd;AACD,KAvNiC;;AAAA,SAyNlCM,SAzNkC,GAyNtB,MAAM;AAChB,WAAK1C,QAAL,CAAc;AAAER,QAAAA,UAAU,EAAE,CAAC,GAAG,KAAKL,KAAL,CAAWK,UAAf,EAA2B,EAA3B;AAAd,OAAd;AACA,WAAKQ,QAAL,CAAc;AAAEP,QAAAA,YAAY,EAAE,CAAC,GAAG,KAAKN,KAAL,CAAWM,YAAf,EAA6B,EAA7B;AAAhB,OAAd;AACD,KA5NiC;;AAAA,SA6NlCkD,aA7NkC,GA6NlB,MAAM;AACpB,WAAK3C,QAAL,CAAc;AAAE4C,QAAAA,UAAU,EAAE,IAAd;AAAoBC,QAAAA,QAAQ,EAAE;AAA9B,OAAd;AACD,KA/NiC;;AAAA,SAgOlCC,WAhOkC,GAgOpB,MAAM;AAClB,WAAK9C,QAAL,CAAc;AAAE4C,QAAAA,UAAU,EAAE,KAAd;AAAqBC,QAAAA,QAAQ,EAAE;AAA/B,OAAd;AACD,KAlOiC;;AAAA,SAmOlCE,wBAnOkC,GAmOPP,CAAC,IAAI;AAC9B,WAAKxC,QAAL,CAAc;AAAET,QAAAA,IAAI,EAAEiD,CAAC,CAACvB,MAAF,CAASC;AAAjB,OAAd;AACD,KArOiC;;AAAA,SAsOlC8B,gBAtOkC,GAsOfR,CAAC,IAAI;AACtB,WAAKxC,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAE6C,CAAC,CAACvB,MAAF,CAASC;AAAjB,OAAd;AACD,KAxOiC;;AAAA,SAyOlC+B,YAzOkC,GAyOpBT,CAAD,IACb;AACE,WAAKxC,QAAL,CAAc;AAAC,SAACwC,CAAC,CAACvB,MAAF,CAASiC,IAAV,GAAgBV,CAAC,CAACvB,MAAF,CAASC;AAA1B,OAAd;AACD,KA5OiC;;AAAA,SA6OpCiC,WA7OoC,GA6OxB,MACZ;AACE,WAAKnD,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAC;AAAP,OAAd;AACD,KAhPmC;AAAA;;AAalCuD,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxCC,IAAAA,YAAY,CAACC,OAAb,CAAqB,KAAK/B,KAAL,CAAWD,KAAhC,EAAuCvB,IAAI,CAAC8B,SAAL,CAAeuB,SAAf,CAAvC;AACD;;AACDG,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,UAAU,GAAGH,YAAY,CAACI,OAAb,CAAqB,KAAKlC,KAAL,CAAWD,KAAhC,CAAjB;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAAyDgD,EAAzD;;AACA,QAAIF,UAAU,KAAK,IAAnB,EAAyB;AACvB,UAAIG,gBAAgB,GAAG5D,IAAI,CAACC,KAAL,CAAWwD,UAAX,CAAvB;AACA,WAAK1D,QAAL,CAAc;AACZZ,QAAAA,GAAG,EAAEyE,gBAAgB,CAACzE,GADV;AAEZC,QAAAA,MAAM,EAAEwE,gBAAgB,CAACxE,MAFb;AAGZC,QAAAA,MAAM,EAAEuE,gBAAgB,CAACvE,MAHb;AAIZC,QAAAA,IAAI,EAAEsE,gBAAgB,CAACtE,IAJX;AAKZC,QAAAA,UAAU,EAAEqE,gBAAgB,CAACrE,UALjB;AAMZC,QAAAA,YAAY,EAAEoE,gBAAgB,CAACpE,YANnB;AAOZC,QAAAA,OAAO,EAAEmE,gBAAgB,CAACnE,OAPd;AAQZC,QAAAA,IAAI,EAAEkE,gBAAgB,CAAClE,IARX;AASZC,QAAAA,UAAU,EAAEiE,gBAAgB,CAACjE;AATjB,OAAd;AAWD;AACF;;AAGDkE,EAAAA,yBAAyB,GAAG;AAE1B,QAAIC,OAAO,GAAG,KAAKtC,KAAL,CAAWuC,WAAzB;;AAEA,QAAIzD,MAAM,CAACC,IAAP,CAAYuD,OAAZ,EAAqBhE,MAArB,KAAgC,CAApC,EAAuC;AACrCY,MAAAA,OAAO,CAACC,GAAR,CACE,gDADF,EAEE,KAAKa,KAAL,CAAWwC,WAFb,EAGE,eAHF,EAIE,KAAKxC,KAAL,CAAWD,KAJb;;AAMA,UAAI,KAAKC,KAAL,CAAWyC,QAAX,KAAwB,CAA5B,EAA+B;AAC7B,aAAKlE,QAAL,CACE;AACEZ,UAAAA,GAAG,EAAE2E,OAAO,CAAC3E,GADf;AAEEE,UAAAA,MAAM,EAAEyE,OAAO,CAACzE,MAFlB;AAGEC,UAAAA,IAAI,EAAEwE,OAAO,CAACxE,IAHhB;AAIEC,UAAAA,UAAU,EAAEuE,OAAO,CAACvE,UAJtB;AAKEC,UAAAA,YAAY,EAAEsE,OAAO,CAACtE,YALxB;AAMEC,UAAAA,OAAO,EAAEqE,OAAO,CAACrE,OANnB;AAOEG,UAAAA,KAAK,EAACkE,OAAO,CAAClE;AAPhB,SADF,EAWE,MAAM;AACJ0D,UAAAA,YAAY,CAACC,OAAb,CAAqB,KAAK/B,KAAL,CAAWD,KAAhC,EAAuCvB,IAAI,CAAC8B,SAAL,CAAe,KAAK5C,KAApB,CAAvC;AACD,SAbH;AAeD;AACF;AACF;;AAgLDgF,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,IAAI,EAAC,MAApC;AAA2C,MAAA,IAAI,EAAC,OAAhD;AAAwD,MAAA,KAAK,EAAE,KAAKhF,KAAL,CAAWU,KAA1E;AAAiF,MAAA,OAAO,EAAE,KAAKsD,WAA/F;AAA4G,MAAA,QAAQ,EAAE,KAAKF,YAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAIE;AAAM,MAAA,QAAQ,EAAE,KAAK9B,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,QAAQ,EAAE,KAAKc,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK9C,KAAL,CAAWG,MAAX,KAAsB,KAAtB,GACC;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAoB,MAAA,QAAQ,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,GAKC;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANJ,EAQG,KAAKH,KAAL,CAAWG,MAAX,KAAsB,MAAtB,GACC;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAKC;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,EAeG,KAAKH,KAAL,CAAWG,MAAX,KAAsB,KAAtB,GACC;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAoB,MAAA,QAAQ,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,GAKC;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aApBJ,EAsBG,KAAKH,KAAL,CAAWG,MAAX,KAAsB,QAAtB,GACC;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,QAAQ,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAKC;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BJ,CADF,EA+BE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,mBAFd;AAGE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,GAHpB;AAIE,MAAA,QAAQ,EAAE,KAAK2B,eAJjB;AAKE,MAAA,SAAS,EAAC,UALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BF,EAsCE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAkC,MAAA,SAAS,EAAC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtCF,CADF,CAJF,EA+CE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAKE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,CADF,EAQE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,kBAAD;AACE,MAAA,SAAS,EAAEyB,CAAC,IAAI;AACd,aAAKE,SAAL,CAAeF,CAAf;AACD,OAHH;AAIE,MAAA,kBAAkB,EAAEhB,KAAK,IAAI;AAC3B,aAAKU,kBAAL,CAAwBV,KAAxB;AACD,OANH;AAOE,MAAA,uBAAuB,EAAE,CAACgB,CAAD,EAAIhB,KAAJ,KAAc;AACrC,aAAKiB,uBAAL,CAA6BD,CAA7B,EAAgChB,KAAhC;AACD,OATH;AAUE,MAAA,qBAAqB,EAAE,CAACgB,CAAD,EAAIhB,KAAJ,KAAc;AACnC,aAAKe,qBAAL,CAA2BC,CAA3B,EAA8BhB,KAA9B;AACD,OAZH;AAaE,MAAA,YAAY,EAAE,KAAKrC,KAAL,CAAWM,YAb3B;AAcE,MAAA,UAAU,EAAE,KAAKN,KAAL,CAAWK,UAdzB;AAeE,MAAA,UAAU,EAAE,KAAKL,KAAL,CAAWyD,UAfzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,EA2BE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AACE,MAAA,IAAI,EAAE,KAAKzD,KAAL,CAAWI,IADnB;AAEE,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAW0D,QAFvB;AAGE,MAAA,wBAAwB,EAAEL,CAAC,IAAI;AAC7B,aAAKO,wBAAL,CAA8BP,CAA9B;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA3BF,EAoCE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,WAAW,EAAE,MAFf;AAGE,MAAA,KAAK,EAAE,KAAKrD,KAAL,CAAWQ,IAHpB;AAIE,MAAA,QAAQ,EAAE6C,CAAC,IAAI;AACb,aAAKQ,gBAAL,CAAsBR,CAAtB;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CApCF,EA8CE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,WAAW,EAAE,MAFf;AAGE,MAAA,KAAK,EAAE,KAAKrD,KAAL,CAAWS,UAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA9CF,CA/CF,EAqGE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArGF,EAsGE,oBAAC,YAAD;AAAc,MAAA,MAAM,EAAE,KAAKT,KAAL,CAAWE,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtGF,CADF;AA0GD;;AA5ViC;;AA+VpC,MAAM+E,eAAe,GAAGjF,KAAK,IAAI;AAC/B,SAAO;AACL6E,IAAAA,WAAW,EAAE7E,KAAK,CAAC6E,WADd;AAELK,IAAAA,UAAU,EAAElF,KAAK,CAACkF,UAFb;AAGLJ,IAAAA,WAAW,EAAE9E,KAAK,CAACmF;AAHd,GAAP;AAKD,CAND;;AAQA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACL9F,IAAAA,WAAW,EAAE,CAAC+F,WAAD,EAAc/C,IAAd,KAAuB8C,QAAQ,CAAC9F,WAAW,CAAC+F,WAAD,EAAc/C,IAAd,CAAZ;AADvC,GAAP;AAGD,CAJD;;AAKA,eAAejD,OAAO,CACpB2F,eADoB,EAEpBG,kBAFoB,CAAP,CAGbrF,WAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { httpHistory } from \"../store/actions/httpHistoryActions\";\r\nimport HttpRequestHeaders from \"./HttpRequestHeaders\";\r\nimport HttpRequestBody from \"./HttpRequestBody\";\r\nimport HttpResponse from \"./HttpResponse\";\r\nimport { Tabs, Tab, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\n\r\nclass HttpRequest extends Component {\r\n  state = {\r\n    url: \"\",\r\n    result: \"\",\r\n    method: \"GET\",\r\n    body: \"\",\r\n    headerKeys: [\"Content-Type\"],\r\n    headerValues: [\"application/json\"],\r\n    headers: {},\r\n    test: '',\r\n    testOutput: '',\r\n    title:'untitled'\r\n  };\r\n  componentWillUpdate(nextProps, nextState) {\r\n    localStorage.setItem(this.props.index, JSON.stringify(nextState));\r\n  }\r\n  componentDidMount() {\r\n    let savedState = localStorage.getItem(this.props.index);\r\n    console.log('I am inside the compoment di montofddfdsfg',sa)\r\n    if (savedState !== null) {\r\n      let savedStateObject = JSON.parse(savedState);\r\n      this.setState({\r\n        url: savedStateObject.url,\r\n        result: savedStateObject.result,\r\n        method: savedStateObject.method,\r\n        body: savedStateObject.body,\r\n        headerKeys: savedStateObject.headerKeys,\r\n        headerValues: savedStateObject.headerValues,\r\n        headers: savedStateObject.headers,\r\n        test: savedStateObject.test,\r\n        testOutput: savedStateObject.testOutput\r\n      });\r\n    }\r\n  }\r\n \r\n\r\n  componentWillReceiveProps() {\r\n\r\n    let history = this.props.historyData;\r\n\r\n    if (Object.keys(history).length !== 0) {\r\n      console.log(\r\n        \"inside the component did mount and current tab\",\r\n        this.props.previousTab,\r\n        \"current index\",\r\n        this.props.index\r\n      );\r\n      if (this.props.location === 0) {\r\n        this.setState(\r\n          {\r\n            url: history.url,\r\n            method: history.method,\r\n            body: history.body,\r\n            headerKeys: history.headerKeys,\r\n            headerValues: history.headerValues,\r\n            headers: history.headers,\r\n            title:history.title\r\n\r\n          },\r\n          () => {\r\n            localStorage.setItem(this.props.index, JSON.stringify(this.state));\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  compareTestWithResponse = result => {\r\n    if (this.state.test.length === 0) {\r\n      this.setState({testOutput:\"No test case.\"})\r\n      return;\r\n    }\r\n\r\n    try \r\n    {\r\n      let test = JSON.parse(this.state.test);\r\n      if(test.length>=0)\r\n      {\r\n        for(let eachObjectInTest=0;eachObjectInTest<test.length;eachObjectInTest++)\r\n      {\r\n        let testCase=test[eachObjectInTest];\r\n        let resultCase=result[eachObjectInTest];\r\n        let jsonKeyinTest = Object.keys(testCase);\r\n        let jsonKeyInResult = Object.keys(resultCase);\r\n        if (jsonKeyInResult.length !== jsonKeyinTest.length) {\r\n          this.setState({\r\n            testOutput: \"Failed, length of test case and response not equal\"\r\n          });\r\n          break;\r\n        } else {\r\n          for (let i = 0; i < jsonKeyinTest.length; i++) {\r\n            console.log(i+\". result key\"+jsonKeyInResult[i]+\" , test key\"+jsonKeyinTest)\r\n            if (!jsonKeyInResult.includes(jsonKeyinTest[i])) {\r\n              this.setState({\r\n                testOutput: \"Failed \" + jsonKeyinTest[i] + \" not present in response\"\r\n              });\r\n  \r\n              break;\r\n            } else if (testCase[jsonKeyinTest[i]] !== resultCase[jsonKeyinTest[i]]) {\r\n              this.setState({\r\n                testOutput:\r\n                  \"Failed not equal properties of \" + jsonKeyInResult[i] + \"\"\r\n              });\r\n              break;\r\n            } else {\r\n              this.setState({ testOutput: \"Passed\" });\r\n            }\r\n          }\r\n        }\r\n      }\r\n      }\r\n      else\r\n      {\r\n          let jsonKeyinTest = Object.keys(test);\r\n          let jsonKeyInResult = Object.keys(result);\r\n          if (jsonKeyInResult.length !== jsonKeyinTest.length) {\r\n            this.setState({\r\n              testOutput: \"Failed, length of test case and response not equal\"\r\n            });\r\n            return;\r\n          } else {\r\n            for (let i = 0; i < jsonKeyinTest.length; i++) {\r\n              if (!jsonKeyInResult.includes(jsonKeyinTest[i])) {\r\n                this.setState({\r\n                  testOutput: \"Failed \" + jsonKeyinTest[i] + \" not present in response\"\r\n                });\r\n    \r\n                return;\r\n              } else if (test[jsonKeyInResult[i]] !== result[jsonKeyInResult[i]]) {\r\n                this.setState({\r\n                  testOutput:\r\n                    \"Failed not equal properties of \" + jsonKeyInResult[i] + \"\"\r\n                });\r\n                return;\r\n              } else {\r\n                this.setState({ testOutput: \"Passed\" });\r\n              }\r\n            }\r\n          }\r\n        \r\n      }\r\n      \r\n    }\r\n     catch (err) \r\n     {\r\n      console.log(\"ERROR \"+err)\r\n      this.setState({ testOutput: \"Badly formatted test case.\" });\r\n    }\r\n  };\r\n  handleUrlChange = event => {\r\n    this.setState({ url: event.target.value });\r\n  };\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.url !== \"\") {\r\n      const headObj = {};\r\n      this.state.headerKeys.map((headerKey, index) => {\r\n        return (headObj[headerKey] = this.state.headerValues[index]);\r\n      });\r\n\r\n      this.setState({ headers: headObj }, () => {\r\n        this.props.httpHistory(this.state, this.props.auth);\r\n        console.log(this.state);\r\n        if (this.state.method === \"GET\") {\r\n          fetch(this.state.url, {\r\n            headers: this.state.headers\r\n          })\r\n            .then(a => a.json())\r\n            .then(result =>\r\n              this.setState({ result: JSON.stringify(result) }, () => {\r\n                this.compareTestWithResponse(result);\r\n              })\r\n            )\r\n            .catch(err => {\r\n            });\r\n        } else {\r\n          fetch(this.state.url, {\r\n            headers: this.state.headers,\r\n            method: this.state.method,\r\n            body: this.state.body\r\n          })\r\n            .then(a => a.json())\r\n            .then(result => this.setState({ result: JSON.stringify(result) }))\r\n            .catch(err => {\r\n            });\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({ result: \"EMPTY URL\" });\r\n    }\r\n  };\r\n\r\n  handleSelectChange = event => {\r\n    this.setState({ method: event.target.value });\r\n  };\r\n\r\n  handleHeaderRemove = index => {\r\n    let updatedHeaderKeys = this.state.headerKeys;\r\n    let updatedHeaderValues = this.state.headerValues;\r\n    updatedHeaderKeys.splice(index, 1);\r\n    updatedHeaderValues.splice(index, 1);\r\n    this.setState({ headerKeys: updatedHeaderKeys });\r\n    this.setState({ headervalues: updatedHeaderValues });\r\n  };\r\n\r\n  handleHeaderKeyChange = (e, index) => {\r\n    let updatedHeaderKeys = this.state.headerKeys;\r\n    updatedHeaderKeys[index] = e.target.value;\r\n    this.setState({ headerKeys: updatedHeaderKeys });\r\n  };\r\n\r\n  handleHeaderValueChange = (e, index) => {\r\n    let updatedHeaderValues = this.state.headerValues;\r\n    updatedHeaderValues[index] = e.target.value;\r\n    this.setState({ headerValues: updatedHeaderValues });\r\n  };\r\n\r\n  addHeader = () => {\r\n    this.setState({ headerKeys: [...this.state.headerKeys, \"\"] });\r\n    this.setState({ headerValues: [...this.state.headerValues, \"\"] });\r\n  };\r\n  onClickHeader = () => {\r\n    this.setState({ showHeader: true, showBody: false });\r\n  };\r\n  onClickBody = () => {\r\n    this.setState({ showHeader: false, showBody: true });\r\n  };\r\n  handleBodyRawInputChange = e => {\r\n    this.setState({ body: e.target.value });\r\n  };\r\n  handleTestChange = e => {\r\n    this.setState({ test: e.target.value });\r\n  };\r\n  handleChange=(e)=>\r\n  {\r\n    this.setState({[e.target.name]:e.target.value})\r\n  }\r\nhandleTitle=()=>\r\n{\r\n  this.setState({title:''})\r\n}\r\n  render() {\r\n    return (\r\n      <div className=\"urlArea\">\r\n       \r\n      <input className=\"handleTitle\" type=\"text\" name='title' value={this.state.title} onClick={this.handleTitle} onChange={this.handleChange} />\r\n\r\n        <form onSubmit={this.handleFormSubmit}>\r\n          <div className=\"form-section\">\r\n            <select onChange={this.handleSelectChange}>\r\n              {this.state.method === \"GET\" ? (\r\n                <option value=\"GET\" selected>\r\n                  GET\r\n                </option>\r\n              ) : (\r\n                <option value=\"GET\">GET</option>\r\n              )}\r\n              {this.state.method === \"POST\" ? (\r\n                <option value=\"POST\" selected>\r\n                  POST\r\n                </option>\r\n              ) : (\r\n                <option value=\"POST\">POST</option>\r\n              )}\r\n              {this.state.method === \"PUT\" ? (\r\n                <option value=\"PUT\" selected>\r\n                  PUT\r\n                </option>\r\n              ) : (\r\n                <option value=\"PUT\">PUT</option>\r\n              )}\r\n              {this.state.method === \"DELETE\" ? (\r\n                <option value=\"DELETE\" selected>\r\n                  DELETE\r\n                </option>\r\n              ) : (\r\n                <option value=\"DELETE\">DELETE</option>\r\n              )}\r\n            </select>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Request URL\"\r\n              value={this.state.url}\r\n              onChange={this.handleUrlChange}\r\n              className=\"inputUrl\"\r\n            />\r\n            <input type=\"submit\" value=\"Send\" className=\"sendButton\" />\r\n          </div>\r\n        </form>\r\n\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>Header</Tab>\r\n            <Tab>Body</Tab>\r\n\r\n            <Tab>Test</Tab>\r\n            <Tab>Test Result</Tab>\r\n          </TabList>\r\n          <TabPanel>\r\n            <HttpRequestHeaders\r\n              addHeader={e => {\r\n                this.addHeader(e);\r\n              }}\r\n              handleHeaderRemove={index => {\r\n                this.handleHeaderRemove(index);\r\n              }}\r\n              handleHeaderValueChange={(e, index) => {\r\n                this.handleHeaderValueChange(e, index);\r\n              }}\r\n              handleHeaderKeyChange={(e, index) => {\r\n                this.handleHeaderKeyChange(e, index);\r\n              }}\r\n              headerValues={this.state.headerValues}\r\n              headerKeys={this.state.headerKeys}\r\n              showHeader={this.state.showHeader}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <HttpRequestBody\r\n              body={this.state.body}\r\n              showBody={this.state.showBody}\r\n              handleBodyRawInputChange={e => {\r\n                this.handleBodyRawInputChange(e);\r\n              }}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <textarea\r\n              className=\"test-tab\"\r\n              placeholder={\"Test\"}\r\n              value={this.state.test}\r\n              onChange={e => {\r\n                this.handleTestChange(e);\r\n              }}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <textarea\r\n              className=\"test-tab\"\r\n              placeholder={\"Test\"}\r\n              value={this.state.testOutput}\r\n            />\r\n          </TabPanel>\r\n        </Tabs>\r\n        <div className=\"response-label\">Response</div>\r\n        <HttpResponse result={this.state.result} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    historyData: state.historyData,\r\n    tabHistory: state.tabHistory,\r\n    previousTab: state.currentTabId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    httpHistory: (newHttpData, auth) => dispatch(httpHistory(newHttpData, auth))\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HttpRequest);\r\n"]},"metadata":{},"sourceType":"module"}