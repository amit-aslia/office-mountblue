{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\src\\\\Components\\\\Newtabs.jsx\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport React, { Component } from 'react';\nimport HttpRequest from './HttpRequest';\nimport uuid from 'uuid';\nimport { connect } from 'react-redux';\nimport undefined from 'firebase/empty-import'; // import undefined from 'firebase/empty-import';\n\nclass Newtabs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      arr: [{\n        id: uuid(),\n        name: 'GET',\n        url: 'untitled',\n        auth: this.props.auth.uid\n      }]\n    };\n\n    this.handleClick = () => {\n      const arr = this.state.arr;\n      const newTabObject = {\n        id: uuid(),\n        name: \"GET\",\n        url: 'Untitled',\n        auth: this.props.auth.uid\n      };\n      this.setState({\n        arr: [...arr, newTabObject]\n      });\n    };\n\n    this.handleDelete = toDelete => {\n      const arr = this.state.arr;\n      const tabDeleteIndex = arr.findIndex(arr => arr.id === toDelete);\n      const updatedTabs = arr.filter((tab, index) => {\n        return index !== tabDeleteIndex;\n      });\n      this.setState({\n        arr: updatedTabs\n      });\n    };\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem('tabHistory', JSON.stringify(nextState.arr));\n  }\n\n  componentDidMount() {\n    const tab = JSON.parse(localStorage.getItem('tabHistory'));\n    if (tab !== null) this.setState({\n      arr: tab\n    });\n  }\n\n  render() {\n    const arr = this.state.arr;\n    const name = arr.map((data, index) => {\n      if (this.props.auth.uid === data.auth) {\n        return React.createElement(Tab, {\n          key: index + 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"tabListStyle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, ' ', data.name, \" \\xA0\", React.createElement(\"span\", {\n          style: {\n            color: 'black'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \" \", data.url)), React.createElement(\"button\", {\n          onClick: () => this.handleDelete(data.id),\n          className: \"btn tabListButton\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"X\")));\n      }\n    });\n    let counter = 0;\n    const content = this.state.arr.map((data, index) => {\n      if (this.props.auth.uid === data.auth) {\n        // counter = counter + 1;\n        return React.createElement(TabPanel, {\n          key: index + 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(HttpRequest, {\n          key: uuid,\n          location: index,\n          index: data.id,\n          auth: this.props.auth,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }));\n      }\n    });\n    content.map(data => {\n      if (data !== undefined) return counter;\n    });\n    console.log('this is content', name);\n    const fun = React.createElement(Tabs, {\n      default: this.state.arr.length - 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, name, React.createElement(\"button\", {\n      onClick: this.handleClick,\n      className: \"btn newTabOpenButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"+\")), content);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, fun);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nexport default connect(mapStateToProps, null)(Newtabs);","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/Components/Newtabs.jsx"],"names":["Tab","Tabs","TabList","TabPanel","React","Component","HttpRequest","uuid","connect","undefined","Newtabs","state","arr","id","name","url","auth","props","uid","handleClick","newTabObject","setState","handleDelete","toDelete","tabDeleteIndex","findIndex","updatedTabs","filter","tab","index","componentWillUpdate","nextProps","nextState","localStorage","setItem","JSON","stringify","componentDidMount","parse","getItem","render","map","data","color","counter","content","console","log","fun","length","mapStateToProps","firebase"],"mappings":"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","sourcesContent":["import { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport React, { Component } from 'react';\r\nimport HttpRequest from './HttpRequest';\r\nimport uuid from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport undefined from 'firebase/empty-import';\r\n// import undefined from 'firebase/empty-import';\r\n\r\nclass Newtabs extends Component {\r\n  state = {\r\n    arr: [\r\n      {\r\n        id: uuid(),\r\n        name: 'GET',\r\n        url: 'untitled',\r\n        auth: this.props.auth.uid\r\n      }\r\n    ]\r\n  };\r\n  componentWillUpdate(nextProps, nextState) {\r\n    localStorage.setItem('tabHistory', JSON.stringify(nextState.arr));\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { arr } = this.state;\r\n    const newTabObject = {\r\n      id: uuid(),\r\n      name: `GET`,\r\n      url: 'Untitled',\r\n      auth: this.props.auth.uid\r\n    };\r\n    this.setState({\r\n      arr: [...arr, newTabObject]\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    const tab = JSON.parse(localStorage.getItem('tabHistory'));\r\n    if (tab !== null) this.setState({ arr: tab });\r\n  }\r\n\r\n  handleDelete = (toDelete) => {\r\n    const { arr } = this.state;\r\n    const tabDeleteIndex = arr.findIndex((arr) => arr.id === toDelete);\r\n    const updatedTabs = arr.filter((tab, index) => {\r\n      return index !== tabDeleteIndex;\r\n    });\r\n    this.setState({\r\n      arr: updatedTabs\r\n    });\r\n  };\r\n  render() {\r\n    const { arr } = this.state;\r\n\r\n    const name = arr.map((data, index) => {\r\n      if (this.props.auth.uid === data.auth) {\r\n        return (\r\n          <Tab key={index + 1}>\r\n            <div className=\"tabListStyle\">\r\n              <span>\r\n                {' '}\r\n                {data.name} &nbsp;\r\n                <span style={{ color: 'black' }}> {data.url}</span>\r\n              </span>\r\n              <button\r\n                onClick={() => this.handleDelete(data.id)}\r\n                className=\"btn tabListButton\"\r\n              >\r\n                X\r\n              </button>\r\n            </div>\r\n          </Tab>\r\n        );\r\n      }\r\n    });\r\n    let counter = 0;\r\n    const content = this.state.arr.map((data, index) => {\r\n      if (this.props.auth.uid === data.auth) {\r\n        // counter = counter + 1;\r\n        return (\r\n          <TabPanel key={index + 1}>\r\n            <HttpRequest\r\n              key={uuid}\r\n              location={index}\r\n              index={data.id}\r\n              auth={this.props.auth}\r\n            />\r\n          </TabPanel>\r\n        );\r\n      }\r\n    });\r\n    content.map(data=>\r\n      {\r\n          if(data!==undefined)\r\n          return counter\r\n      })\r\n\r\n    console.log('this is content',name)\r\n    const fun = (\r\n      <Tabs default={this.state.arr.length - 1}>\r\n        <TabList>\r\n          {name}\r\n          <button onClick={this.handleClick} className=\"btn newTabOpenButton\">\r\n            +\r\n          </button>\r\n        </TabList>\r\n        {content}\r\n        {/* {content[0]!==undefined ? content : data} */}\r\n      </Tabs>\r\n    );\r\n\r\n    return <div>{fun}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Newtabs);\r\n"]},"metadata":{},"sourceType":"module"}