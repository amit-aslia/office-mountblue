{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit\\\\Desktop\\\\postman\\\\postman-clone\\\\src\\\\Components\\\\Newtabs.jsx\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport React, { Component } from 'react';\nimport HttpRequest from './HttpRequest';\nimport uuid from 'uuid';\nimport { connect } from 'react-redux';\nimport { addTabHistory } from '../store/actions/tabHistoryActions';\n\nclass Newtabs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      arr: [{\n        id: 1,\n        name: 'GET',\n        content: React.createElement(HttpRequest, {\n          key: uuid,\n          index: 1,\n          auth: this.props.auth,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        })\n      }]\n    };\n\n    this.handleClick = () => {\n      const arr = this.state.arr;\n      const newTabObject = {\n        id: arr.length + 1,\n        name: \"GET\",\n        content: React.createElement(HttpRequest, {\n          key: uuid,\n          index: arr.length + 1,\n          auth: this.props.auth,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        })\n      };\n      this.setState({\n        arr: [...arr, newTabObject]\n      });\n      localStorage.setItem('tabHistory', this.state.arr);\n      const x = JSON.parse(localStorage.getItem('tabHistory'));\n      console.log(x); // this.setState({arr:JSON.parse(localStorage.getItem('tabHistory'))})\n    };\n\n    this.handleDelete = toDelete => {\n      // console.log(toDelete)\n      const arr = this.state.arr;\n      const tabDeleteIndex = arr.findIndex(arr => arr.id === toDelete);\n      const updatedTabs = arr.filter((tab, index) => {\n        return index !== tabDeleteIndex;\n      }); // const previousTab=arr[tabDeleteIndex-1] || arr[tabDeleteIndex+1] ||{};\n\n      this.setState({\n        arr: updatedTabs\n      });\n    };\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem('tabHistory', JSON.stringify(nextState.arr));\n  }\n\n  render() {\n    this.props.addTabHistory(this.state); // const { arr } = this.state;\n\n    const arr = localStorage.getItem('tabHistory');\n    const name = arr.map((data, index) => {\n      return React.createElement(Tab, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tabListStyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, data.name, ' ', React.createElement(\"button\", {\n        onClick: () => this.handleDelete(data.id),\n        className: \"btn tabListButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"X\")));\n    });\n    const content = this.state.arr.map(data => {\n      return React.createElement(TabPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, data.content));\n    });\n    const fun = React.createElement(Tabs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, name, React.createElement(\"button\", {\n      onClick: this.handleClick,\n      className: \"btn newTabOpenButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"+\")), content);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, fun);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTabHistory: tabData => dispatch(addTabHistory(tabData))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    history: state.firestore.ordered.history\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Newtabs);","map":{"version":3,"sources":["C:/Users/Amit/Desktop/postman/postman-clone/src/Components/Newtabs.jsx"],"names":["Tab","Tabs","TabList","TabPanel","React","Component","HttpRequest","uuid","connect","addTabHistory","Newtabs","state","arr","id","name","content","props","auth","handleClick","newTabObject","length","setState","localStorage","setItem","x","JSON","parse","getItem","console","log","handleDelete","toDelete","tabDeleteIndex","findIndex","updatedTabs","filter","tab","index","componentWillUpdate","nextProps","nextState","stringify","render","map","data","fun","mapDispatchToProps","dispatch","tabData","mapStateToProps","firebase","history","firestore","ordered"],"mappings":"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","sourcesContent":["import { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport React, { Component } from 'react';\r\nimport HttpRequest from './HttpRequest';\r\nimport uuid from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport { addTabHistory } from '../store/actions/tabHistoryActions';\r\n\r\nclass Newtabs extends Component {\r\n  state = {\r\n    arr: [\r\n      {\r\n        id: 1,\r\n        name: 'GET',\r\n        content: <HttpRequest key={uuid} index={1} auth={this.props.auth} />\r\n      }\r\n    ]\r\n  };\r\n  componentWillUpdate(nextProps, nextState) {\r\n    localStorage.setItem('tabHistory', JSON.stringify(nextState.arr));\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { arr } = this.state;\r\n    const newTabObject = {\r\n      id: arr.length + 1,\r\n      name: `GET`,\r\n      content: (\r\n        <HttpRequest key={uuid} index={arr.length + 1} auth={this.props.auth} />\r\n      )\r\n    };\r\n    this.setState({\r\n      arr: [...arr, newTabObject]\r\n    });\r\n    localStorage.setItem('tabHistory', this.state.arr);\r\n    const x = JSON.parse(localStorage.getItem('tabHistory'));\r\n    console.log(x);\r\n\r\n    // this.setState({arr:JSON.parse(localStorage.getItem('tabHistory'))})\r\n  };\r\n\r\n  handleDelete = (toDelete) => {\r\n    // console.log(toDelete)\r\n    const { arr } = this.state;\r\n    const tabDeleteIndex = arr.findIndex((arr) => arr.id === toDelete);\r\n    const updatedTabs = arr.filter((tab, index) => {\r\n      return index !== tabDeleteIndex;\r\n    });\r\n    // const previousTab=arr[tabDeleteIndex-1] || arr[tabDeleteIndex+1] ||{};\r\n    this.setState({\r\n      arr: updatedTabs\r\n    });\r\n  };\r\n  render() {\r\n    this.props.addTabHistory(this.state);\r\n\r\n    // const { arr } = this.state;\r\n    const arr = localStorage.getItem('tabHistory');\r\n    const name = arr.map((data, index) => {\r\n      return (\r\n        <Tab>\r\n          <div className=\"tabListStyle\">\r\n            {data.name}{' '}\r\n            <button\r\n              onClick={() => this.handleDelete(data.id)}\r\n              className=\"btn tabListButton\"\r\n            >\r\n              X\r\n            </button>\r\n          </div>\r\n        </Tab>\r\n      );\r\n    });\r\n    const content = this.state.arr.map((data) => {\r\n      return (\r\n        <TabPanel>\r\n          <h2>{data.content}</h2>\r\n        </TabPanel>\r\n      );\r\n    });\r\n\r\n    const fun = (\r\n      <Tabs>\r\n        <TabList>\r\n          {name}\r\n          <button onClick={this.handleClick} className=\"btn newTabOpenButton\">\r\n            +\r\n          </button>\r\n        </TabList>\r\n\r\n        {content}\r\n      </Tabs>\r\n    );\r\n\r\n    return <div>{fun}</div>;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTabHistory: (tabData) => dispatch(addTabHistory(tabData))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    history: state.firestore.ordered.history\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Newtabs);\r\n"]},"metadata":{},"sourceType":"module"}